openapi: 3.0.3
info:
  title: tls-api
  version: 1.0.0
  description: REST API OpenAPI documentation for the tls-api
paths:
  /digital_certificates/certificates:
    get:
      operationId: list certificates
      description: List all certificates owned by your account.
      summary: List certificates
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, certificate, issuer, validity, subject_name, type, managed, status, status_detail, csr, key_algorithm, challenge, authority, active, product_version, last_editor, last_modified, renewed_at)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Digital Certificates - Certificates
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCertificateList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
    post:
      operationId: create certificate
      description: Create a new certificate for your account.
      summary: Create a certificate
      tags:
      - Digital Certificates - Certificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCertificate'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
  /digital_certificates/certificates/{id}:
    get:
      operationId: retrive certificate
      description: Retrieve details from a specific certificate in your account.
      summary: Retrieve details from a certificate
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[1-9][0-9]*$
        required: true
      tags:
      - Digital Certificates - Certificates
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveCertificate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
    put:
      operationId: update certificate
      description: Update an existing certificate. This replaces the entire certificate
        with the new data provided.
      summary: Update a certificate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[1-9][0-9]*$
        required: true
      tags:
      - Digital Certificates - Certificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificate'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestCertificate'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificate'
          description: Accepted
    patch:
      operationId: partial update certificate
      description: Update one or more fields of an existing certificate without affecting
        other fields.
      summary: Partially update a certificate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[1-9][0-9]*$
        required: true
      tags:
      - Digital Certificates - Certificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCertificateRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificate'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestCertificate'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificate'
          description: Accepted
    delete:
      operationId: destroy certificate
      description: Destruction of a specific certificate in your account.
      summary: Destroy a certificate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[1-9][0-9]*$
        required: true
      tags:
      - Digital Certificates - Certificates
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteCertificate'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteCertificate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
  /digital_certificates/certificates/request:
    post:
      operationId: request a certificate
      description: Request a new certificate for your account.
      summary: Request a certificate
      tags:
      - Digital Certificates - Request a Certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequestRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCertificate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
  /digital_certificates/crls:
    get:
      operationId: list certificate revocation lists (CRL)
      description: List all certificate revocation lists (CRL) owned by your account.
      summary: List certificate revocation lists (CRL)
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: name, active, last_editor, last_modified, product_version, issuer, last_update, next_update, crl)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Digital Certificates - Certificate Revocation Lists
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCertificateRevocationListList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
    post:
      operationId: create certificate revocation lists (CRL)
      description: Create a new certificate revocation lists (CRL) for your account.
      summary: Create a certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRevocationListRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCertificateRevocationList'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificateRevocationList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
  /digital_certificates/crls/{id}:
    get:
      operationId: retrive certificate revocation lists (CRL)
      description: Retrieve details from a specific certificate revocation lists (CRL)
        in your account.
      summary: Retrieve details from a certificate revocation lists (CRL)
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Digital Certificates - Certificate Revocation Lists
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveCertificateRevocationList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
    put:
      operationId: update certificate revocation lists (CRL)
      description: Update an existing certificate revocation lists (CRL).  This replaces
        the entire certificate with the new data provided.
      summary: Update a certificate revocation lists (CRL)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Digital Certificates - Certificate Revocation Lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRevocationListRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCertificateRevocationList'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificateRevocationList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
    patch:
      operationId: partial update certificate revocation lists (CRL)
      description: Update one or more fields of an existing certificate revocation
        lists (CRL) without affecting other fields.
      summary: Update a certificate revocation lists (CRL)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Digital Certificates - Certificate Revocation Lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCertificateRevocationListRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCertificateRevocationList'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncCertificateRevocationList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
    delete:
      operationId: destroy certificate revocation lists (CRL)
      description: Destruction of a specific certificate revocation lists (CRL) in
        your account.
      summary: Destroy a certificate revocation lists (CRL)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Digital Certificates - Certificate Revocation Lists
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteCertificateRevocationList'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteCertificateRevocationList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
  /digital_certificates/csr:
    post:
      operationId: create certificate signing request (CSR)
      description: Create a new certificate signing request (CSR) for your account.
      summary: Create a certificate signing request (CSR)
      tags:
      - Digital Certificates - Certificate Signing Requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateSigningRequestRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCertificate'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
components:
  schemas:
    AuthorityEnum:
      enum:
      - lets_encrypt
      type: string
      description: '* `lets_encrypt` - lets_encrypt'
      title: AuthorityEnum
      additionalProperties: false
    Certificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 250
          minLength: 1
        certificate:
          type: string
          nullable: true
          pattern: .*
          maxLength: 600000
          minLength: 1
        issuer:
          type: string
          readOnly: true
          nullable: true
          pattern: .*
        subject_name:
          type: array
          items:
            type: string
          readOnly: true
        validity:
          type: string
          readOnly: true
          nullable: true
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          default: edge_certificate
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        managed:
          type: boolean
          readOnly: true
          default: false
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        status_detail:
          type: string
          readOnly: true
          default: ''
          pattern: .*
          maxLength: 500
          minLength: 0
        csr:
          type: string
          readOnly: true
          nullable: true
          pattern: .*
        challenge:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ChallengeEnum'
          - $ref: '#/components/schemas/NullEnum'
        authority:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AuthorityEnum'
          - $ref: '#/components/schemas/NullEnum'
        key_algorithm:
          type: string
          readOnly: true
          pattern: .*
        active:
          type: boolean
        product_version:
          type: string
          readOnly: true
          pattern: \d+\.\d+
          maxLength: 50
          minLength: 3
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last modification made to the certificate
            content on the platform.
        renewed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Timestamp indicating when the managed certificate was renewed
            on our platform.
      required:
      - authority
      - challenge
      - csr
      - id
      - issuer
      - key_algorithm
      - last_editor
      - last_modified
      - managed
      - name
      - product_version
      - renewed_at
      - status
      - status_detail
      - subject_name
      - validity
      title: Certificate
      additionalProperties: false
    CertificateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 250
        certificate:
          type: string
          nullable: true
          pattern: .*
          maxLength: 600000
          minLength: 1
        private_key:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
          pattern: .*
          maxLength: 64000
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          default: edge_certificate
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        active:
          type: boolean
      required:
      - name
      title: CertificateRequest
      additionalProperties: false
    CertificateRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 250
        certificate:
          type: string
          nullable: true
          pattern: .*
          maxLength: 600000
          minLength: 1
        private_key:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
          pattern: .*
          maxLength: 64000
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          default: edge_certificate
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        challenge:
          $ref: '#/components/schemas/ChallengeEnum'
        authority:
          $ref: '#/components/schemas/AuthorityEnum'
        key_algorithm:
          allOf:
          - $ref: '#/components/schemas/KeyAlgorithmEnum'
          default: ecc_384
        active:
          type: boolean
        common_name:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 64
          pattern: ^(((\*\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$
        alternative_names:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 250
            pattern: ^(((\*\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$
          writeOnly: true
        source_certificate:
          type: integer
          maximum: 2147483647
          minimum: 1
          writeOnly: true
          nullable: true
      required:
      - authority
      - challenge
      - common_name
      - name
      title: CertificateRequestRequest
      additionalProperties: false
    CertificateRevocationList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 250
          minLength: 1
        active:
          type: boolean
          default: true
          description: Indicates if the certificate revocation list is active. This
            field cannot be set to false.
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last modification made to the certificate
            content on the platform.
        product_version:
          type: string
          readOnly: true
          pattern: \d+\.\d+
          maxLength: 50
          minLength: 3
        issuer:
          type: string
          readOnly: true
          minLength: 1
        last_update:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last update issued by the certification revocation
            list issuer.
        next_update:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the next scheduled update from the certification
            revocation list issuer.
        crl:
          type: string
          pattern: .*
          maxLength: 30720000
          minLength: 1
      required:
      - crl
      - id
      - issuer
      - last_editor
      - last_modified
      - last_update
      - name
      - next_update
      - product_version
      title: CertificateRevocationList
      additionalProperties: false
    CertificateRevocationListRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 250
        active:
          type: boolean
          default: true
          description: Indicates if the certificate revocation list is active. This
            field cannot be set to false.
        crl:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 30720000
      required:
      - crl
      - name
      title: CertificateRevocationListRequest
      additionalProperties: false
    CertificateSigningRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 250
        certificate:
          type: string
          nullable: true
          pattern: .*
          maxLength: 600000
          minLength: 1
        private_key:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
          pattern: .*
          maxLength: 64000
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          default: edge_certificate
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        key_algorithm:
          allOf:
          - $ref: '#/components/schemas/KeyAlgorithmEnum'
          default: rsa_2048
        active:
          type: boolean
        common_name:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 250
          pattern: ^(((\*\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$
        alternative_names:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 250
            pattern: ^(((\*\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$
          writeOnly: true
        country:
          type: string
          writeOnly: true
          minLength: 2
          pattern: '[a-zA-Z]{2}'
          maxLength: 2
        state:
          type: string
          writeOnly: true
          minLength: 1
          pattern: .*
          maxLength: 250
        locality:
          type: string
          writeOnly: true
          minLength: 1
          pattern: .*
          maxLength: 250
        organization:
          type: string
          writeOnly: true
          minLength: 1
          pattern: .*
          maxLength: 250
        organization_unity:
          type: string
          writeOnly: true
          minLength: 1
          pattern: .*
          maxLength: 250
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
      required:
      - common_name
      - country
      - email
      - locality
      - name
      - organization
      - organization_unity
      - state
      title: CertificateSigningRequestRequest
      additionalProperties: false
    ChallengeEnum:
      enum:
      - dns
      - http
      type: string
      description: |-
        * `dns` - Uses DNS to solve the ACME challenge.
        * `http` - Uses HTTP to solve the ACME challenge.
      title: ChallengeEnum
      additionalProperties: false
    DefaultErrorResponse:
      type: object
      properties:
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: DefaultErrorResponse
      additionalProperties: false
    JSONAPIErrorObject:
      type: object
      description: Serializer for a single JSON:API error object.
      properties:
        status:
          type: string
          description: The HTTP status code applicable to this problem
          pattern: ^\d{3}$
          maxLength: 3
          minLength: 3
        code:
          type: string
          description: An application-specific error code
          pattern: ^\d{5}$
          maxLength: 5
          minLength: 5
        title:
          type: string
          description: A short, human-readable summary of the problem
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
        source:
          allOf:
          - $ref: '#/components/schemas/JSONAPIErrorSource'
          description: References to the primary source of the error
        meta:
          description: Non-standard meta-information about the error
      title: JSONAPIErrorObject
      additionalProperties: false
    JSONAPIErrorResponse:
      type: object
      description: Serializer for a JSON:API error response.
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JSONAPIErrorObject'
          description: Array of error objects
      required:
      - errors
      title: JSONAPIErrorResponse
      additionalProperties: false
    JSONAPIErrorSource:
      type: object
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          type: string
          description: JSON Pointer to the value in the request document that caused
            the error
          pattern: ^(/[^/]+)+$
          maxLength: 4096
          minLength: 1
        parameter:
          type: string
          description: URI query parameter that caused the error
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
        header:
          type: string
          description: Request header name that caused the error
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
      title: JSONAPIErrorSource
      additionalProperties: false
    KeyAlgorithmEnum:
      enum:
      - rsa_2048
      - rsa_4096
      - ecc_384
      type: string
      description: |-
        * `rsa_2048` - 2048-bit RSA
        * `rsa_4096` - 4096-bit RSA
        * `ecc_384` - 384-bit Prime Field Curve
      title: KeyAlgorithmEnum
      additionalProperties: false
    NullEnum:
      enum:
      - null
      title: NullEnum
      additionalProperties: false
    PaginatedCertificateList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
      title: PaginatedCertificateList
      additionalProperties: false
    PaginatedCertificateRevocationListList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/CertificateRevocationList'
      title: PaginatedCertificateRevocationListList
      additionalProperties: false
    PatchedCertificateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 250
        certificate:
          type: string
          nullable: true
          pattern: .*
          maxLength: 600000
          minLength: 1
        private_key:
          type: string
          writeOnly: true
          nullable: true
          minLength: 1
          pattern: .*
          maxLength: 64000
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          default: edge_certificate
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        active:
          type: boolean
      title: PatchedCertificateRequest
      additionalProperties: false
    PatchedCertificateRevocationListRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 250
        active:
          type: boolean
          default: true
          description: Indicates if the certificate revocation list is active. This
            field cannot be set to false.
        crl:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 30720000
      title: PatchedCertificateRevocationListRequest
      additionalProperties: false
    ResponseAsyncCertificate:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/Certificate'
      required:
      - data
      title: ResponseAsyncCertificate
      additionalProperties: false
    ResponseAsyncCertificateRevocationList:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/CertificateRevocationList'
      required:
      - data
      title: ResponseAsyncCertificateRevocationList
      additionalProperties: false
    ResponseAsyncDeleteCertificate:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteCertificate
      additionalProperties: false
    ResponseAsyncDeleteCertificateRevocationList:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteCertificateRevocationList
      additionalProperties: false
    ResponseBadRequestCertificate:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        name:
          type: array
          items:
            type: string
        certificate:
          type: array
          items:
            type: string
        private_key:
          type: array
          items:
            type: string
        issuer:
          type: array
          items:
            type: string
        validity:
          type: array
          items:
            type: string
        subject_name:
          oneOf:
          - type: array
            items:
              type: string
          - type: object
            additionalProperties:
              type: array
              items:
                type: string
        type:
          type: array
          items:
            type: string
        managed:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            type: string
        status_detail:
          type: array
          items:
            type: string
        csr:
          type: array
          items:
            type: string
        key_algorithm:
          type: array
          items:
            type: string
        challenge:
          type: array
          items:
            type: string
        authority:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        product_version:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        renewed_at:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestCertificate
      additionalProperties: false
    ResponseCertificate:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/Certificate'
      required:
      - data
      title: ResponseCertificate
      additionalProperties: false
    ResponseCertificateRevocationList:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/CertificateRevocationList'
      required:
      - data
      title: ResponseCertificateRevocationList
      additionalProperties: false
    ResponseDeleteCertificate:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseDeleteCertificate
      additionalProperties: false
    ResponseDeleteCertificateRevocationList:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseDeleteCertificateRevocationList
      additionalProperties: false
    ResponseRetrieveCertificate:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Certificate'
      required:
      - data
      title: ResponseRetrieveCertificate
      additionalProperties: false
    ResponseRetrieveCertificateRevocationList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CertificateRevocationList'
      required:
      - data
      title: ResponseRetrieveCertificateRevocationList
      additionalProperties: false
    StatusEnum:
      enum:
      - challenge_verification
      - active
      - pending
      - failed
      type: string
      description: |-
        * `challenge_verification` - Challenge Verification
        * `active` - Active
        * `pending` - Pending
        * `failed` - Failed
      title: StatusEnum
      additionalProperties: false
    TypeEnum:
      enum:
      - edge_certificate
      - trusted_ca_certificate
      type: string
      description: |-
        * `edge_certificate` - Edge Certificate
        * `trusted_ca_certificate` - Trusted CA Certificate
      title: TypeEnum
      additionalProperties: false
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
