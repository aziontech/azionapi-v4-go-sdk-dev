openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the Storage
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-v4-openapi/blob/main/LICENSE
  title: storage-api
  version: 1.0.0 (v1)
servers:
- url: /
paths:
  /edge_storage/buckets:
    get:
      description: List all buckets.
      operationId: listBuckets
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBucketList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List buckets
      tags:
      - Edge Storage - Buckets
    post:
      description: Create a new bucket.
      operationId: createBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BucketCreateRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBucketCreate"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncBucketCreate"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a new bucket
      tags:
      - Edge Storage - Buckets
  /edge_storage/buckets/{bucketName}/objects:
    get:
      description: List buckets objects
      operationId: listObjectKeys
      parameters:
      - explode: false
        in: path
        name: bucketName
        required: true
        schema:
          type: string
        style: simple
      - description: A continuation token for the next page of records.
        explode: true
        in: query
        name: continuation_token
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to be returned on the page. Limited to 1000
          objects.
        explode: true
        in: query
        name: max_object_count
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseBucketObjectList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List buckets objects
      tags:
      - Edge Storage - Objects
  /edge_storage/buckets/{bucketName}/objects/{objectKey}:
    delete:
      description: "Upon a successful deletion request, the object will be permanentlydeleted\
        \ after a 24-hour grace period."
      operationId: deleteObjectKey
      parameters:
      - explode: false
        in: path
        name: bucketName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: objectKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteBucketObject"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteBucketObject"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Delete object key
      tags:
      - Edge Storage - Objects
    get:
      description: Download the object key from bucket.
      operationId: downloadObject
      parameters:
      - explode: false
        in: path
        name: bucketName
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Download object
      tags:
      - Edge Storage - Objects
    post:
      description: "Create a new object key in the bucket. The object's Content-Type\
        \ is defined by the Content-Type header. If this header is not included, the\
        \ Content-Type will be automatically detected."
      operationId: createObjectKey
      parameters:
      - description: "The content type of the file (Example: application/octet-stream)."
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bucketName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: objectKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessObjectOperation"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessObjectOperationAsync"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create new object key.
      tags:
      - Edge Storage - Objects
    put:
      description: "Update the object key from bucket. The object's Content-Type is\
        \ defined by the Content-Type header. If this header is not included, the\
        \ Content-Type will be automatically detected."
      operationId: updateObjectKey
      parameters:
      - description: "The content type of the file (Example: application/octet-stream)."
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bucketName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: objectKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessObjectOperation"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessObjectOperationAsync"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update the object key.
      tags:
      - Edge Storage - Objects
  /edge_storage/buckets/{name}:
    delete:
      description: Delete a specific bucket.
      operationId: deleteBucket
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteBucketCreate"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteBucketCreate"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Delete a bucket
      tags:
      - Edge Storage - Buckets
    get:
      description: Retrieve details from a specific bucket.
      operationId: retrieveBucket
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveBucket"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestBucket"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a bucket
      tags:
      - Edge Storage - Buckets
    patch:
      description: Update bucket information (bucket name cannot be changed)
      operationId: updateBucket
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedBucketRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBucketCreate"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncBucketCreate"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update bucket info
      tags:
      - Edge Storage - Buckets
  /edge_storage/credentials:
    get:
      description: List all credentials.
      operationId: listCredentials
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseListCredentialList"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCredential"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List credentials
      tags:
      - Edge Storage - Credentials
    post:
      description: Create a new credential.
      operationId: createCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialCreateRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCredential"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCredential"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a new credential
      tags:
      - Edge Storage - Credentials
  /edge_storage/credentials/{id}:
    delete:
      description: Delete a specific credential.
      operationId: deleteCredential
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCredential"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCredential"
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCredential"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Delete a credential
      tags:
      - Edge Storage - Credentials
    get:
      description: Retrieve details from a specific credential.
      operationId: retrieveCredential
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCredential"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCredential"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a credential
      tags:
      - Edge Storage - Credentials
components:
  schemas:
    Bucket:
      additionalProperties: false
      example:
        product_version: product_version
        edge_access: edge_access
        last_editor: last_editor
        name: name
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 63
          minLength: 6
          type: string
        edge_access:
          description: |-
            * `read_only` - read_only
            * `read_write` - read_write
            * `restricted` - restricted
          title: EdgeAccessEnum
          type: string
        last_editor:
          type: string
        last_modified:
          format: date-time
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          type: string
      required:
      - edge_access
      - last_editor
      - last_modified
      - name
      - product_version
      title: Bucket
      type: object
    BucketCreate:
      additionalProperties: false
      example:
        product_version: product_version
        edge_access: edge_access
        last_editor: last_editor
        name: name
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 63
          minLength: 6
          type: string
        edge_access:
          description: |-
            * `read_only` - read_only
            * `read_write` - read_write
            * `restricted` - restricted
          title: EdgeAccessEnum
          type: string
        last_editor:
          type: string
        last_modified:
          format: date-time
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          type: string
      required:
      - edge_access
      - last_editor
      - last_modified
      - name
      - product_version
      title: BucketCreate
      type: object
    BucketCreateRequest:
      additionalProperties: false
      example:
        edge_access: edge_access
        name: name
      properties:
        name:
          maxLength: 63
          minLength: 6
          type: string
        edge_access:
          description: |-
            * `read_only` - read_only
            * `read_write` - read_write
            * `restricted` - restricted
          title: EdgeAccessEnum
          type: string
      required:
      - edge_access
      - name
      title: BucketCreateRequest
      type: object
    BucketObject:
      additionalProperties: false
      example:
        size: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        key:
          type: string
        last_modified:
          format: date-time
          type: string
        size:
          description: Size of the object in bytes
          format: int64
          type: integer
      required:
      - key
      - last_modified
      - size
      title: BucketObject
      type: object
    CapabilitiesEnum:
      title: CapabilitiesEnum
      type: string
    Credential:
      additionalProperties: false
      example:
        bucket: bucket
        secret_key: secret_key
        capabilities:
        - null
        - null
        access_key: access_key
        last_editor: last_editor
        name: name
        expiration_date: 2000-01-23T04:56:07.000+00:00
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        access_key:
          type: string
        secret_key:
          type: string
        capabilities:
          items:
            $ref: "#/components/schemas/CapabilitiesEnum"
          type: array
        bucket:
          maxLength: 63
          minLength: 6
          type: string
        expiration_date:
          format: date-time
          type: string
        last_editor:
          nullable: true
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - access_key
      - capabilities
      - last_editor
      - last_modified
      - name
      - secret_key
      title: Credential
      type: object
    CredentialCreateRequest:
      additionalProperties: false
      example:
        bucket: bucket
        capabilities:
        - null
        - null
        name: name
        expiration_date: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        capabilities:
          items:
            $ref: "#/components/schemas/CapabilitiesEnum"
          type: array
        bucket:
          maxLength: 63
          minLength: 6
          type: string
        expiration_date:
          format: date-time
          type: string
      required:
      - capabilities
      - name
      title: CredentialCreateRequest
      type: object
    DefaultErrorResponse:
      additionalProperties: false
      example:
        detail: detail
      properties:
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: DefaultErrorResponse
      type: object
    EdgeAccessEnum:
      description: |-
        * `read_only` - read_only
        * `read_write` - read_write
        * `restricted` - restricted
      title: EdgeAccessEnum
      type: string
    JSONAPIErrorObject:
      additionalProperties: false
      description: Serializer for a single JSON:API error object.
      example:
        code: code
        meta: ""
        detail: detail
        source: ""
        title: title
        status: status
      properties:
        status:
          description: The HTTP status code applicable to this problem
          maxLength: 3
          minLength: 3
          type: string
        code:
          description: An application-specific error code
          maxLength: 5
          minLength: 5
          type: string
        title:
          description: "A short, human-readable summary of the problem"
          maxLength: 4096
          minLength: 1
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          maxLength: 4096
          minLength: 1
          type: string
        source:
          allOf:
          - $ref: "#/components/schemas/JSONAPIErrorSource"
          description: References to the primary source of the error
        meta:
          description: Non-standard meta-information about the error
      title: JSONAPIErrorObject
      type: object
    JSONAPIErrorResponse:
      additionalProperties: false
      description: Serializer for a JSON:API error response.
      example:
        errors:
        - code: code
          meta: ""
          detail: detail
          source: ""
          title: title
          status: status
        - code: code
          meta: ""
          detail: detail
          source: ""
          title: title
          status: status
      properties:
        errors:
          description: Array of error objects
          items:
            $ref: "#/components/schemas/JSONAPIErrorObject"
          type: array
      required:
      - errors
      title: JSONAPIErrorResponse
      type: object
    JSONAPIErrorSource:
      additionalProperties: false
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          description: JSON Pointer to the value in the request document that caused
            the error
          maxLength: 4096
          minLength: 1
          type: string
        parameter:
          description: URI query parameter that caused the error
          maxLength: 4096
          minLength: 1
          type: string
        header:
          description: Request header name that caused the error
          maxLength: 4096
          minLength: 1
          type: string
      title: JSONAPIErrorSource
      type: object
    ObjectResponseAsyncData:
      additionalProperties: false
      example:
        object_key: object_key
      properties:
        object_key:
          maxLength: 1024
          minLength: 1
          type: string
      required:
      - object_key
      title: ObjectResponseAsyncData
      type: object
    ObjectResponseData:
      additionalProperties: false
      example:
        object_key: object_key
      properties:
        object_key:
          maxLength: 1024
          minLength: 1
          type: string
      required:
      - object_key
      title: ObjectResponseData
      type: object
    PaginatedBucketList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          edge_access: edge_access
          last_editor: last_editor
          name: name
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          edge_access: edge_access
          last_editor: last_editor
          name: name
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/Bucket"
          type: array
      title: PaginatedBucketList
      type: object
    PaginatedResponseBucketObjectList:
      additionalProperties: false
      items:
        $ref: "#/components/schemas/ResponseBucketObject"
      title: PaginatedResponseBucketObjectList
      type: array
    PaginatedResponseListCredentialList:
      additionalProperties: false
      example:
        count: 123
        results:
        - bucket: bucket
          secret_key: secret_key
          capabilities:
          - null
          - null
          access_key: access_key
          last_editor: last_editor
          name: name
          expiration_date: 2000-01-23T04:56:07.000+00:00
          last_modified: 2000-01-23T04:56:07.000+00:00
        - bucket: bucket
          secret_key: secret_key
          capabilities:
          - null
          - null
          access_key: access_key
          last_editor: last_editor
          name: name
          expiration_date: 2000-01-23T04:56:07.000+00:00
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ResponseListCredential"
          type: array
      title: PaginatedResponseListCredentialList
      type: object
    PatchedBucketRequest:
      additionalProperties: false
      example:
        edge_access: edge_access
      properties:
        edge_access:
          description: |-
            * `read_only` - read_only
            * `read_write` - read_write
            * `restricted` - restricted
          title: EdgeAccessEnum
          type: string
      title: PatchedBucketRequest
      type: object
    ResponseAsyncBucketCreate:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          edge_access: edge_access
          last_editor: last_editor
          name: name
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/BucketCreate"
      required:
      - data
      title: ResponseAsyncBucketCreate
      type: object
    ResponseAsyncCredential:
      additionalProperties: false
      example:
        data:
          bucket: bucket
          secret_key: secret_key
          capabilities:
          - null
          - null
          access_key: access_key
          last_editor: last_editor
          name: name
          expiration_date: 2000-01-23T04:56:07.000+00:00
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Credential"
      required:
      - data
      title: ResponseAsyncCredential
      type: object
    ResponseAsyncDeleteBucketCreate:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteBucketCreate
      type: object
    ResponseAsyncDeleteBucketObject:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteBucketObject
      type: object
    ResponseAsyncDeleteCredential:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteCredential
      type: object
    ResponseBadRequestBucket:
      additionalProperties: false
      example:
        product_version:
        - product_version
        - product_version
        edge_access:
        - edge_access
        - edge_access
        last_editor:
        - last_editor
        - last_editor
        name:
        - name
        - name
        detail: detail
        last_modified:
        - last_modified
        - last_modified
      properties:
        name:
          items:
            type: string
          type: array
        edge_access:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        product_version:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: ResponseBadRequestBucket
      type: object
    ResponseBadRequestCredential:
      additionalProperties: false
      example:
        bucket:
        - bucket
        - bucket
        capabilities:
        - ResponseBadRequestCredential_capabilities
        - ResponseBadRequestCredential_capabilities
        name:
        - name
        - name
        detail: detail
        expiration_date:
        - expiration_date
        - expiration_date
        last_modified:
        - last_modified
        - last_modified
      properties:
        name:
          items:
            type: string
          type: array
        expiration_date:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        capabilities:
          $ref: "#/components/schemas/ResponseBadRequestCredential_capabilities"
        bucket:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: ResponseBadRequestCredential
      type: object
    ResponseBucketCreate:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          edge_access: edge_access
          last_editor: last_editor
          name: name
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/BucketCreate"
      required:
      - data
      title: ResponseBucketCreate
      type: object
    ResponseBucketObject:
      additionalProperties: false
      example:
        continuation_token: continuation_token
        results:
        - size: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          key: key
        - size: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        continuation_token:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        results:
          items:
            $ref: "#/components/schemas/BucketObject"
          type: array
      required:
      - continuation_token
      - results
      title: ResponseBucketObject
      type: object
    ResponseCredential:
      additionalProperties: false
      example:
        data:
          bucket: bucket
          secret_key: secret_key
          capabilities:
          - null
          - null
          access_key: access_key
          last_editor: last_editor
          name: name
          expiration_date: 2000-01-23T04:56:07.000+00:00
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Credential"
      required:
      - data
      title: ResponseCredential
      type: object
    ResponseDeleteBucketCreate:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteBucketCreate
      type: object
    ResponseDeleteBucketObject:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteBucketObject
      type: object
    ResponseListCredential:
      additionalProperties: false
      example:
        bucket: bucket
        secret_key: secret_key
        capabilities:
        - null
        - null
        access_key: access_key
        last_editor: last_editor
        name: name
        expiration_date: 2000-01-23T04:56:07.000+00:00
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        access_key:
          type: string
        secret_key:
          type: string
        capabilities:
          items:
            $ref: "#/components/schemas/CapabilitiesEnum"
          type: array
        bucket:
          maxLength: 63
          minLength: 6
          type: string
        expiration_date:
          format: date-time
          type: string
        last_editor:
          nullable: true
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - access_key
      - capabilities
      - last_editor
      - last_modified
      - name
      - secret_key
      title: ResponseListCredential
      type: object
    ResponseRetrieveBucket:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          edge_access: edge_access
          last_editor: last_editor
          name: name
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/Bucket"
      required:
      - data
      title: ResponseRetrieveBucket
      type: object
    ResponseRetrieveCredential:
      additionalProperties: false
      example:
        data:
          bucket: bucket
          secret_key: secret_key
          capabilities:
          - null
          - null
          access_key: access_key
          last_editor: last_editor
          name: name
          expiration_date: 2000-01-23T04:56:07.000+00:00
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/Credential"
      required:
      - data
      title: ResponseRetrieveCredential
      type: object
    SuccessObjectOperation:
      additionalProperties: false
      example:
        data:
          object_key: object_key
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ObjectResponseData"
      required:
      - data
      title: SuccessObjectOperation
      type: object
    SuccessObjectOperationAsync:
      additionalProperties: false
      example:
        data:
          object_key: object_key
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ObjectResponseAsyncData"
      required:
      - data
      title: SuccessObjectOperationAsync
      type: object
    ResponseBadRequestCredential_capabilities:
      oneOf:
      - items:
          type: string
        type: array
      - additionalProperties:
          items:
            type: string
          type: array
        type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    TokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
