/*
storage-api

REST API OpenAPI documentation for the Storage

API version: 1.0.0 (v1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storageapi

import (
	"encoding/json"
)

// checks if the PatchedBucketRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedBucketRequest{}

// PatchedBucketRequest struct for PatchedBucketRequest
type PatchedBucketRequest struct {
	// * `read_only` - read_only * `read_write` - read_write * `restricted` - restricted
	EdgeAccess *string `json:"edge_access,omitempty"`
}

// NewPatchedBucketRequest instantiates a new PatchedBucketRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedBucketRequest() *PatchedBucketRequest {
	this := PatchedBucketRequest{}
	return &this
}

// NewPatchedBucketRequestWithDefaults instantiates a new PatchedBucketRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedBucketRequestWithDefaults() *PatchedBucketRequest {
	this := PatchedBucketRequest{}
	return &this
}

// GetEdgeAccess returns the EdgeAccess field value if set, zero value otherwise.
func (o *PatchedBucketRequest) GetEdgeAccess() string {
	if o == nil || IsNil(o.EdgeAccess) {
		var ret string
		return ret
	}
	return *o.EdgeAccess
}

// GetEdgeAccessOk returns a tuple with the EdgeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBucketRequest) GetEdgeAccessOk() (*string, bool) {
	if o == nil || IsNil(o.EdgeAccess) {
		return nil, false
	}
	return o.EdgeAccess, true
}

// HasEdgeAccess returns a boolean if a field has been set.
func (o *PatchedBucketRequest) HasEdgeAccess() bool {
	if o != nil && !IsNil(o.EdgeAccess) {
		return true
	}

	return false
}

// SetEdgeAccess gets a reference to the given string and assigns it to the EdgeAccess field.
func (o *PatchedBucketRequest) SetEdgeAccess(v string) {
	o.EdgeAccess = &v
}

func (o PatchedBucketRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedBucketRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EdgeAccess) {
		toSerialize["edge_access"] = o.EdgeAccess
	}
	return toSerialize, nil
}

type NullablePatchedBucketRequest struct {
	value *PatchedBucketRequest
	isSet bool
}

func (v NullablePatchedBucketRequest) Get() *PatchedBucketRequest {
	return v.value
}

func (v *NullablePatchedBucketRequest) Set(val *PatchedBucketRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedBucketRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedBucketRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedBucketRequest(val *PatchedBucketRequest) *NullablePatchedBucketRequest {
	return &NullablePatchedBucketRequest{value: val, isSet: true}
}

func (v NullablePatchedBucketRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedBucketRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


