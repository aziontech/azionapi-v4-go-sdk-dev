/*
storage-api

REST API OpenAPI documentation for the Storage

API version: 1.0.0 (v1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storageapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BucketCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketCreateRequest{}

// BucketCreateRequest struct for BucketCreateRequest
type BucketCreateRequest struct {
	Name string `json:"name"`
	// * `read_only` - read_only * `read_write` - read_write * `restricted` - restricted
	EdgeAccess string `json:"edge_access"`
}

type _BucketCreateRequest BucketCreateRequest

// NewBucketCreateRequest instantiates a new BucketCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketCreateRequest(name string, edgeAccess string) *BucketCreateRequest {
	this := BucketCreateRequest{}
	this.Name = name
	this.EdgeAccess = edgeAccess
	return &this
}

// NewBucketCreateRequestWithDefaults instantiates a new BucketCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketCreateRequestWithDefaults() *BucketCreateRequest {
	this := BucketCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *BucketCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BucketCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BucketCreateRequest) SetName(v string) {
	o.Name = v
}

// GetEdgeAccess returns the EdgeAccess field value
func (o *BucketCreateRequest) GetEdgeAccess() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EdgeAccess
}

// GetEdgeAccessOk returns a tuple with the EdgeAccess field value
// and a boolean to check if the value has been set.
func (o *BucketCreateRequest) GetEdgeAccessOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EdgeAccess, true
}

// SetEdgeAccess sets field value
func (o *BucketCreateRequest) SetEdgeAccess(v string) {
	o.EdgeAccess = v
}

func (o BucketCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["edge_access"] = o.EdgeAccess
	return toSerialize, nil
}

func (o *BucketCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"edge_access",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBucketCreateRequest := _BucketCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBucketCreateRequest)

	if err != nil {
		return err
	}

	*o = BucketCreateRequest(varBucketCreateRequest)

	return err
}

type NullableBucketCreateRequest struct {
	value *BucketCreateRequest
	isSet bool
}

func (v NullableBucketCreateRequest) Get() *BucketCreateRequest {
	return v.value
}

func (v *NullableBucketCreateRequest) Set(val *BucketCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketCreateRequest(val *BucketCreateRequest) *NullableBucketCreateRequest {
	return &NullableBucketCreateRequest{value: val, isSet: true}
}

func (v NullableBucketCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


