/*
AI-Studio-API

REST API OpenAPI documentation for the AI-Studio-API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aistudioapi

import (
	"encoding/json"
)

// checks if the DocumentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentRequest{}

// DocumentRequest struct for DocumentRequest
type DocumentRequest struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Type *string `json:"type,omitempty"`
	SourceUri *string `json:"source_uri,omitempty"`
	ChunkStrategy map[string]interface{} `json:"chunk_strategy,omitempty"`
}

// NewDocumentRequest instantiates a new DocumentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentRequest() *DocumentRequest {
	this := DocumentRequest{}
	return &this
}

// NewDocumentRequestWithDefaults instantiates a new DocumentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentRequestWithDefaults() *DocumentRequest {
	this := DocumentRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DocumentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DocumentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DocumentRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DocumentRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DocumentRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DocumentRequest) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DocumentRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DocumentRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DocumentRequest) SetType(v string) {
	o.Type = &v
}

// GetSourceUri returns the SourceUri field value if set, zero value otherwise.
func (o *DocumentRequest) GetSourceUri() string {
	if o == nil || IsNil(o.SourceUri) {
		var ret string
		return ret
	}
	return *o.SourceUri
}

// GetSourceUriOk returns a tuple with the SourceUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentRequest) GetSourceUriOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUri) {
		return nil, false
	}
	return o.SourceUri, true
}

// HasSourceUri returns a boolean if a field has been set.
func (o *DocumentRequest) HasSourceUri() bool {
	if o != nil && !IsNil(o.SourceUri) {
		return true
	}

	return false
}

// SetSourceUri gets a reference to the given string and assigns it to the SourceUri field.
func (o *DocumentRequest) SetSourceUri(v string) {
	o.SourceUri = &v
}

// GetChunkStrategy returns the ChunkStrategy field value if set, zero value otherwise.
func (o *DocumentRequest) GetChunkStrategy() map[string]interface{} {
	if o == nil || IsNil(o.ChunkStrategy) {
		var ret map[string]interface{}
		return ret
	}
	return o.ChunkStrategy
}

// GetChunkStrategyOk returns a tuple with the ChunkStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentRequest) GetChunkStrategyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ChunkStrategy) {
		return map[string]interface{}{}, false
	}
	return o.ChunkStrategy, true
}

// HasChunkStrategy returns a boolean if a field has been set.
func (o *DocumentRequest) HasChunkStrategy() bool {
	if o != nil && !IsNil(o.ChunkStrategy) {
		return true
	}

	return false
}

// SetChunkStrategy gets a reference to the given map[string]interface{} and assigns it to the ChunkStrategy field.
func (o *DocumentRequest) SetChunkStrategy(v map[string]interface{}) {
	o.ChunkStrategy = v
}

func (o DocumentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SourceUri) {
		toSerialize["source_uri"] = o.SourceUri
	}
	if !IsNil(o.ChunkStrategy) {
		toSerialize["chunk_strategy"] = o.ChunkStrategy
	}
	return toSerialize, nil
}

type NullableDocumentRequest struct {
	value *DocumentRequest
	isSet bool
}

func (v NullableDocumentRequest) Get() *DocumentRequest {
	return v.value
}

func (v *NullableDocumentRequest) Set(val *DocumentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentRequest(val *DocumentRequest) *NullableDocumentRequest {
	return &NullableDocumentRequest{value: val, isSet: true}
}

func (v NullableDocumentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


