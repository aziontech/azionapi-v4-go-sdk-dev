/*
ai-studio-api

Testing AIStudioDocumentsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package aistudioapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_aistudioapi_AIStudioDocumentsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AIStudioDocumentsAPIService CreateDocument", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kbId string

		resp, httpRes, err := apiClient.AIStudioDocumentsAPI.CreateDocument(context.Background(), kbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AIStudioDocumentsAPIService DestroyADocument", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var documentId string
		var kbId string

		resp, httpRes, err := apiClient.AIStudioDocumentsAPI.DestroyADocument(context.Background(), documentId, kbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AIStudioDocumentsAPIService ListDocuments", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kbId string

		resp, httpRes, err := apiClient.AIStudioDocumentsAPI.ListDocuments(context.Background(), kbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AIStudioDocumentsAPIService RetriveDocument", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var documentId string
		var kbId string

		resp, httpRes, err := apiClient.AIStudioDocumentsAPI.RetriveDocument(context.Background(), documentId, kbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AIStudioDocumentsAPIService UpdateDocument", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var documentId string
		var kbId string

		resp, httpRes, err := apiClient.AIStudioDocumentsAPI.UpdateDocument(context.Background(), documentId, kbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
