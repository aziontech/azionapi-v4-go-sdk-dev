/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestSerializerMetaclassStrategyField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestSerializerMetaclassStrategyField{}

// ResponseBadRequestSerializerMetaclassStrategyField struct for ResponseBadRequestSerializerMetaclassStrategyField
type ResponseBadRequestSerializerMetaclassStrategyField struct {
	Type []string `json:"type,omitempty"`
}

// NewResponseBadRequestSerializerMetaclassStrategyField instantiates a new ResponseBadRequestSerializerMetaclassStrategyField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestSerializerMetaclassStrategyField() *ResponseBadRequestSerializerMetaclassStrategyField {
	this := ResponseBadRequestSerializerMetaclassStrategyField{}
	return &this
}

// NewResponseBadRequestSerializerMetaclassStrategyFieldWithDefaults instantiates a new ResponseBadRequestSerializerMetaclassStrategyField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestSerializerMetaclassStrategyFieldWithDefaults() *ResponseBadRequestSerializerMetaclassStrategyField {
	this := ResponseBadRequestSerializerMetaclassStrategyField{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassStrategyField) GetType() []string {
	if o == nil || IsNil(o.Type) {
		var ret []string
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassStrategyField) GetTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassStrategyField) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given []string and assigns it to the Type field.
func (o *ResponseBadRequestSerializerMetaclassStrategyField) SetType(v []string) {
	o.Type = v
}

func (o ResponseBadRequestSerializerMetaclassStrategyField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestSerializerMetaclassStrategyField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableResponseBadRequestSerializerMetaclassStrategyField struct {
	value *ResponseBadRequestSerializerMetaclassStrategyField
	isSet bool
}

func (v NullableResponseBadRequestSerializerMetaclassStrategyField) Get() *ResponseBadRequestSerializerMetaclassStrategyField {
	return v.value
}

func (v *NullableResponseBadRequestSerializerMetaclassStrategyField) Set(val *ResponseBadRequestSerializerMetaclassStrategyField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestSerializerMetaclassStrategyField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestSerializerMetaclassStrategyField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestSerializerMetaclassStrategyField(val *ResponseBadRequestSerializerMetaclassStrategyField) *NullableResponseBadRequestSerializerMetaclassStrategyField {
	return &NullableResponseBadRequestSerializerMetaclassStrategyField{value: val, isSet: true}
}

func (v NullableResponseBadRequestSerializerMetaclassStrategyField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestSerializerMetaclassStrategyField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


