/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the CacheSettingsEdgeCacheModule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CacheSettingsEdgeCacheModule{}

// CacheSettingsEdgeCacheModule struct for CacheSettingsEdgeCacheModule
type CacheSettingsEdgeCacheModule struct {
	// * `honor` - Honor Origin Cache Settings * `override` - Override Cache Settings
	Behavior *string `json:"behavior,omitempty"`
	// To use a value lower than 60s, the Application Acceleration module must be enabled on the Edge Application.
	MaxAge *int64 `json:"max_age,omitempty"`
	StaleCache *StateCacheModule `json:"stale_cache,omitempty"`
	LargeFileCache *LargeFileCacheModule `json:"large_file_cache,omitempty"`
}

// NewCacheSettingsEdgeCacheModule instantiates a new CacheSettingsEdgeCacheModule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCacheSettingsEdgeCacheModule() *CacheSettingsEdgeCacheModule {
	this := CacheSettingsEdgeCacheModule{}
	return &this
}

// NewCacheSettingsEdgeCacheModuleWithDefaults instantiates a new CacheSettingsEdgeCacheModule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCacheSettingsEdgeCacheModuleWithDefaults() *CacheSettingsEdgeCacheModule {
	this := CacheSettingsEdgeCacheModule{}
	return &this
}

// GetBehavior returns the Behavior field value if set, zero value otherwise.
func (o *CacheSettingsEdgeCacheModule) GetBehavior() string {
	if o == nil || IsNil(o.Behavior) {
		var ret string
		return ret
	}
	return *o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CacheSettingsEdgeCacheModule) GetBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.Behavior) {
		return nil, false
	}
	return o.Behavior, true
}

// HasBehavior returns a boolean if a field has been set.
func (o *CacheSettingsEdgeCacheModule) HasBehavior() bool {
	if o != nil && !IsNil(o.Behavior) {
		return true
	}

	return false
}

// SetBehavior gets a reference to the given string and assigns it to the Behavior field.
func (o *CacheSettingsEdgeCacheModule) SetBehavior(v string) {
	o.Behavior = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *CacheSettingsEdgeCacheModule) GetMaxAge() int64 {
	if o == nil || IsNil(o.MaxAge) {
		var ret int64
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CacheSettingsEdgeCacheModule) GetMaxAgeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxAge) {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *CacheSettingsEdgeCacheModule) HasMaxAge() bool {
	if o != nil && !IsNil(o.MaxAge) {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int64 and assigns it to the MaxAge field.
func (o *CacheSettingsEdgeCacheModule) SetMaxAge(v int64) {
	o.MaxAge = &v
}

// GetStaleCache returns the StaleCache field value if set, zero value otherwise.
func (o *CacheSettingsEdgeCacheModule) GetStaleCache() StateCacheModule {
	if o == nil || IsNil(o.StaleCache) {
		var ret StateCacheModule
		return ret
	}
	return *o.StaleCache
}

// GetStaleCacheOk returns a tuple with the StaleCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CacheSettingsEdgeCacheModule) GetStaleCacheOk() (*StateCacheModule, bool) {
	if o == nil || IsNil(o.StaleCache) {
		return nil, false
	}
	return o.StaleCache, true
}

// HasStaleCache returns a boolean if a field has been set.
func (o *CacheSettingsEdgeCacheModule) HasStaleCache() bool {
	if o != nil && !IsNil(o.StaleCache) {
		return true
	}

	return false
}

// SetStaleCache gets a reference to the given StateCacheModule and assigns it to the StaleCache field.
func (o *CacheSettingsEdgeCacheModule) SetStaleCache(v StateCacheModule) {
	o.StaleCache = &v
}

// GetLargeFileCache returns the LargeFileCache field value if set, zero value otherwise.
func (o *CacheSettingsEdgeCacheModule) GetLargeFileCache() LargeFileCacheModule {
	if o == nil || IsNil(o.LargeFileCache) {
		var ret LargeFileCacheModule
		return ret
	}
	return *o.LargeFileCache
}

// GetLargeFileCacheOk returns a tuple with the LargeFileCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CacheSettingsEdgeCacheModule) GetLargeFileCacheOk() (*LargeFileCacheModule, bool) {
	if o == nil || IsNil(o.LargeFileCache) {
		return nil, false
	}
	return o.LargeFileCache, true
}

// HasLargeFileCache returns a boolean if a field has been set.
func (o *CacheSettingsEdgeCacheModule) HasLargeFileCache() bool {
	if o != nil && !IsNil(o.LargeFileCache) {
		return true
	}

	return false
}

// SetLargeFileCache gets a reference to the given LargeFileCacheModule and assigns it to the LargeFileCache field.
func (o *CacheSettingsEdgeCacheModule) SetLargeFileCache(v LargeFileCacheModule) {
	o.LargeFileCache = &v
}

func (o CacheSettingsEdgeCacheModule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CacheSettingsEdgeCacheModule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Behavior) {
		toSerialize["behavior"] = o.Behavior
	}
	if !IsNil(o.MaxAge) {
		toSerialize["max_age"] = o.MaxAge
	}
	if !IsNil(o.StaleCache) {
		toSerialize["stale_cache"] = o.StaleCache
	}
	if !IsNil(o.LargeFileCache) {
		toSerialize["large_file_cache"] = o.LargeFileCache
	}
	return toSerialize, nil
}

type NullableCacheSettingsEdgeCacheModule struct {
	value *CacheSettingsEdgeCacheModule
	isSet bool
}

func (v NullableCacheSettingsEdgeCacheModule) Get() *CacheSettingsEdgeCacheModule {
	return v.value
}

func (v *NullableCacheSettingsEdgeCacheModule) Set(val *CacheSettingsEdgeCacheModule) {
	v.value = val
	v.isSet = true
}

func (v NullableCacheSettingsEdgeCacheModule) IsSet() bool {
	return v.isSet
}

func (v *NullableCacheSettingsEdgeCacheModule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCacheSettingsEdgeCacheModule(val *CacheSettingsEdgeCacheModule) *NullableCacheSettingsEdgeCacheModule {
	return &NullableCacheSettingsEdgeCacheModule{value: val, isSet: true}
}

func (v NullableCacheSettingsEdgeCacheModule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCacheSettingsEdgeCacheModule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


