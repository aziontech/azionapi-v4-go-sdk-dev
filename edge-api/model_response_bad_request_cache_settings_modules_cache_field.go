/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestCacheSettingsModulesCacheField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestCacheSettingsModulesCacheField{}

// ResponseBadRequestCacheSettingsModulesCacheField struct for ResponseBadRequestCacheSettingsModulesCacheField
type ResponseBadRequestCacheSettingsModulesCacheField struct {
	Behavior []string `json:"behavior,omitempty"`
	MaxAge []string `json:"max_age,omitempty"`
	StaleCache *ResponseBadRequestCacheSettingsEdgeCacheModuleStaleCacheField `json:"stale_cache,omitempty"`
	LargeFileCache *ResponseBadRequestCacheSettingsEdgeCacheModuleLargeFileCacheField `json:"large_file_cache,omitempty"`
	TieredCache *ResponseBadRequestCacheSettingsEdgeCacheModuleTieredCacheField `json:"tiered_cache,omitempty"`
}

// NewResponseBadRequestCacheSettingsModulesCacheField instantiates a new ResponseBadRequestCacheSettingsModulesCacheField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestCacheSettingsModulesCacheField() *ResponseBadRequestCacheSettingsModulesCacheField {
	this := ResponseBadRequestCacheSettingsModulesCacheField{}
	return &this
}

// NewResponseBadRequestCacheSettingsModulesCacheFieldWithDefaults instantiates a new ResponseBadRequestCacheSettingsModulesCacheField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestCacheSettingsModulesCacheFieldWithDefaults() *ResponseBadRequestCacheSettingsModulesCacheField {
	this := ResponseBadRequestCacheSettingsModulesCacheField{}
	return &this
}

// GetBehavior returns the Behavior field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetBehavior() []string {
	if o == nil || IsNil(o.Behavior) {
		var ret []string
		return ret
	}
	return o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetBehaviorOk() ([]string, bool) {
	if o == nil || IsNil(o.Behavior) {
		return nil, false
	}
	return o.Behavior, true
}

// HasBehavior returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) HasBehavior() bool {
	if o != nil && !IsNil(o.Behavior) {
		return true
	}

	return false
}

// SetBehavior gets a reference to the given []string and assigns it to the Behavior field.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) SetBehavior(v []string) {
	o.Behavior = v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetMaxAge() []string {
	if o == nil || IsNil(o.MaxAge) {
		var ret []string
		return ret
	}
	return o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetMaxAgeOk() ([]string, bool) {
	if o == nil || IsNil(o.MaxAge) {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) HasMaxAge() bool {
	if o != nil && !IsNil(o.MaxAge) {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given []string and assigns it to the MaxAge field.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) SetMaxAge(v []string) {
	o.MaxAge = v
}

// GetStaleCache returns the StaleCache field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetStaleCache() ResponseBadRequestCacheSettingsEdgeCacheModuleStaleCacheField {
	if o == nil || IsNil(o.StaleCache) {
		var ret ResponseBadRequestCacheSettingsEdgeCacheModuleStaleCacheField
		return ret
	}
	return *o.StaleCache
}

// GetStaleCacheOk returns a tuple with the StaleCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetStaleCacheOk() (*ResponseBadRequestCacheSettingsEdgeCacheModuleStaleCacheField, bool) {
	if o == nil || IsNil(o.StaleCache) {
		return nil, false
	}
	return o.StaleCache, true
}

// HasStaleCache returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) HasStaleCache() bool {
	if o != nil && !IsNil(o.StaleCache) {
		return true
	}

	return false
}

// SetStaleCache gets a reference to the given ResponseBadRequestCacheSettingsEdgeCacheModuleStaleCacheField and assigns it to the StaleCache field.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) SetStaleCache(v ResponseBadRequestCacheSettingsEdgeCacheModuleStaleCacheField) {
	o.StaleCache = &v
}

// GetLargeFileCache returns the LargeFileCache field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetLargeFileCache() ResponseBadRequestCacheSettingsEdgeCacheModuleLargeFileCacheField {
	if o == nil || IsNil(o.LargeFileCache) {
		var ret ResponseBadRequestCacheSettingsEdgeCacheModuleLargeFileCacheField
		return ret
	}
	return *o.LargeFileCache
}

// GetLargeFileCacheOk returns a tuple with the LargeFileCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetLargeFileCacheOk() (*ResponseBadRequestCacheSettingsEdgeCacheModuleLargeFileCacheField, bool) {
	if o == nil || IsNil(o.LargeFileCache) {
		return nil, false
	}
	return o.LargeFileCache, true
}

// HasLargeFileCache returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) HasLargeFileCache() bool {
	if o != nil && !IsNil(o.LargeFileCache) {
		return true
	}

	return false
}

// SetLargeFileCache gets a reference to the given ResponseBadRequestCacheSettingsEdgeCacheModuleLargeFileCacheField and assigns it to the LargeFileCache field.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) SetLargeFileCache(v ResponseBadRequestCacheSettingsEdgeCacheModuleLargeFileCacheField) {
	o.LargeFileCache = &v
}

// GetTieredCache returns the TieredCache field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetTieredCache() ResponseBadRequestCacheSettingsEdgeCacheModuleTieredCacheField {
	if o == nil || IsNil(o.TieredCache) {
		var ret ResponseBadRequestCacheSettingsEdgeCacheModuleTieredCacheField
		return ret
	}
	return *o.TieredCache
}

// GetTieredCacheOk returns a tuple with the TieredCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) GetTieredCacheOk() (*ResponseBadRequestCacheSettingsEdgeCacheModuleTieredCacheField, bool) {
	if o == nil || IsNil(o.TieredCache) {
		return nil, false
	}
	return o.TieredCache, true
}

// HasTieredCache returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) HasTieredCache() bool {
	if o != nil && !IsNil(o.TieredCache) {
		return true
	}

	return false
}

// SetTieredCache gets a reference to the given ResponseBadRequestCacheSettingsEdgeCacheModuleTieredCacheField and assigns it to the TieredCache field.
func (o *ResponseBadRequestCacheSettingsModulesCacheField) SetTieredCache(v ResponseBadRequestCacheSettingsEdgeCacheModuleTieredCacheField) {
	o.TieredCache = &v
}

func (o ResponseBadRequestCacheSettingsModulesCacheField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestCacheSettingsModulesCacheField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Behavior) {
		toSerialize["behavior"] = o.Behavior
	}
	if !IsNil(o.MaxAge) {
		toSerialize["max_age"] = o.MaxAge
	}
	if !IsNil(o.StaleCache) {
		toSerialize["stale_cache"] = o.StaleCache
	}
	if !IsNil(o.LargeFileCache) {
		toSerialize["large_file_cache"] = o.LargeFileCache
	}
	if !IsNil(o.TieredCache) {
		toSerialize["tiered_cache"] = o.TieredCache
	}
	return toSerialize, nil
}

type NullableResponseBadRequestCacheSettingsModulesCacheField struct {
	value *ResponseBadRequestCacheSettingsModulesCacheField
	isSet bool
}

func (v NullableResponseBadRequestCacheSettingsModulesCacheField) Get() *ResponseBadRequestCacheSettingsModulesCacheField {
	return v.value
}

func (v *NullableResponseBadRequestCacheSettingsModulesCacheField) Set(val *ResponseBadRequestCacheSettingsModulesCacheField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestCacheSettingsModulesCacheField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestCacheSettingsModulesCacheField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestCacheSettingsModulesCacheField(val *ResponseBadRequestCacheSettingsModulesCacheField) *NullableResponseBadRequestCacheSettingsModulesCacheField {
	return &NullableResponseBadRequestCacheSettingsModulesCacheField{value: val, isSet: true}
}

func (v NullableResponseBadRequestCacheSettingsModulesCacheField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestCacheSettingsModulesCacheField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


