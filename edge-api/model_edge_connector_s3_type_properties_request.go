/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EdgeConnectorS3TypePropertiesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeConnectorS3TypePropertiesRequest{}

// EdgeConnectorS3TypePropertiesRequest struct for EdgeConnectorS3TypePropertiesRequest
type EdgeConnectorS3TypePropertiesRequest struct {
	Host NullableString `json:"host" validate:"regexp=.*"`
	Bucket string `json:"bucket" validate:"regexp=.*"`
	Path string `json:"path" validate:"regexp=.*"`
	Region string `json:"region" validate:"regexp=.*"`
	AccessKey string `json:"access_key" validate:"regexp=.*"`
	SecretKey string `json:"secret_key" validate:"regexp=.*"`
}

type _EdgeConnectorS3TypePropertiesRequest EdgeConnectorS3TypePropertiesRequest

// NewEdgeConnectorS3TypePropertiesRequest instantiates a new EdgeConnectorS3TypePropertiesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeConnectorS3TypePropertiesRequest(host NullableString, bucket string, path string, region string, accessKey string, secretKey string) *EdgeConnectorS3TypePropertiesRequest {
	this := EdgeConnectorS3TypePropertiesRequest{}
	this.Host = host
	this.Bucket = bucket
	this.Path = path
	this.Region = region
	this.AccessKey = accessKey
	this.SecretKey = secretKey
	return &this
}

// NewEdgeConnectorS3TypePropertiesRequestWithDefaults instantiates a new EdgeConnectorS3TypePropertiesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeConnectorS3TypePropertiesRequestWithDefaults() *EdgeConnectorS3TypePropertiesRequest {
	this := EdgeConnectorS3TypePropertiesRequest{}
	return &this
}

// GetHost returns the Host field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EdgeConnectorS3TypePropertiesRequest) GetHost() string {
	if o == nil || o.Host.Get() == nil {
		var ret string
		return ret
	}

	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EdgeConnectorS3TypePropertiesRequest) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// SetHost sets field value
func (o *EdgeConnectorS3TypePropertiesRequest) SetHost(v string) {
	o.Host.Set(&v)
}

// GetBucket returns the Bucket field value
func (o *EdgeConnectorS3TypePropertiesRequest) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *EdgeConnectorS3TypePropertiesRequest) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *EdgeConnectorS3TypePropertiesRequest) SetBucket(v string) {
	o.Bucket = v
}

// GetPath returns the Path field value
func (o *EdgeConnectorS3TypePropertiesRequest) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *EdgeConnectorS3TypePropertiesRequest) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *EdgeConnectorS3TypePropertiesRequest) SetPath(v string) {
	o.Path = v
}

// GetRegion returns the Region field value
func (o *EdgeConnectorS3TypePropertiesRequest) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *EdgeConnectorS3TypePropertiesRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *EdgeConnectorS3TypePropertiesRequest) SetRegion(v string) {
	o.Region = v
}

// GetAccessKey returns the AccessKey field value
func (o *EdgeConnectorS3TypePropertiesRequest) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *EdgeConnectorS3TypePropertiesRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *EdgeConnectorS3TypePropertiesRequest) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetSecretKey returns the SecretKey field value
func (o *EdgeConnectorS3TypePropertiesRequest) GetSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
func (o *EdgeConnectorS3TypePropertiesRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretKey, true
}

// SetSecretKey sets field value
func (o *EdgeConnectorS3TypePropertiesRequest) SetSecretKey(v string) {
	o.SecretKey = v
}

func (o EdgeConnectorS3TypePropertiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeConnectorS3TypePropertiesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host"] = o.Host.Get()
	toSerialize["bucket"] = o.Bucket
	toSerialize["path"] = o.Path
	toSerialize["region"] = o.Region
	toSerialize["access_key"] = o.AccessKey
	toSerialize["secret_key"] = o.SecretKey
	return toSerialize, nil
}

func (o *EdgeConnectorS3TypePropertiesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
		"bucket",
		"path",
		"region",
		"access_key",
		"secret_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEdgeConnectorS3TypePropertiesRequest := _EdgeConnectorS3TypePropertiesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEdgeConnectorS3TypePropertiesRequest)

	if err != nil {
		return err
	}

	*o = EdgeConnectorS3TypePropertiesRequest(varEdgeConnectorS3TypePropertiesRequest)

	return err
}

type NullableEdgeConnectorS3TypePropertiesRequest struct {
	value *EdgeConnectorS3TypePropertiesRequest
	isSet bool
}

func (v NullableEdgeConnectorS3TypePropertiesRequest) Get() *EdgeConnectorS3TypePropertiesRequest {
	return v.value
}

func (v *NullableEdgeConnectorS3TypePropertiesRequest) Set(val *EdgeConnectorS3TypePropertiesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeConnectorS3TypePropertiesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeConnectorS3TypePropertiesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeConnectorS3TypePropertiesRequest(val *EdgeConnectorS3TypePropertiesRequest) *NullableEdgeConnectorS3TypePropertiesRequest {
	return &NullableEdgeConnectorS3TypePropertiesRequest{value: val, isSet: true}
}

func (v NullableEdgeConnectorS3TypePropertiesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeConnectorS3TypePropertiesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


