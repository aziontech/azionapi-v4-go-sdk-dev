/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// EdgeApplicationRuleEngineRequestPhaseBehaviors - struct for EdgeApplicationRuleEngineRequestPhaseBehaviors
type EdgeApplicationRuleEngineRequestPhaseBehaviors struct {
	EdgeApplicationRequestPhaseBehaviorWithArgs *EdgeApplicationRequestPhaseBehaviorWithArgs
	EdgeApplicationRequestPhaseBehaviorWithoutArgs *EdgeApplicationRequestPhaseBehaviorWithoutArgs
}

// EdgeApplicationRequestPhaseBehaviorWithArgsAsEdgeApplicationRuleEngineRequestPhaseBehaviors is a convenience function that returns EdgeApplicationRequestPhaseBehaviorWithArgs wrapped in EdgeApplicationRuleEngineRequestPhaseBehaviors
func EdgeApplicationRequestPhaseBehaviorWithArgsAsEdgeApplicationRuleEngineRequestPhaseBehaviors(v *EdgeApplicationRequestPhaseBehaviorWithArgs) EdgeApplicationRuleEngineRequestPhaseBehaviors {
	return EdgeApplicationRuleEngineRequestPhaseBehaviors{
		EdgeApplicationRequestPhaseBehaviorWithArgs: v,
	}
}

// EdgeApplicationRequestPhaseBehaviorWithoutArgsAsEdgeApplicationRuleEngineRequestPhaseBehaviors is a convenience function that returns EdgeApplicationRequestPhaseBehaviorWithoutArgs wrapped in EdgeApplicationRuleEngineRequestPhaseBehaviors
func EdgeApplicationRequestPhaseBehaviorWithoutArgsAsEdgeApplicationRuleEngineRequestPhaseBehaviors(v *EdgeApplicationRequestPhaseBehaviorWithoutArgs) EdgeApplicationRuleEngineRequestPhaseBehaviors {
	return EdgeApplicationRuleEngineRequestPhaseBehaviors{
		EdgeApplicationRequestPhaseBehaviorWithoutArgs: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *EdgeApplicationRuleEngineRequestPhaseBehaviors) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into EdgeApplicationRequestPhaseBehaviorWithArgs
	err = newStrictDecoder(data).Decode(&dst.EdgeApplicationRequestPhaseBehaviorWithArgs)
	if err == nil {
		jsonEdgeApplicationRequestPhaseBehaviorWithArgs, _ := json.Marshal(dst.EdgeApplicationRequestPhaseBehaviorWithArgs)
		if string(jsonEdgeApplicationRequestPhaseBehaviorWithArgs) == "{}" { // empty struct
			dst.EdgeApplicationRequestPhaseBehaviorWithArgs = nil
		} else {
			if err = validator.Validate(dst.EdgeApplicationRequestPhaseBehaviorWithArgs); err != nil {
				dst.EdgeApplicationRequestPhaseBehaviorWithArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.EdgeApplicationRequestPhaseBehaviorWithArgs = nil
	}

	// try to unmarshal data into EdgeApplicationRequestPhaseBehaviorWithoutArgs
	err = newStrictDecoder(data).Decode(&dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs)
	if err == nil {
		jsonEdgeApplicationRequestPhaseBehaviorWithoutArgs, _ := json.Marshal(dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs)
		if string(jsonEdgeApplicationRequestPhaseBehaviorWithoutArgs) == "{}" { // empty struct
			dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs = nil
		} else {
			if err = validator.Validate(dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs); err != nil {
				dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.EdgeApplicationRequestPhaseBehaviorWithArgs = nil
		dst.EdgeApplicationRequestPhaseBehaviorWithoutArgs = nil

		return fmt.Errorf("data matches more than one schema in oneOf(EdgeApplicationRuleEngineRequestPhaseBehaviors)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(EdgeApplicationRuleEngineRequestPhaseBehaviors)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EdgeApplicationRuleEngineRequestPhaseBehaviors) MarshalJSON() ([]byte, error) {
	if src.EdgeApplicationRequestPhaseBehaviorWithArgs != nil {
		return json.Marshal(&src.EdgeApplicationRequestPhaseBehaviorWithArgs)
	}

	if src.EdgeApplicationRequestPhaseBehaviorWithoutArgs != nil {
		return json.Marshal(&src.EdgeApplicationRequestPhaseBehaviorWithoutArgs)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EdgeApplicationRuleEngineRequestPhaseBehaviors) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.EdgeApplicationRequestPhaseBehaviorWithArgs != nil {
		return obj.EdgeApplicationRequestPhaseBehaviorWithArgs
	}

	if obj.EdgeApplicationRequestPhaseBehaviorWithoutArgs != nil {
		return obj.EdgeApplicationRequestPhaseBehaviorWithoutArgs
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj EdgeApplicationRuleEngineRequestPhaseBehaviors) GetActualInstanceValue() (interface{}) {
	if obj.EdgeApplicationRequestPhaseBehaviorWithArgs != nil {
		return *obj.EdgeApplicationRequestPhaseBehaviorWithArgs
	}

	if obj.EdgeApplicationRequestPhaseBehaviorWithoutArgs != nil {
		return *obj.EdgeApplicationRequestPhaseBehaviorWithoutArgs
	}

	// all schemas are nil
	return nil
}

type NullableEdgeApplicationRuleEngineRequestPhaseBehaviors struct {
	value *EdgeApplicationRuleEngineRequestPhaseBehaviors
	isSet bool
}

func (v NullableEdgeApplicationRuleEngineRequestPhaseBehaviors) Get() *EdgeApplicationRuleEngineRequestPhaseBehaviors {
	return v.value
}

func (v *NullableEdgeApplicationRuleEngineRequestPhaseBehaviors) Set(val *EdgeApplicationRuleEngineRequestPhaseBehaviors) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeApplicationRuleEngineRequestPhaseBehaviors) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeApplicationRuleEngineRequestPhaseBehaviors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeApplicationRuleEngineRequestPhaseBehaviors(val *EdgeApplicationRuleEngineRequestPhaseBehaviors) *NullableEdgeApplicationRuleEngineRequestPhaseBehaviors {
	return &NullableEdgeApplicationRuleEngineRequestPhaseBehaviors{value: val, isSet: true}
}

func (v NullableEdgeApplicationRuleEngineRequestPhaseBehaviors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeApplicationRuleEngineRequestPhaseBehaviors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


