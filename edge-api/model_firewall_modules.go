/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallModules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallModules{}

// FirewallModules struct for FirewallModules
type FirewallModules struct {
	DdosProtection FirewallModule `json:"ddos_protection"`
	Functions *FirewallModule `json:"functions,omitempty"`
	NetworkProtection *FirewallModule `json:"network_protection,omitempty"`
	Waf *FirewallModule `json:"waf,omitempty"`
}

type _FirewallModules FirewallModules

// NewFirewallModules instantiates a new FirewallModules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallModules(ddosProtection FirewallModule) *FirewallModules {
	this := FirewallModules{}
	this.DdosProtection = ddosProtection
	return &this
}

// NewFirewallModulesWithDefaults instantiates a new FirewallModules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallModulesWithDefaults() *FirewallModules {
	this := FirewallModules{}
	return &this
}

// GetDdosProtection returns the DdosProtection field value
func (o *FirewallModules) GetDdosProtection() FirewallModule {
	if o == nil {
		var ret FirewallModule
		return ret
	}

	return o.DdosProtection
}

// GetDdosProtectionOk returns a tuple with the DdosProtection field value
// and a boolean to check if the value has been set.
func (o *FirewallModules) GetDdosProtectionOk() (*FirewallModule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DdosProtection, true
}

// SetDdosProtection sets field value
func (o *FirewallModules) SetDdosProtection(v FirewallModule) {
	o.DdosProtection = v
}

// GetFunctions returns the Functions field value if set, zero value otherwise.
func (o *FirewallModules) GetFunctions() FirewallModule {
	if o == nil || IsNil(o.Functions) {
		var ret FirewallModule
		return ret
	}
	return *o.Functions
}

// GetFunctionsOk returns a tuple with the Functions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallModules) GetFunctionsOk() (*FirewallModule, bool) {
	if o == nil || IsNil(o.Functions) {
		return nil, false
	}
	return o.Functions, true
}

// HasFunctions returns a boolean if a field has been set.
func (o *FirewallModules) HasFunctions() bool {
	if o != nil && !IsNil(o.Functions) {
		return true
	}

	return false
}

// SetFunctions gets a reference to the given FirewallModule and assigns it to the Functions field.
func (o *FirewallModules) SetFunctions(v FirewallModule) {
	o.Functions = &v
}

// GetNetworkProtection returns the NetworkProtection field value if set, zero value otherwise.
func (o *FirewallModules) GetNetworkProtection() FirewallModule {
	if o == nil || IsNil(o.NetworkProtection) {
		var ret FirewallModule
		return ret
	}
	return *o.NetworkProtection
}

// GetNetworkProtectionOk returns a tuple with the NetworkProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallModules) GetNetworkProtectionOk() (*FirewallModule, bool) {
	if o == nil || IsNil(o.NetworkProtection) {
		return nil, false
	}
	return o.NetworkProtection, true
}

// HasNetworkProtection returns a boolean if a field has been set.
func (o *FirewallModules) HasNetworkProtection() bool {
	if o != nil && !IsNil(o.NetworkProtection) {
		return true
	}

	return false
}

// SetNetworkProtection gets a reference to the given FirewallModule and assigns it to the NetworkProtection field.
func (o *FirewallModules) SetNetworkProtection(v FirewallModule) {
	o.NetworkProtection = &v
}

// GetWaf returns the Waf field value if set, zero value otherwise.
func (o *FirewallModules) GetWaf() FirewallModule {
	if o == nil || IsNil(o.Waf) {
		var ret FirewallModule
		return ret
	}
	return *o.Waf
}

// GetWafOk returns a tuple with the Waf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallModules) GetWafOk() (*FirewallModule, bool) {
	if o == nil || IsNil(o.Waf) {
		return nil, false
	}
	return o.Waf, true
}

// HasWaf returns a boolean if a field has been set.
func (o *FirewallModules) HasWaf() bool {
	if o != nil && !IsNil(o.Waf) {
		return true
	}

	return false
}

// SetWaf gets a reference to the given FirewallModule and assigns it to the Waf field.
func (o *FirewallModules) SetWaf(v FirewallModule) {
	o.Waf = &v
}

func (o FirewallModules) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallModules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ddos_protection"] = o.DdosProtection
	if !IsNil(o.Functions) {
		toSerialize["functions"] = o.Functions
	}
	if !IsNil(o.NetworkProtection) {
		toSerialize["network_protection"] = o.NetworkProtection
	}
	if !IsNil(o.Waf) {
		toSerialize["waf"] = o.Waf
	}
	return toSerialize, nil
}

func (o *FirewallModules) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ddos_protection",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallModules := _FirewallModules{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallModules)

	if err != nil {
		return err
	}

	*o = FirewallModules(varFirewallModules)

	return err
}

type NullableFirewallModules struct {
	value *FirewallModules
	isSet bool
}

func (v NullableFirewallModules) Get() *FirewallModules {
	return v.value
}

func (v *NullableFirewallModules) Set(val *FirewallModules) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallModules) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallModules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallModules(val *FirewallModules) *NullableFirewallModules {
	return &NullableFirewallModules{value: val, isSet: true}
}

func (v NullableFirewallModules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallModules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


