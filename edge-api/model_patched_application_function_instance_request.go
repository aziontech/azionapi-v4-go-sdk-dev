/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the PatchedApplicationFunctionInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedApplicationFunctionInstanceRequest{}

// PatchedApplicationFunctionInstanceRequest Serializer for Application Function Instances
type PatchedApplicationFunctionInstanceRequest struct {
	Name *string `json:"name,omitempty"`
	Args interface{} `json:"args,omitempty"`
	AzionForm *ApplicationFunctionInstanceAzionForm `json:"azion_form,omitempty"`
	Function *int64 `json:"function,omitempty"`
	Active *bool `json:"active,omitempty"`
}

// NewPatchedApplicationFunctionInstanceRequest instantiates a new PatchedApplicationFunctionInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedApplicationFunctionInstanceRequest() *PatchedApplicationFunctionInstanceRequest {
	this := PatchedApplicationFunctionInstanceRequest{}
	return &this
}

// NewPatchedApplicationFunctionInstanceRequestWithDefaults instantiates a new PatchedApplicationFunctionInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedApplicationFunctionInstanceRequestWithDefaults() *PatchedApplicationFunctionInstanceRequest {
	this := PatchedApplicationFunctionInstanceRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedApplicationFunctionInstanceRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationFunctionInstanceRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedApplicationFunctionInstanceRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedApplicationFunctionInstanceRequest) SetName(v string) {
	o.Name = &v
}

// GetArgs returns the Args field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationFunctionInstanceRequest) GetArgs() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationFunctionInstanceRequest) GetArgsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Args) {
		return nil, false
	}
	return &o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *PatchedApplicationFunctionInstanceRequest) HasArgs() bool {
	if o != nil && !IsNil(o.Args) {
		return true
	}

	return false
}

// SetArgs gets a reference to the given interface{} and assigns it to the Args field.
func (o *PatchedApplicationFunctionInstanceRequest) SetArgs(v interface{}) {
	o.Args = v
}

// GetAzionForm returns the AzionForm field value if set, zero value otherwise.
func (o *PatchedApplicationFunctionInstanceRequest) GetAzionForm() ApplicationFunctionInstanceAzionForm {
	if o == nil || IsNil(o.AzionForm) {
		var ret ApplicationFunctionInstanceAzionForm
		return ret
	}
	return *o.AzionForm
}

// GetAzionFormOk returns a tuple with the AzionForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationFunctionInstanceRequest) GetAzionFormOk() (*ApplicationFunctionInstanceAzionForm, bool) {
	if o == nil || IsNil(o.AzionForm) {
		return nil, false
	}
	return o.AzionForm, true
}

// HasAzionForm returns a boolean if a field has been set.
func (o *PatchedApplicationFunctionInstanceRequest) HasAzionForm() bool {
	if o != nil && !IsNil(o.AzionForm) {
		return true
	}

	return false
}

// SetAzionForm gets a reference to the given ApplicationFunctionInstanceAzionForm and assigns it to the AzionForm field.
func (o *PatchedApplicationFunctionInstanceRequest) SetAzionForm(v ApplicationFunctionInstanceAzionForm) {
	o.AzionForm = &v
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *PatchedApplicationFunctionInstanceRequest) GetFunction() int64 {
	if o == nil || IsNil(o.Function) {
		var ret int64
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationFunctionInstanceRequest) GetFunctionOk() (*int64, bool) {
	if o == nil || IsNil(o.Function) {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *PatchedApplicationFunctionInstanceRequest) HasFunction() bool {
	if o != nil && !IsNil(o.Function) {
		return true
	}

	return false
}

// SetFunction gets a reference to the given int64 and assigns it to the Function field.
func (o *PatchedApplicationFunctionInstanceRequest) SetFunction(v int64) {
	o.Function = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PatchedApplicationFunctionInstanceRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationFunctionInstanceRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PatchedApplicationFunctionInstanceRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PatchedApplicationFunctionInstanceRequest) SetActive(v bool) {
	o.Active = &v
}

func (o PatchedApplicationFunctionInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedApplicationFunctionInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if !IsNil(o.AzionForm) {
		toSerialize["azion_form"] = o.AzionForm
	}
	if !IsNil(o.Function) {
		toSerialize["function"] = o.Function
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

type NullablePatchedApplicationFunctionInstanceRequest struct {
	value *PatchedApplicationFunctionInstanceRequest
	isSet bool
}

func (v NullablePatchedApplicationFunctionInstanceRequest) Get() *PatchedApplicationFunctionInstanceRequest {
	return v.value
}

func (v *NullablePatchedApplicationFunctionInstanceRequest) Set(val *PatchedApplicationFunctionInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedApplicationFunctionInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedApplicationFunctionInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedApplicationFunctionInstanceRequest(val *PatchedApplicationFunctionInstanceRequest) *NullablePatchedApplicationFunctionInstanceRequest {
	return &NullablePatchedApplicationFunctionInstanceRequest{value: val, isSet: true}
}

func (v NullablePatchedApplicationFunctionInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedApplicationFunctionInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


