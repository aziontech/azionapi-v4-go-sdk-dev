/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestSerializerMetaclassModulesField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestSerializerMetaclassModulesField{}

// ResponseBadRequestSerializerMetaclassModulesField struct for ResponseBadRequestSerializerMetaclassModulesField
type ResponseBadRequestSerializerMetaclassModulesField struct {
	BrowserCache *ResponseBadRequestCacheSettingModulesSerializerBrowserCacheField `json:"browser_cache,omitempty"`
	EdgeCache *ResponseBadRequestCacheSettingModulesSerializerEdgeCacheField `json:"edge_cache,omitempty"`
	ApplicationControls *ResponseBadRequestCacheSettingModulesSerializerApplicationControlsField `json:"application_controls,omitempty"`
	SliceControls *ResponseBadRequestCacheSettingModulesSerializerSliceControlsField `json:"slice_controls,omitempty"`
}

// NewResponseBadRequestSerializerMetaclassModulesField instantiates a new ResponseBadRequestSerializerMetaclassModulesField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestSerializerMetaclassModulesField() *ResponseBadRequestSerializerMetaclassModulesField {
	this := ResponseBadRequestSerializerMetaclassModulesField{}
	return &this
}

// NewResponseBadRequestSerializerMetaclassModulesFieldWithDefaults instantiates a new ResponseBadRequestSerializerMetaclassModulesField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestSerializerMetaclassModulesFieldWithDefaults() *ResponseBadRequestSerializerMetaclassModulesField {
	this := ResponseBadRequestSerializerMetaclassModulesField{}
	return &this
}

// GetBrowserCache returns the BrowserCache field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetBrowserCache() ResponseBadRequestCacheSettingModulesSerializerBrowserCacheField {
	if o == nil || IsNil(o.BrowserCache) {
		var ret ResponseBadRequestCacheSettingModulesSerializerBrowserCacheField
		return ret
	}
	return *o.BrowserCache
}

// GetBrowserCacheOk returns a tuple with the BrowserCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetBrowserCacheOk() (*ResponseBadRequestCacheSettingModulesSerializerBrowserCacheField, bool) {
	if o == nil || IsNil(o.BrowserCache) {
		return nil, false
	}
	return o.BrowserCache, true
}

// HasBrowserCache returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) HasBrowserCache() bool {
	if o != nil && !IsNil(o.BrowserCache) {
		return true
	}

	return false
}

// SetBrowserCache gets a reference to the given ResponseBadRequestCacheSettingModulesSerializerBrowserCacheField and assigns it to the BrowserCache field.
func (o *ResponseBadRequestSerializerMetaclassModulesField) SetBrowserCache(v ResponseBadRequestCacheSettingModulesSerializerBrowserCacheField) {
	o.BrowserCache = &v
}

// GetEdgeCache returns the EdgeCache field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetEdgeCache() ResponseBadRequestCacheSettingModulesSerializerEdgeCacheField {
	if o == nil || IsNil(o.EdgeCache) {
		var ret ResponseBadRequestCacheSettingModulesSerializerEdgeCacheField
		return ret
	}
	return *o.EdgeCache
}

// GetEdgeCacheOk returns a tuple with the EdgeCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetEdgeCacheOk() (*ResponseBadRequestCacheSettingModulesSerializerEdgeCacheField, bool) {
	if o == nil || IsNil(o.EdgeCache) {
		return nil, false
	}
	return o.EdgeCache, true
}

// HasEdgeCache returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) HasEdgeCache() bool {
	if o != nil && !IsNil(o.EdgeCache) {
		return true
	}

	return false
}

// SetEdgeCache gets a reference to the given ResponseBadRequestCacheSettingModulesSerializerEdgeCacheField and assigns it to the EdgeCache field.
func (o *ResponseBadRequestSerializerMetaclassModulesField) SetEdgeCache(v ResponseBadRequestCacheSettingModulesSerializerEdgeCacheField) {
	o.EdgeCache = &v
}

// GetApplicationControls returns the ApplicationControls field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetApplicationControls() ResponseBadRequestCacheSettingModulesSerializerApplicationControlsField {
	if o == nil || IsNil(o.ApplicationControls) {
		var ret ResponseBadRequestCacheSettingModulesSerializerApplicationControlsField
		return ret
	}
	return *o.ApplicationControls
}

// GetApplicationControlsOk returns a tuple with the ApplicationControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetApplicationControlsOk() (*ResponseBadRequestCacheSettingModulesSerializerApplicationControlsField, bool) {
	if o == nil || IsNil(o.ApplicationControls) {
		return nil, false
	}
	return o.ApplicationControls, true
}

// HasApplicationControls returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) HasApplicationControls() bool {
	if o != nil && !IsNil(o.ApplicationControls) {
		return true
	}

	return false
}

// SetApplicationControls gets a reference to the given ResponseBadRequestCacheSettingModulesSerializerApplicationControlsField and assigns it to the ApplicationControls field.
func (o *ResponseBadRequestSerializerMetaclassModulesField) SetApplicationControls(v ResponseBadRequestCacheSettingModulesSerializerApplicationControlsField) {
	o.ApplicationControls = &v
}

// GetSliceControls returns the SliceControls field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetSliceControls() ResponseBadRequestCacheSettingModulesSerializerSliceControlsField {
	if o == nil || IsNil(o.SliceControls) {
		var ret ResponseBadRequestCacheSettingModulesSerializerSliceControlsField
		return ret
	}
	return *o.SliceControls
}

// GetSliceControlsOk returns a tuple with the SliceControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) GetSliceControlsOk() (*ResponseBadRequestCacheSettingModulesSerializerSliceControlsField, bool) {
	if o == nil || IsNil(o.SliceControls) {
		return nil, false
	}
	return o.SliceControls, true
}

// HasSliceControls returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassModulesField) HasSliceControls() bool {
	if o != nil && !IsNil(o.SliceControls) {
		return true
	}

	return false
}

// SetSliceControls gets a reference to the given ResponseBadRequestCacheSettingModulesSerializerSliceControlsField and assigns it to the SliceControls field.
func (o *ResponseBadRequestSerializerMetaclassModulesField) SetSliceControls(v ResponseBadRequestCacheSettingModulesSerializerSliceControlsField) {
	o.SliceControls = &v
}

func (o ResponseBadRequestSerializerMetaclassModulesField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestSerializerMetaclassModulesField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrowserCache) {
		toSerialize["browser_cache"] = o.BrowserCache
	}
	if !IsNil(o.EdgeCache) {
		toSerialize["edge_cache"] = o.EdgeCache
	}
	if !IsNil(o.ApplicationControls) {
		toSerialize["application_controls"] = o.ApplicationControls
	}
	if !IsNil(o.SliceControls) {
		toSerialize["slice_controls"] = o.SliceControls
	}
	return toSerialize, nil
}

type NullableResponseBadRequestSerializerMetaclassModulesField struct {
	value *ResponseBadRequestSerializerMetaclassModulesField
	isSet bool
}

func (v NullableResponseBadRequestSerializerMetaclassModulesField) Get() *ResponseBadRequestSerializerMetaclassModulesField {
	return v.value
}

func (v *NullableResponseBadRequestSerializerMetaclassModulesField) Set(val *ResponseBadRequestSerializerMetaclassModulesField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestSerializerMetaclassModulesField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestSerializerMetaclassModulesField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestSerializerMetaclassModulesField(val *ResponseBadRequestSerializerMetaclassModulesField) *NullableResponseBadRequestSerializerMetaclassModulesField {
	return &NullableResponseBadRequestSerializerMetaclassModulesField{value: val, isSet: true}
}

func (v NullableResponseBadRequestSerializerMetaclassModulesField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestSerializerMetaclassModulesField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


