openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the edge-api
  title: edge-api
  version: 1.0.0
servers:
- url: /
paths:
  /edge_application/applications:
    get:
      description: List all Edge Applications owned by your account.
      operationId: List Edge Applications
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, last_editor, last_modified, active, debug, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeApplicationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Applications
      tags:
      - Edge Applications
    post:
      description: Create a new Edge Application in your account.
      operationId: Create Edge Application
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Application
      tags:
      - Edge Applications
  /edge_application/applications/{edge_application_id}/cache_settings:
    get:
      description: List all Cache Settings owned by your account.
      operationId: List Cache Settings
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseListCacheSettingList"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List all Edge Applications Cache Settings
      tags:
      - Edge Applications - Cache Settings
    post:
      description: Create a new Cache Setting in your account.
      operationId: Create Cache Setting
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CacheSettingRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Applications Cache Setting
      tags:
      - Edge Applications - Cache Settings
  /edge_application/applications/{edge_application_id}/cache_settings/{id}:
    delete:
      description: Destruction of a specific Cache Setting in your account.
      operationId: Destroy Cache Setting
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCacheSetting"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCacheSetting"
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Applications Cache Setting
      tags:
      - Edge Applications - Cache Settings
    get:
      description: Retrieve details of a specific Cache Setting in your account.
      operationId: Retrieve Cache Setting
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCacheSetting"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Applications Cache Setting
      tags:
      - Edge Applications - Cache Settings
    patch:
      description: Update one or more fields of an existing Cache Setting without
        affecting other fields.
      operationId: Partial update Cache Setting
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCacheSettingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Applications Cache Setting
      tags:
      - Edge Applications - Cache Settings
    put:
      description: Update an existing Cache Setting. This replaces the entire Cache
        Setting with the new data provided.
      operationId: Update Cache Setting
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CacheSettingRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Applications Cache Setting
      tags:
      - Edge Applications - Cache Settings
  /edge_application/applications/{edge_application_id}/device_groups:
    get:
      description: List all Device Groups owned by your account.
      operationId: list_device_groups
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, user_agent)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeApplicationDeviceGroupsList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Applications Device Groups
      tags:
      - Edge Applications - Device Groups
    post:
      description: Create a new Device Group in your account.
      operationId: create_device_group
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationDeviceGroupsRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Applications Device Group
      tags:
      - Edge Applications - Device Groups
  /edge_application/applications/{edge_application_id}/device_groups/{id}:
    delete:
      description: Destruction of a specific Device Group in your account.
      operationId: destroy_device_groups
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Applications Device Group
      tags:
      - Edge Applications - Device Groups
    get:
      description: Retrieve details of a specific Device Group in your account.
      operationId: retrieve_device_group
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Device Group
      tags:
      - Edge Applications - Device Groups
    patch:
      description: Update one or more fields of an existing Device Group without affecting
        other fields.
      operationId: partial_update_device_group
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeApplicationDeviceGroupsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Applications Device Group
      tags:
      - Edge Applications - Device Groups
    put:
      description: Update an existing Device Group. This replaces the entire Device
        Group with the new data provided.
      operationId: update_device_group
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationDeviceGroupsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Applications Device Group
      tags:
      - Edge Applications - Device Groups
  /edge_application/applications/{edge_application_id}/functions:
    get:
      description: List all Function Instances for a specific Edge Application owned
        by your account.
      operationId: list_edge_application_function_instances
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, last_editor, last_modified, name, args, edge_function, active)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeApplicationFunctionInstanceList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Function Instances
      tags:
      - Edge Applications - Function
    post:
      description: Create a new Function Instance for a specific Edge Application
        in your account.
      operationId: create_edge_application_function_instance
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationFunctionInstanceRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Application Function Instance
      tags:
      - Edge Applications - Function
  /edge_application/applications/{edge_application_id}/functions/{function_id}:
    delete:
      description: Destroy a specific Edge Application Function Instance in your account.
      operationId: destroy_edge_application_function_instance
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Application Function Instance
      tags:
      - Edge Applications - Function
    get:
      description: Retrieve details of a specific Edge Application Function Instance
        in your account.
      operationId: retrieve_edge_application_function_instance
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Application Function Instance
      tags:
      - Edge Applications - Function
    patch:
      description: Update one or more fields of an existing Edge Application Function
        Instance without affecting other fields.
      operationId: partial_update_edge_application_function_instance
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeApplicationFunctionInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Application Function Instance
      tags:
      - Edge Applications - Function
    put:
      description: Update an existing Edge Application Function Instance. This replaces
        the entire Function Instance with the new data provided.
      operationId: update_edge_application_function_instance
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationFunctionInstanceRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Application Function Instance
      tags:
      - Edge Applications - Function
  /edge_application/applications/{edge_application_id}/rules:
    get:
      description: List all Rules for a specific Edge Application owned by your account.
      operationId: List Edge Application Rule
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, phase, active, description, order, behaviors, criteria, last_editor, last_modified)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeApplicationRuleEngineList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Application Rules
      tags:
      - Edge Applications - Rules
    post:
      description: Create a new Rule for a specific Edge Application in your account.
      operationId: Create Edge Application Rule
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationRuleEngineRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Application Rule
      tags:
      - Edge Applications - Rules
  /edge_application/applications/{edge_application_id}/rules/{id}:
    delete:
      description: Destroy a specific Rule in your account.
      operationId: Destroy Edge Application Rule
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeApplicationRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeApplicationRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Application Rule
      tags:
      - Edge Applications - Rules
    get:
      description: Retrieve details of a specific Rule in your account.
      operationId: Retrieve Edge Application Rule
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeApplicationRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Application Rule
      tags:
      - Edge Applications - Rules
    patch:
      description: Update one or more fields of an existing Edge Application Rule  without
        affecting other fields.
      operationId: Partial update Edge Application Rule
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeApplicationRuleEngineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Application Rule
      tags:
      - Edge Applications - Rules
    put:
      description: Update an existing Rule. This replaces the entire Rule with the
        new data provided.
      operationId: Update Edge Application Rule
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationRuleEngineRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplicationRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplicationRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Application Rule
      tags:
      - Edge Applications - Rules
  /edge_application/applications/{edge_application_id}/rules/order:
    put:
      description: Reoder all Rules for a specific Edge Application owned by your
        account.
      operationId: Order Edge Application Rules
      parameters:
      - explode: false
        in: path
        name: edge_application_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: order)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationRuleEngineOrderRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeApplicationRuleEngineList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeApplicationRuleEngineList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Ordering Edge Application Rules
      tags:
      - Edge Applications - Rules
  /edge_application/applications/{global_id}:
    delete:
      description: Destruction of a specific Edge Application in your account.
      operationId: Destroy Edge Application
      parameters:
      - explode: false
        in: path
        name: global_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Application
      tags:
      - Edge Applications
    get:
      description: Retrieve details of a specific Edge Application in your account.
      operationId: Retrieve Edge Application
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: global_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Application
      tags:
      - Edge Applications
    patch:
      description: Update one or more fields of an existing Edge Application without
        affecting other fields.
      operationId: Partial update Edge Application
      parameters:
      - explode: false
        in: path
        name: global_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeApplicationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Application
      tags:
      - Edge Applications
    put:
      description: Update an existing Edge Application. This replaces the entire Edge
        Application with the new data provided.
      operationId: Update Edge Application
      parameters:
      - explode: false
        in: path
        name: global_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeApplicationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Application
      tags:
      - Edge Applications
  /edge_application/applications/{global_id}/clone:
    post:
      description: "Create a new Edge Application by performing a deep copy of an\
        \ existing Edge Application, including its Cache Settings, Origins, Error\
        \ Responses, Function Instances, and Rules Engine."
      operationId: Clone Edge Application
      parameters:
      - explode: false
        in: path
        name: global_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneEdgeApplicationRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeApplication"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestEdgeApplication"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeApplication"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Clone an Edge Application
      tags:
      - Edge Applications
  /edge_connector/connectors:
    get:
      description: List all Edge Connectors owned by your account.
      operationId: list_edge_connectors
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: )
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeConnectorPolymorphicList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Connectors
      tags:
      - Edge Connectors
    post:
      description: Create a new Edge Connector in your account.
      operationId: create_edge_connector
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeConnectorPolymorphicRequest"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Connector
      tags:
      - Edge Connectors
  /edge_connector/connectors/{id}:
    delete:
      description: Destruction of a specific Edge Connector in your account.
      operationId: destroy_edge_connector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Connector
      tags:
      - Edge Connectors
    get:
      description: Retrieve details of a specific Edge Connector in your account.
      operationId: retrieve_edge_connector
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Connector
      tags:
      - Edge Connectors
    patch:
      description: Update one or more fields of an existing Edge Connector without
        affecting other fields.
      operationId: partial_update_edge_connector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeConnectorPolymorphicRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Connector
      tags:
      - Edge Connectors
    put:
      description: Update an existing Edge Connector. This replaces the entire Edge
        Connector with the new data provided.
      operationId: update_edge_connector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeConnectorPolymorphicRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Connector
      tags:
      - Edge Connectors
  /edge_firewall/firewalls:
    get:
      description: List all Edge Firewalls owned by your account.
      operationId: List Edge Firewalls
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, debug, active, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeFirewallList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Firewalls
      tags:
      - Edge Firewalls
    post:
      description: Create a new Edge Firewall for your account.
      operationId: Create Edge Firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Firewall
      tags:
      - Edge Firewalls
  /edge_firewall/firewalls/{edge_firewall_id}/functions:
    get:
      description: List all Function Instances for a specific Edge Firewall owned
        by your account.
      operationId: List Edge Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, last_editor, last_modified, name, args, edge_function, active)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeFirewallFunctionInstanceList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Firewall Function
      tags:
      - Edge Firewalls - Function
    post:
      description: Create a new Function Instance for a specific Edge Firewall in
        your account.
      operationId: Create Edge Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallFunctionInstanceRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Firewall Function
      tags:
      - Edge Firewalls - Function
  /edge_firewall/firewalls/{edge_firewall_id}/functions/{id}:
    delete:
      description: Destroy a specific Edge Firewall Function Instance in your account.
      operationId: Destroy Edge Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Firewall Function
      tags:
      - Edge Firewalls - Function
    get:
      description: Retrieve details of a specific Edge Firewall Function Instance
        in your account.
      operationId: Retrieve Edge Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Firewall Function
      tags:
      - Edge Firewalls - Function
    patch:
      description: Update one or more fields of an existing Edge Firewall Function
        Instance without affecting other fields.
      operationId: Partial update Edge Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeFirewallFunctionInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Firewall Function
      tags:
      - Edge Firewalls - Function
    put:
      description: Update an existing Edge Firewall Function Instance. This replaces
        the entire Function Instance with the new data provided.
      operationId: Update Edge Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallFunctionInstanceRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Firewall Function
      tags:
      - Edge Firewalls - Function
  /edge_firewall/firewalls/{edge_firewall_id}/rules:
    get:
      description: List all Rules for a specific Edge Firewall owned by your account.
      operationId: List Edge Firewall Rules
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, last_editor, last_modified, active, description, order, behaviors, criteria)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeFirewallRuleEngineList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Firewall Rules
      tags:
      - Edge Firewalls - Rules Engine
    post:
      description: Create a new Rule for a specific Edge Firewall in your account.
      operationId: Create Edge Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallRuleEngineRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Firewall Rule
      tags:
      - Edge Firewalls - Rules Engine
  /edge_firewall/firewalls/{edge_firewall_id}/rules/{id}:
    delete:
      description: Destroy a specific Rule in your account.
      operationId: Destroy Edge Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Firewall Rule
      tags:
      - Edge Firewalls - Rules Engine
    get:
      description: Retrieve details of a specific Rule in your account.
      operationId: Retrieve Edge Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Firewall Rule
      tags:
      - Edge Firewalls - Rules Engine
    patch:
      description: Update one or more fields of an existing Edge Firewall Rule without
        affecting other fields.
      operationId: Partial update Edge Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeFirewallRuleEngineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Firewall Rule
      tags:
      - Edge Firewalls - Rules Engine
    put:
      description: Update an existing Rule. This replaces the entire Rule with the
        new data provided.
      operationId: Update Edge Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallRuleEngineRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Firewall Rule
      tags:
      - Edge Firewalls - Rules Engine
  /edge_firewall/firewalls/{edge_firewall_id}/rules/order:
    put:
      description: Reoder all Rules for a specific Edge Firewall owned by your account.
      operationId: Order Edge Firewall Rules
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          pattern: "^[1-9]\\d*$"
          type: string
        style: simple
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: order)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallRuleEngineOrderRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeFirewallRuleEngineList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeFirewallRuleEngineList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Ordering Edge Firewall Rules
      tags:
      - Edge Firewalls - Rules Engine
  /edge_firewall/firewalls/{id}:
    delete:
      description: Destruction of a specific Edge Firewall in your account.
      operationId: Destroy Edge Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteEdgeFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Firewall
      tags:
      - Edge Firewalls
    get:
      description: Retrieve details from a specific Edge Firewall in your account.
      operationId: Retrieve Edge Firewall
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveEdgeFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from an Edge Firewall
      tags:
      - Edge Firewalls
    patch:
      description: Update one or more fields of an existing Edge Firewall without
        affecting other fields.
      operationId: Partial update Edge Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeFirewallRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Firewall
      tags:
      - Edge Firewalls
    put:
      description: Update an existing Edge Firewall. This replaces the entire Edge
        Firewall with the new data provided.
      operationId: Update Edge Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFirewallRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Firewall
      tags:
      - Edge Firewalls
  /edge_firewall/firewalls/{id}/clone:
    post:
      description: "Create a new Edge Firewall by performing a deep copy of an existing\
        \ Edge Firewall, including its Function Instances and Rules Engine."
      operationId: Clone Edge Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneEdgeFirewallRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Clone an Edge Firewall
      tags:
      - Edge Firewalls
  /edge_firewall/wafs:
    get:
      description: List all WAFs owned by your account.
      operationId: List WAFs
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, active, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWAFList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Web Application Firewalls (WAFs)
      tags:
      - WAFs
    post:
      description: Create a new WAF for your account.
      operationId: Create WAF
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Web Application Firewall (WAF)
      tags:
      - WAFs
  /edge_firewall/wafs/{waf_id}:
    delete:
      description: Destruction of a specific WAF in your account.
      operationId: Destroy WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Web Application Firewall (WAF)
      tags:
      - WAFs
    get:
      description: Retrieve details from a specific WAF in your account.
      operationId: Retrieve WAF
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a Web Application Firewall (WAF)
      tags:
      - WAFs
    patch:
      description: Update one or more fields of an existing WAF without affecting
        other fields.
      operationId: Partial update WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWAFRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Web Application Firewall (WAF)
      tags:
      - WAFs
    put:
      description: Update an existing WAF. This replaces the entire WAF with the new
        data provided.
      operationId: Update WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Web Application Firewall (WAF)
      tags:
      - WAFs
  /edge_firewall/wafs/{waf_id}/clone:
    post:
      description: "Create a new WAF by performing a deep copy of an existing WAF,\
        \ including its Exceptions."
      operationId: Clone WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneWAFRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Clone a Web Application Firewall (WAF)
      tags:
      - WAFs
  /edge_firewall/wafs/{waf_id}/exceptions:
    get:
      description: List all Exceptions associated with a specific WAF owned by your
        account.
      operationId: List WAF Exceptions
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: rule_id, name, path, conditions, operator, active, last_editor, last_modified)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWAFRuleList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Exceptions for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    post:
      description: Create a new Exception for a specific WAF in your account.
      operationId: Create WAF Exception
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRuleRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Exception for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
  /edge_firewall/wafs/{waf_id}/exceptions/{exception_id}:
    delete:
      description: Remove a specific Exception from a WAF in your account.
      operationId: Destroy WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Exception from a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    get:
      description: Retrieve details of a specific Exception from a WAF in your account.
      operationId: Retrieve WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Exception from a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    patch:
      description: Update one or more fields of an existing exception for a WAF without
        affecting other fields.
      operationId: Partial Update WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWAFRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Exception for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    put:
      description: Update an existing Exception for a WAF. This replaces the entire
        rule with the new data provided.
      operationId: Update WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Exception for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
  /edge_functions/functions:
    get:
      description: List all Edge Functions owned by your account.
      operationId: List Edge Functions
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, language, json_args, initiator_type, active, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedGetEdgeFunctionsList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Edge Functions
      tags:
      - Edge Functions
    post:
      description: Create a new Edge Function in your account.
      operationId: Create Edge Function
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFunctionsRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFunctions"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFunctions"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Edge Function
      tags:
      - Edge Functions
  /edge_functions/functions/{id}:
    delete:
      description: Destroy a specific Edge Function in your account.
      operationId: Destroy Edge Function
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteEdgeFunctions"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteGetEdgeFunctions"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Edge Function
      tags:
      - Edge Functions
    get:
      description: Retrieve details of a specific Edge Function in your account.
      operationId: Retrieve Edge Function
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveGetEdgeFunctions"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Edge Function
      tags:
      - Edge Functions
    patch:
      description: Update one or more fields of an existing Edge Function without
        affecting other fields.
      operationId: Partial update Edge Function
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeFunctionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFunctions"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFunctions"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Edge Function
      tags:
      - Edge Functions
    put:
      description: Update an existing Edge Function. This replaces the entire Edge
        Function with the new data provided.
      operationId: Update Edge Function
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFunctionsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEdgeFunctions"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncEdgeFunctions"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Function
      tags:
      - Edge Functions
  /workspace/custom_pages:
    get:
      description: List all Custom Pages owned by your account.
      operationId: list_custom_pages
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCustomPagesList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Custom Pages
      tags:
      - Custom Pages
    post:
      description: Create a new Custom Page in your account.
      operationId: create_custom_page
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomPagesRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomPages"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCustomPages"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Custom Page
      tags:
      - Custom Pages
  /workspace/custom_pages/{id}:
    delete:
      description: Destruction of a specific Custom Page in your account.
      operationId: destroy_custom_page
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteCustomPages"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCustomPages"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Custom Page
      tags:
      - Custom Pages
    get:
      description: Retrieve details of a specific Custom Page in your account.
      operationId: retrieve_custom_page
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCustomPages"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Custom Page
      tags:
      - Custom Pages
    patch:
      description: Update one or more fields of an existing Custom Page without affecting
        other fields.
      operationId: partial_update_custom_page
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCustomPagesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomPages"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCustomPages"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Custom Page
      tags:
      - Custom Pages
    put:
      description: Update an existing Custom Page. This replaces the entire Custom
        Page with the new data provided.
      operationId: update_custom_page
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomPagesRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomPages"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCustomPages"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Custom Page
      tags:
      - Custom Pages
  /workspace/network_lists:
    get:
      description: List all Network Lists owned by your account.
      operationId: list_network_lists
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, type, last_editor, last_modified, active)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedNetworkListList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Network Lists
      tags:
      - Network Lists
    post:
      description: Create a new Network List in your account.
      operationId: create_network_list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkListDetailRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Network List
      tags:
      - Network Lists
  /workspace/network_lists/{id}:
    delete:
      description: Destroy a specific Network List in your account.
      operationId: destroy_network_list
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Network List
      tags:
      - Network Lists
    get:
      description: Retrieve details of a specific Network List in your account.
      operationId: retrieve_network_list
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by IPv4. Only applicable for network lists of type 'ip_cidr'.
        explode: true
        in: query
        name: ipv4
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by IPv6. Only applicable for network lists of type 'ip_cidr'.
        explode: true
        in: query
        name: ipv6
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Network List
      tags:
      - Network Lists
    patch:
      description: Update one or more fields of an existing Network List without affecting
        other fields.
      operationId: partial_update_network_list
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedNetworkListDetailRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Network List
      tags:
      - Network Lists
    put:
      description: Update an existing Network List. This replaces the entire Network
        List with the new data provided.
      operationId: update_network_list
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkListDetailRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Network List
      tags:
      - Network Lists
  /workspace/purge/{purge_type}:
    post:
      description: Create a new Purge Request in your account.
      operationId: Create Purge Request
      parameters:
      - description: "type of purge: URL, Wildcard or Cachekey"
        explode: false
        in: path
        name: purge_type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurgeInputRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponsePurgeInput"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncPurgeInput"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Purge Request
      tags:
      - Purge
  /workspace/workloads:
    get:
      description: List all Workloads owned by your account.
      operationId: List Workloads
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, last_editor, last_modified, active, workload_domain_allow_access, workload_domain, infrastructure, domains, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWorkloadList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Workloads
      tags:
      - Workloads
    post:
      description: Create a new Workload in your account.
      operationId: Create Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkload"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Workload
      tags:
      - Workloads
  /workspace/workloads/{workload_id}:
    delete:
      description: Destruction of a specific Workload in your account.
      operationId: Destroy Workload
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Workload
      tags:
      - Workloads
    get:
      description: Retrieve details of a specific Workload in your account.
      operationId: Retrieve Workload
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Workload
      tags:
      - Workloads
    patch:
      description: Update one or more fields of an existing Workload without affecting
        other fields.
      operationId: Partial update Workload
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWorkloadRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkload"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Workload
      tags:
      - Workloads
    put:
      description: Update an existing Workload. This replaces the entire Workload
        with the new data provided.
      operationId: Update Workload
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkload"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Workload
      tags:
      - Workloads
  /workspace/workloads/{workload_id}/deployments:
    get:
      description: List all Workload Deployments related to your account's Workloads.
      operationId: List Workload Deployments
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, active, last_editor, last_modified, current)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWorkloadDeploymentList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Workload Deployments
      tags:
      - Workload Deployments
    post:
      description: Create a new Workload Deployment in your account.
      operationId: Create Workload Deployment
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadDeploymentRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestWorkloadDeployment"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Workload Deployment
      tags:
      - Workload Deployments
  /workspace/workloads/{workload_id}/deployments/{deployment_id}:
    delete:
      description: Destruction of a specific Workload Deployment in your account.
      operationId: Destroy Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWorkloadDeployment"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWorkloadDeployment"
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestWorkloadDeployment"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Workload Deployment
      tags:
      - Workload Deployments
    get:
      description: Retrieve details of a specific Workload Deployment in your account.
      operationId: Retrieve Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWorkloadDeployment"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Workload Deployment
      tags:
      - Workload Deployments
    patch:
      description: Update one or more fields of an existing Workload Deployment without
        affecting other fields.
      operationId: Partial update Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWorkloadDeploymentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkloadDeployment"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Workload Deployment
      tags:
      - Workload Deployments
    put:
      description: Update an existing Workload Deployment. This replaces the entire
        Workload Deployment with the new data provided.
      operationId: Update Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadDeploymentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkloadDeployment"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Workload Deployment
      tags:
      - Workload Deployments
components:
  schemas:
    AdaptiveDeliveryActionEnum:
      description: |-
        * `ignore` - Ignore
        * `whitelist` - Whitelist
      title: AdaptiveDeliveryActionEnum
      type: string
    Address:
      additionalProperties: false
      example:
        tls_port: 9607
        max_fails: 3
        address: address
        plain_port: 39501
        max_conns: 563
        weight: 59
        active: true
        server_role: ""
        fail_timeout: 42
      properties:
        address:
          description: IPv4/IPv6 address or CNAME to resolve
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        plain_port:
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        tls_port:
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        server_role:
          allOf:
          - $ref: "#/components/schemas/ServerRoleEnum"
          description: |-
            Role of the address in load balancing

            * `primary` - Primary
            * `backup` - Backup
        weight:
          description: Weight used in load balancing strategy
          format: int64
          maximum: 100
          minimum: 0
          type: integer
        active:
          description: Indicates if the address is active for use
          type: boolean
        max_conns:
          description: Maximum number of open connections per Edge Application instance
          format: int64
          maximum: 1000
          minimum: 0
          type: integer
        max_fails:
          description: Maximum number of communication attempts before marking as
            unavailable
          format: int64
          maximum: 10
          minimum: 1
          type: integer
        fail_timeout:
          description: Timeout for communication attempts
          format: int64
          maximum: 60
          minimum: 1
          type: integer
      required:
      - address
      title: Address
      type: object
    AddressRequest:
      additionalProperties: false
      example:
        tls_port: 39501
        max_fails: 6
        address: address
        plain_port: 5249
        max_conns: 596
        weight: 14
        active: true
        server_role: ""
        fail_timeout: 14
      properties:
        address:
          description: IPv4/IPv6 address or CNAME to resolve
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        plain_port:
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        tls_port:
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        server_role:
          allOf:
          - $ref: "#/components/schemas/ServerRoleEnum"
          description: |-
            Role of the address in load balancing

            * `primary` - Primary
            * `backup` - Backup
        weight:
          description: Weight used in load balancing strategy
          format: int64
          maximum: 100
          minimum: 0
          type: integer
        active:
          description: Indicates if the address is active for use
          type: boolean
        max_conns:
          description: Maximum number of open connections per Edge Application instance
          format: int64
          maximum: 1000
          minimum: 0
          type: integer
        max_fails:
          description: Maximum number of communication attempts before marking as
            unavailable
          format: int64
          maximum: 10
          minimum: 1
          type: integer
        fail_timeout:
          description: Timeout for communication attempts
          format: int64
          maximum: 60
          minimum: 1
          type: integer
      required:
      - address
      title: AddressRequest
      type: object
    ApplicationAcceleratorModule:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: ApplicationAcceleratorModule
      type: object
    ApplicationAcceleratorModuleRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: ApplicationAcceleratorModuleRequest
      type: object
    ApplicationControlsModule:
      additionalProperties: false
      example:
        cache_by_cookies: cache_by_cookies
        query_string_fields:
        - query_string_fields
        - query_string_fields
        adaptive_delivery_action: adaptive_delivery_action
        device_group:
        - 5
        - 5
        query_string_sort_enabled: true
        cookie_names:
        - cookie_names
        - cookie_names
        cache_by_query_string: cache_by_query_string
      properties:
        cache_by_query_string:
          description: |-
            * `ignore` - Content does not vary by Query String (Improves Caching)
            * `whitelist` - Content varies by some Query String fields (Whitelist)
            * `blacklist` - Content varies by Query String, except for some fields (Blacklist)
            * `all` - Content varies by all Query String fields
          title: CacheByQueryStringEnum
          type: string
        query_string_fields:
          items:
            type: string
          type: array
        query_string_sort_enabled:
          type: boolean
        cache_by_cookies:
          description: |-
            * `ignore` - Content does not vary by Cookies (Improves Caching)
            * `whitelist` - Content varies by some Cookies (Whitelist)
            * `blacklist` - Content varies by Cookies, with the exception of a few (Blacklist)
            * `all` - Content varies by all Cookies
          title: CacheByCookiesEnum
          type: string
        cookie_names:
          items:
            type: string
          type: array
        adaptive_delivery_action:
          description: |-
            * `ignore` - Ignore
            * `whitelist` - Whitelist
          title: AdaptiveDeliveryActionEnum
          type: string
        device_group:
          items:
            format: int64
            type: integer
          type: array
      required:
      - adaptive_delivery_action
      - cache_by_cookies
      - cache_by_query_string
      - cookie_names
      - device_group
      - query_string_fields
      - query_string_sort_enabled
      title: ApplicationControlsModule
      type: object
    ApplicationControlsModuleRequest:
      additionalProperties: false
      example:
        cache_by_cookies: cache_by_cookies
        query_string_fields:
        - query_string_fields
        - query_string_fields
        adaptive_delivery_action: adaptive_delivery_action
        device_group:
        - 1
        - 1
        query_string_sort_enabled: true
        cookie_names:
        - cookie_names
        - cookie_names
        cache_by_query_string: cache_by_query_string
      properties:
        cache_by_query_string:
          description: |-
            * `ignore` - Content does not vary by Query String (Improves Caching)
            * `whitelist` - Content varies by some Query String fields (Whitelist)
            * `blacklist` - Content varies by Query String, except for some fields (Blacklist)
            * `all` - Content varies by all Query String fields
          title: CacheByQueryStringEnum
          type: string
        query_string_fields:
          items:
            type: string
          type: array
        query_string_sort_enabled:
          type: boolean
        cache_by_cookies:
          description: |-
            * `ignore` - Content does not vary by Cookies (Improves Caching)
            * `whitelist` - Content varies by some Cookies (Whitelist)
            * `blacklist` - Content varies by Cookies, with the exception of a few (Blacklist)
            * `all` - Content varies by all Cookies
          title: CacheByCookiesEnum
          type: string
        cookie_names:
          items:
            type: string
          type: array
        adaptive_delivery_action:
          description: |-
            * `ignore` - Ignore
            * `whitelist` - Whitelist
          title: AdaptiveDeliveryActionEnum
          type: string
        device_group:
          items:
            format: int64
            type: integer
          type: array
      required:
      - adaptive_delivery_action
      - cache_by_cookies
      - cache_by_query_string
      - cookie_names
      - device_group
      - query_string_fields
      - query_string_sort_enabled
      title: ApplicationControlsModuleRequest
      type: object
    BlankEnum:
      title: BlankEnum
      type: string
    BrowserCacheModule:
      additionalProperties: false
      example:
        max_age: 19008185
        behavior: behavior
      properties:
        behavior:
          description: |-
            * `honor` - Honor Origin Cache Headers
            * `override` - Override Cache Settings
            * `no-cache` - No Cache
          title: BrowserCacheModuleBehaviorEnum
          type: string
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
      required:
      - behavior
      - max_age
      title: BrowserCacheModule
      type: object
    BrowserCacheModuleBehaviorEnum:
      description: |-
        * `honor` - Honor Origin Cache Headers
        * `override` - Override Cache Settings
        * `no-cache` - No Cache
      title: BrowserCacheModuleBehaviorEnum
      type: string
    BrowserCacheModuleRequest:
      additionalProperties: false
      example:
        max_age: 2525491
        behavior: behavior
      properties:
        behavior:
          description: |-
            * `honor` - Honor Origin Cache Headers
            * `override` - Override Cache Settings
            * `no-cache` - No Cache
          title: BrowserCacheModuleBehaviorEnum
          type: string
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
      required:
      - behavior
      - max_age
      title: BrowserCacheModuleRequest
      type: object
    CacheByCookiesEnum:
      description: |-
        * `ignore` - Content does not vary by Cookies (Improves Caching)
        * `whitelist` - Content varies by some Cookies (Whitelist)
        * `blacklist` - Content varies by Cookies, with the exception of a few (Blacklist)
        * `all` - Content varies by all Cookies
      title: CacheByCookiesEnum
      type: string
    CacheByQueryStringEnum:
      description: |-
        * `ignore` - Content does not vary by Query String (Improves Caching)
        * `whitelist` - Content varies by some Query String fields (Whitelist)
        * `blacklist` - Content varies by Query String, except for some fields (Blacklist)
        * `all` - Content varies by all Query String fields
      title: CacheByQueryStringEnum
      type: string
    CacheModule:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: CacheModule
      type: object
    CacheModuleRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: CacheModuleRequest
      type: object
    CacheSetting:
      additionalProperties: false
      example:
        name: name
        id: 0
        modules:
          edge_cache:
            max_age: 4622587
            caching_for_post_enabled: true
            caching_for_options_enabled: true
            stale_cache_enabled: true
            behavior: behavior
            tiered_cache_region: tiered_cache_region
            tiered_cache_enabled: true
          browser_cache:
            max_age: 19008185
            behavior: behavior
          slice_controls:
            slice_tiered_caching_enabled: true
            slice_edge_caching_enabled: true
            slice_configuration_range: 577
            slice_configuration_enabled: true
          application_controls:
            cache_by_cookies: cache_by_cookies
            query_string_fields:
            - query_string_fields
            - query_string_fields
            adaptive_delivery_action: adaptive_delivery_action
            device_group:
            - 5
            - 5
            query_string_sort_enabled: true
            cookie_names:
            - cookie_names
            - cookie_names
            cache_by_query_string: cache_by_query_string
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
          type: string
        modules:
          $ref: "#/components/schemas/CacheSettingModules"
      required:
      - id
      - name
      title: CacheSetting
      type: object
    CacheSettingModules:
      additionalProperties: false
      example:
        edge_cache:
          max_age: 4622587
          caching_for_post_enabled: true
          caching_for_options_enabled: true
          stale_cache_enabled: true
          behavior: behavior
          tiered_cache_region: tiered_cache_region
          tiered_cache_enabled: true
        browser_cache:
          max_age: 19008185
          behavior: behavior
        slice_controls:
          slice_tiered_caching_enabled: true
          slice_edge_caching_enabled: true
          slice_configuration_range: 577
          slice_configuration_enabled: true
        application_controls:
          cache_by_cookies: cache_by_cookies
          query_string_fields:
          - query_string_fields
          - query_string_fields
          adaptive_delivery_action: adaptive_delivery_action
          device_group:
          - 5
          - 5
          query_string_sort_enabled: true
          cookie_names:
          - cookie_names
          - cookie_names
          cache_by_query_string: cache_by_query_string
      properties:
        browser_cache:
          $ref: "#/components/schemas/BrowserCacheModule"
        edge_cache:
          $ref: "#/components/schemas/EdgeCacheModule"
        application_controls:
          $ref: "#/components/schemas/ApplicationControlsModule"
        slice_controls:
          $ref: "#/components/schemas/SliceControlsModule"
      required:
      - application_controls
      - browser_cache
      - edge_cache
      - slice_controls
      title: CacheSettingModules
      type: object
    CacheSettingModulesRequest:
      additionalProperties: false
      example:
        edge_cache:
          max_age: 19008185
          caching_for_post_enabled: true
          caching_for_options_enabled: true
          stale_cache_enabled: true
          behavior: behavior
          tiered_cache_region: tiered_cache_region
          tiered_cache_enabled: true
        browser_cache:
          max_age: 2525491
          behavior: behavior
        slice_controls:
          slice_tiered_caching_enabled: true
          slice_edge_caching_enabled: true
          slice_configuration_range: 610
          slice_configuration_enabled: true
        application_controls:
          cache_by_cookies: cache_by_cookies
          query_string_fields:
          - query_string_fields
          - query_string_fields
          adaptive_delivery_action: adaptive_delivery_action
          device_group:
          - 1
          - 1
          query_string_sort_enabled: true
          cookie_names:
          - cookie_names
          - cookie_names
          cache_by_query_string: cache_by_query_string
      properties:
        browser_cache:
          $ref: "#/components/schemas/BrowserCacheModuleRequest"
        edge_cache:
          $ref: "#/components/schemas/EdgeCacheModuleRequest"
        application_controls:
          $ref: "#/components/schemas/ApplicationControlsModuleRequest"
        slice_controls:
          $ref: "#/components/schemas/SliceControlsModuleRequest"
      required:
      - application_controls
      - browser_cache
      - edge_cache
      - slice_controls
      title: CacheSettingModulesRequest
      type: object
    CacheSettingRequest:
      additionalProperties: false
      example:
        name: name
        modules:
          edge_cache:
            max_age: 19008185
            caching_for_post_enabled: true
            caching_for_options_enabled: true
            stale_cache_enabled: true
            behavior: behavior
            tiered_cache_region: tiered_cache_region
            tiered_cache_enabled: true
          browser_cache:
            max_age: 2525491
            behavior: behavior
          slice_controls:
            slice_tiered_caching_enabled: true
            slice_edge_caching_enabled: true
            slice_configuration_range: 610
            slice_configuration_enabled: true
          application_controls:
            cache_by_cookies: cache_by_cookies
            query_string_fields:
            - query_string_fields
            - query_string_fields
            adaptive_delivery_action: adaptive_delivery_action
            device_group:
            - 1
            - 1
            query_string_sort_enabled: true
            cookie_names:
            - cookie_names
            - cookie_names
            cache_by_query_string: cache_by_query_string
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
          type: string
        modules:
          $ref: "#/components/schemas/CacheSettingModulesRequest"
      required:
      - name
      title: CacheSettingRequest
      type: object
    CaptureMatchGroupsArgument:
      additionalProperties: false
      properties:
        subject:
          maxLength: 50
          minLength: 4
          pattern: "^(\\$\\{[a-z_]+\\})$"
          type: string
        regex:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        captured_array:
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z_]{0,9}$"
          type: string
      required:
      - captured_array
      - regex
      - subject
      title: CaptureMatchGroupsArgument
      type: object
    CaptureMatchGroupsArgumentRequest:
      additionalProperties: false
      properties:
        subject:
          maxLength: 50
          minLength: 4
          pattern: "^(\\$\\{[a-z_]+\\})$"
          type: string
        regex:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        captured_array:
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z_]{0,9}$"
          type: string
      required:
      - captured_array
      - regex
      - subject
      title: CaptureMatchGroupsArgumentRequest
      type: object
    CiphersEnum:
      description: |-
        * `1` - TLSv1.2_2018 - TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256
        * `2` - TLSv1.2_2019 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
        * `3` - TLSv1.3_2022 - ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
        * `4` - TLSv1.2_2021 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
        * `5` - Legacy_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA
        * `6` - Compatible_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
        * `7` - Modern_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305
        * `8` - Legacy_v2017Q1 - AES128-CCM:AES128-CCM8:AES128-GCM-SHA256:AES128-SHA:AES128-SHA256:AES256-CCM:AES256-CCM8:AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
      format: int64
      title: CiphersEnum
      type: integer
    CloneEdgeApplicationRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
      required:
      - name
      title: CloneEdgeApplicationRequest
      type: object
    CloneEdgeFirewallRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
      required:
      - name
      title: CloneEdgeFirewallRequest
      type: object
    CloneWAFRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
      required:
      - name
      title: CloneWAFRequest
      type: object
    CodeEnum:
      description: |-
        * `default` - default
        * `400` - Bad Request
        * `401` - Unauthorized
        * `403` - Forbidden
        * `404` - Not Found
        * `405` - Method Not Allowed
        * `406` - Not Acceptable
        * `408` - Request Timeout
        * `409` - Conflict
        * `410` - Gone
        * `411` - Length Required
        * `414` - URI Too Long
        * `415` - Unsupported Media Type
        * `416` - Range Not Satisfiable
        * `426` - Upgrade Required
        * `429` - Too Many Requests
        * `431` - Request Header Fields Too Large
        * `500` - Internal Server Error
        * `501` - Not Implemented
        * `502` - Bad Gateway
        * `503` - Service Unavailable
        * `504` - Gateway Timeout
        * `505` - HTTP Version Not Supported
      title: CodeEnum
      type: string
    ConditionalEnum:
      description: |-
        * `if` - if
        * `or` - or
        * `and` - and
      title: ConditionalEnum
      type: string
    ConnectorCustomPages:
      additionalProperties: false
      example:
        pages:
        - code: code
          custom_status_code: 397
          ttl: 4622587
          uri: uri
        - code: code
          custom_status_code: 397
          ttl: 4622587
          uri: uri
        edge_connector: 6
      properties:
        edge_connector:
          format: int64
          nullable: true
          type: integer
        pages:
          items:
            $ref: "#/components/schemas/Page"
          type: array
      required:
      - pages
      title: ConnectorCustomPages
      type: object
    ConnectorCustomPagesRequest:
      additionalProperties: false
      example:
        pages:
        - code: code
          custom_status_code: 173
          ttl: 19008185
          uri: uri
        - code: code
          custom_status_code: 173
          ttl: 19008185
          uri: uri
        edge_connector: 0
      properties:
        edge_connector:
          format: int64
          nullable: true
          type: integer
        pages:
          items:
            $ref: "#/components/schemas/PageRequest"
          type: array
      required:
      - pages
      title: ConnectorCustomPagesRequest
      type: object
    CustomPages:
      additionalProperties: false
      example:
        product_version: product_version
        connector_custom_pages:
          pages:
          - code: code
            custom_status_code: 397
            ttl: 4622587
            uri: uri
          - code: code
            custom_status_code: 397
            ttl: 4622587
            uri: uri
          edge_connector: 6
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 255
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        active:
          title: Is Active
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        connector_custom_pages:
          $ref: "#/components/schemas/ConnectorCustomPages"
      required:
      - connector_custom_pages
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: CustomPages
      type: object
    CustomPagesRequest:
      additionalProperties: false
      example:
        connector_custom_pages:
          pages:
          - code: code
            custom_status_code: 173
            ttl: 19008185
            uri: uri
          - code: code
            custom_status_code: 173
            ttl: 19008185
            uri: uri
          edge_connector: 0
        name: name
        active: true
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        active:
          title: Is Active
          type: boolean
        connector_custom_pages:
          $ref: "#/components/schemas/ConnectorCustomPagesRequest"
      required:
      - connector_custom_pages
      - name
      title: CustomPagesRequest
      type: object
    DefaultDeploymentStrategy:
      additionalProperties: false
      example:
        custom_page: 1
        edge_firewall: 1
        edge_application: 5559347081229897728
      properties:
        edge_application:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        edge_firewall:
          format: int64
          nullable: true
          type: integer
        custom_page:
          format: int64
          minimum: 1
          nullable: true
          type: integer
      required:
      - edge_application
      title: DefaultDeploymentStrategy
      type: object
    DefaultDeploymentStrategyAttrs:
      additionalProperties: false
      properties:
        attributes:
          $ref: "#/components/schemas/DefaultDeploymentStrategy"
      required:
      - attributes
      title: DefaultDeploymentStrategyAttrs
      type: object
    DefaultDeploymentStrategyAttrsRequest:
      additionalProperties: false
      properties:
        attributes:
          $ref: "#/components/schemas/DefaultDeploymentStrategyRequest"
      required:
      - attributes
      title: DefaultDeploymentStrategyAttrsRequest
      type: object
    DefaultDeploymentStrategyRequest:
      additionalProperties: false
      example:
        custom_page: 1
        edge_firewall: 6
        edge_application: 738633633822310400
      properties:
        edge_application:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        edge_firewall:
          format: int64
          nullable: true
          type: integer
        custom_page:
          format: int64
          minimum: 1
          nullable: true
          type: integer
      required:
      - edge_application
      title: DefaultDeploymentStrategyRequest
      type: object
    DefaultErrorResponse:
      additionalProperties: false
      example:
        detail: detail
      properties:
        detail:
          maxLength: 4096
          minLength: 1
          pattern: .*
          type: string
      title: DefaultErrorResponse
      type: object
    DeploymentStrategy:
      $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyAttrs"
    DeploymentStrategyDefaultDeploymentStrategyAttrs:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/DeploymentStrategyShared"
      - $ref: "#/components/schemas/DefaultDeploymentStrategyAttrs"
      example:
        strategy_type: strategy_type
        attributes:
          custom_page: 1
          edge_firewall: 1
          edge_application: 5559347081229897728
      title: DeploymentStrategyDefaultDeploymentStrategyAttrs
    DeploymentStrategyDefaultDeploymentStrategyAttrsRequest:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/DeploymentStrategyShared"
      - $ref: "#/components/schemas/DefaultDeploymentStrategyAttrsRequest"
      example:
        strategy_type: strategy_type
        attributes:
          custom_page: 1
          edge_firewall: 6
          edge_application: 738633633822310400
      title: DeploymentStrategyDefaultDeploymentStrategyAttrsRequest
    DeploymentStrategyRequest:
      $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyAttrsRequest"
    DeploymentStrategyShared:
      additionalProperties: false
      description: |-
        Polymorphic serializer base class.

        Note that the discriminator field must exist at the same depth as the mapped
        serializer fields for the OpenAPI introspection. See
        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for
        more information. As such, it's not possible to define something like:

        {
            "object_type": "foo",
            "polymorphic_context": {
                <foo-specific fields>
            }
        }

        without explicitly wrapping this in a parent serializer, i.e. -
        ``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires
        access to the ``object_type`` in the parent scope.
      properties:
        strategy_type:
          description: '* `default` - Default'
          title: StrategyTypeEnum
          type: string
      required:
      - strategy_type
      title: DeploymentStrategyShared
      type: object
    EdgeApplication:
      additionalProperties: false
      example:
        product_version: product_version
        debug: true
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        modules:
          edge_cache:
            enabled: true
          application_accelerator:
            enabled: true
          tiered_cache:
            enabled: true
          image_processor:
            enabled: true
          edge_functions:
            enabled: true
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        modules:
          $ref: "#/components/schemas/EdgeApplicationModules"
        active:
          type: boolean
        debug:
          type: boolean
        product_version:
          readOnly: true
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: EdgeApplication
      type: object
    EdgeApplicationBehaviorField:
      additionalProperties: false
      example:
        argument: ""
        name: name
      properties:
        name:
          description: |-
            * `deny` - deny
            * `run_function` - run_function
            * `no_content` - no_content
            * `deliver` - deliver
            * `finish_request_phase` - finish_request_phase
            * `redirect_to_301` - redirect_to_301
            * `redirect_to_302` - redirect_to_302
            * `forward_cookies` - forward_cookies
            * `optimize_images` - optimize_images
            * `set_origin` - set_origin
            * `set_edge_connector` - set_edge_connector
            * `set_cache_policy` - set_cache_policy
            * `bypass_cache_phase` - bypass_cache_phase
            * `enable_gzip` - enable_gzip
            * `redirect_http_to_https` - redirect_http_to_https
            * `set_cookie` - set_cookie
            * `rewrite_request` - rewrite_request
            * `add_request_header` - add_request_header
            * `filter_request_header` - filter_request_header
            * `add_response_header` - add_response_header
            * `filter_response_header` - filter_response_header
            * `capture_match_groups` - capture_match_groups
            * `add_request_cookie` - add_request_cookie
            * `filter_response_cookie` - filter_response_cookie
            * `filter_request_cookie` - filter_request_cookie
          title: EdgeApplicationBehaviorNameField
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeApplicationBehaviorPolymorphicArgument"
          nullable: true
      required:
      - name
      title: EdgeApplicationBehaviorField
      type: object
    EdgeApplicationBehaviorFieldRequest:
      additionalProperties: false
      example:
        argument: ""
        name: name
      properties:
        name:
          description: |-
            * `deny` - deny
            * `run_function` - run_function
            * `no_content` - no_content
            * `deliver` - deliver
            * `finish_request_phase` - finish_request_phase
            * `redirect_to_301` - redirect_to_301
            * `redirect_to_302` - redirect_to_302
            * `forward_cookies` - forward_cookies
            * `optimize_images` - optimize_images
            * `set_origin` - set_origin
            * `set_edge_connector` - set_edge_connector
            * `set_cache_policy` - set_cache_policy
            * `bypass_cache_phase` - bypass_cache_phase
            * `enable_gzip` - enable_gzip
            * `redirect_http_to_https` - redirect_http_to_https
            * `set_cookie` - set_cookie
            * `rewrite_request` - rewrite_request
            * `add_request_header` - add_request_header
            * `filter_request_header` - filter_request_header
            * `add_response_header` - add_response_header
            * `filter_response_header` - filter_response_header
            * `capture_match_groups` - capture_match_groups
            * `add_request_cookie` - add_request_cookie
            * `filter_response_cookie` - filter_response_cookie
            * `filter_request_cookie` - filter_request_cookie
          title: EdgeApplicationBehaviorNameField
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeApplicationBehaviorPolymorphicArgumentRequest"
          nullable: true
      required:
      - name
      title: EdgeApplicationBehaviorFieldRequest
      type: object
    EdgeApplicationBehaviorNameField:
      description: |-
        * `deny` - deny
        * `run_function` - run_function
        * `no_content` - no_content
        * `deliver` - deliver
        * `finish_request_phase` - finish_request_phase
        * `redirect_to_301` - redirect_to_301
        * `redirect_to_302` - redirect_to_302
        * `forward_cookies` - forward_cookies
        * `optimize_images` - optimize_images
        * `set_origin` - set_origin
        * `set_edge_connector` - set_edge_connector
        * `set_cache_policy` - set_cache_policy
        * `bypass_cache_phase` - bypass_cache_phase
        * `enable_gzip` - enable_gzip
        * `redirect_http_to_https` - redirect_http_to_https
        * `set_cookie` - set_cookie
        * `rewrite_request` - rewrite_request
        * `add_request_header` - add_request_header
        * `filter_request_header` - filter_request_header
        * `add_response_header` - add_response_header
        * `filter_response_header` - filter_response_header
        * `capture_match_groups` - capture_match_groups
        * `add_request_cookie` - add_request_cookie
        * `filter_response_cookie` - filter_response_cookie
        * `filter_request_cookie` - filter_request_cookie
      title: EdgeApplicationBehaviorNameField
      type: string
    EdgeApplicationBehaviorPolymorphicArgument:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      - $ref: "#/components/schemas/CaptureMatchGroupsArgument"
      title: EdgeApplicationBehaviorPolymorphicArgument
    EdgeApplicationBehaviorPolymorphicArgumentRequest:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      - $ref: "#/components/schemas/CaptureMatchGroupsArgumentRequest"
      title: EdgeApplicationBehaviorPolymorphicArgumentRequest
    EdgeApplicationCriterionField:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Phase | Operators | Argument |
        | -------- | ----------- | ----- | --------- | ---------|
        | ${arg_&lt;name&gt;} | Use this variable to match a query param. Replace &lt;name&gt; with the specific query param you want to match, replacing any '-' with '_'. Examples: ${arg_search}, ${arg_next}. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${args} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${cookie_&lt;name&gt;} | Use this variable to match cookies sent by the browser Cookie headers.Replace &lt;name&gt; with the specific cookie name you want to match, replacing any '-' with '_'. Examples: cookie_session_id, cookie_user_pref. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${device_group} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${host} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${domain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${http_&lt;header_name&gt;} | Use this variable to match HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_user} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_uri} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${scheme} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${sent_http_&lt;header_name&gt;} | Use this variable to match HTTP headers sent to origin server. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_addr} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_cookie_&lt;name&gt;} | Use this variable to match cookies sent by the origin server in Set-Cookie headers.Replace &lt;name&gt; with the specific cookie you want to match, replacing any '-' with '_'. Examples: ${upstream_cookie_mycookie}, ${upstream_cookie_user_info}. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_http_&lt;header_name&gt;} | Use this variable to match origin HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. If many origins are consulted while the request is processed, only headers from the last origin are stored. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${uri} | The normalized (urldecoded) URI of the request. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_escaped_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_fingerprint} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_i_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn_parsed} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_serial} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_end} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_remain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_start} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_verify} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${tcpinfo_rtt} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_body} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeApplicationCriterionPolymorphicArgument"
          nullable: true
        variable:
          description: |-
            * `${arg_<name>}` - ${arg_<name>}
            * `${args}` - ${args}
            * `${cookie_<name>}` - ${cookie_<name>}
            * `${device_group}` - ${device_group}
            * `${geoip_city_continent_code}` - ${geoip_city_continent_code}
            * `${geoip_city_country_code}` - ${geoip_city_country_code}
            * `${geoip_city_country_name}` - ${geoip_city_country_name}
            * `${geoip_city}` - ${geoip_city}
            * `${geoip_continent_code}` - ${geoip_continent_code}
            * `${geoip_country_code}` - ${geoip_country_code}
            * `${geoip_country_name}` - ${geoip_country_name}
            * `${geoip_region_name}` - ${geoip_region_name}
            * `${geoip_region}` - ${geoip_region}
            * `${host}` - ${host}
            * `${domain}` - ${domain}
            * `${http_<header_name>}` - ${http_<header_name>}
            * `${remote_addr}` - ${remote_addr}
            * `${remote_user}` - ${remote_user}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${request}` - ${request}
            * `${scheme}` - ${scheme}
            * `${sent_http_<header_name>}` - ${sent_http_<header_name>}
            * `${status}` - ${status}
            * `${upstream_addr}` - ${upstream_addr}
            * `${upstream_cookie_<name>}` - ${upstream_cookie_<name>}
            * `${upstream_http_<header_name>}` - ${upstream_http_<header_name>}
            * `${upstream_status}` - ${upstream_status}
            * `${uri}` - ${uri}
            * `${server_addr}` - ${server_addr}
            * `${server_port}` - ${server_port}
            * `${ssl_client_cert}` - ${ssl_client_cert}
            * `${ssl_client_escaped_cert}` - ${ssl_client_escaped_cert}
            * `${ssl_client_fingerprint}` - ${ssl_client_fingerprint}
            * `${ssl_client_i_dn}` - ${ssl_client_i_dn}
            * `${ssl_client_s_dn_parsed}` - ${ssl_client_s_dn_parsed}
            * `${ssl_client_s_dn}` - ${ssl_client_s_dn}
            * `${ssl_client_serial}` - ${ssl_client_serial}
            * `${ssl_client_v_end}` - ${ssl_client_v_end}
            * `${ssl_client_v_remain}` - ${ssl_client_v_remain}
            * `${ssl_client_v_start}` - ${ssl_client_v_start}
            * `${ssl_client_verify}` - ${ssl_client_verify}
            * `${tcpinfo_rtt}` - ${tcpinfo_rtt}
            * `${remote_port}` - ${remote_port}
            * `${request_body}` - ${request_body}
          title: EdgeApplicationCriterionFieldVariableEnum
          type: string
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
      required:
      - conditional
      - operator
      - variable
      title: EdgeApplicationCriterionField
      type: object
    EdgeApplicationCriterionFieldRequest:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Phase | Operators | Argument |
        | -------- | ----------- | ----- | --------- | ---------|
        | ${arg_&lt;name&gt;} | Use this variable to match a query param. Replace &lt;name&gt; with the specific query param you want to match, replacing any '-' with '_'. Examples: ${arg_search}, ${arg_next}. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${args} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${cookie_&lt;name&gt;} | Use this variable to match cookies sent by the browser Cookie headers.Replace &lt;name&gt; with the specific cookie name you want to match, replacing any '-' with '_'. Examples: cookie_session_id, cookie_user_pref. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${device_group} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${host} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${domain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${http_&lt;header_name&gt;} | Use this variable to match HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_user} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_uri} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${scheme} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${sent_http_&lt;header_name&gt;} | Use this variable to match HTTP headers sent to origin server. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_addr} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_cookie_&lt;name&gt;} | Use this variable to match cookies sent by the origin server in Set-Cookie headers.Replace &lt;name&gt; with the specific cookie you want to match, replacing any '-' with '_'. Examples: ${upstream_cookie_mycookie}, ${upstream_cookie_user_info}. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_http_&lt;header_name&gt;} | Use this variable to match origin HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. If many origins are consulted while the request is processed, only headers from the last origin are stored. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${uri} | The normalized (urldecoded) URI of the request. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_escaped_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_fingerprint} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_i_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn_parsed} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_serial} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_end} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_remain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_start} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_verify} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${tcpinfo_rtt} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_body} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeApplicationCriterionPolymorphicArgumentRequest"
          nullable: true
        variable:
          description: |-
            * `${arg_<name>}` - ${arg_<name>}
            * `${args}` - ${args}
            * `${cookie_<name>}` - ${cookie_<name>}
            * `${device_group}` - ${device_group}
            * `${geoip_city_continent_code}` - ${geoip_city_continent_code}
            * `${geoip_city_country_code}` - ${geoip_city_country_code}
            * `${geoip_city_country_name}` - ${geoip_city_country_name}
            * `${geoip_city}` - ${geoip_city}
            * `${geoip_continent_code}` - ${geoip_continent_code}
            * `${geoip_country_code}` - ${geoip_country_code}
            * `${geoip_country_name}` - ${geoip_country_name}
            * `${geoip_region_name}` - ${geoip_region_name}
            * `${geoip_region}` - ${geoip_region}
            * `${host}` - ${host}
            * `${domain}` - ${domain}
            * `${http_<header_name>}` - ${http_<header_name>}
            * `${remote_addr}` - ${remote_addr}
            * `${remote_user}` - ${remote_user}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${request}` - ${request}
            * `${scheme}` - ${scheme}
            * `${sent_http_<header_name>}` - ${sent_http_<header_name>}
            * `${status}` - ${status}
            * `${upstream_addr}` - ${upstream_addr}
            * `${upstream_cookie_<name>}` - ${upstream_cookie_<name>}
            * `${upstream_http_<header_name>}` - ${upstream_http_<header_name>}
            * `${upstream_status}` - ${upstream_status}
            * `${uri}` - ${uri}
            * `${server_addr}` - ${server_addr}
            * `${server_port}` - ${server_port}
            * `${ssl_client_cert}` - ${ssl_client_cert}
            * `${ssl_client_escaped_cert}` - ${ssl_client_escaped_cert}
            * `${ssl_client_fingerprint}` - ${ssl_client_fingerprint}
            * `${ssl_client_i_dn}` - ${ssl_client_i_dn}
            * `${ssl_client_s_dn_parsed}` - ${ssl_client_s_dn_parsed}
            * `${ssl_client_s_dn}` - ${ssl_client_s_dn}
            * `${ssl_client_serial}` - ${ssl_client_serial}
            * `${ssl_client_v_end}` - ${ssl_client_v_end}
            * `${ssl_client_v_remain}` - ${ssl_client_v_remain}
            * `${ssl_client_v_start}` - ${ssl_client_v_start}
            * `${ssl_client_verify}` - ${ssl_client_verify}
            * `${tcpinfo_rtt}` - ${tcpinfo_rtt}
            * `${remote_port}` - ${remote_port}
            * `${request_body}` - ${request_body}
          title: EdgeApplicationCriterionFieldVariableEnum
          type: string
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
      required:
      - conditional
      - operator
      - variable
      title: EdgeApplicationCriterionFieldRequest
      type: object
    EdgeApplicationCriterionFieldVariableEnum:
      description: |-
        * `${arg_<name>}` - ${arg_<name>}
        * `${args}` - ${args}
        * `${cookie_<name>}` - ${cookie_<name>}
        * `${device_group}` - ${device_group}
        * `${geoip_city_continent_code}` - ${geoip_city_continent_code}
        * `${geoip_city_country_code}` - ${geoip_city_country_code}
        * `${geoip_city_country_name}` - ${geoip_city_country_name}
        * `${geoip_city}` - ${geoip_city}
        * `${geoip_continent_code}` - ${geoip_continent_code}
        * `${geoip_country_code}` - ${geoip_country_code}
        * `${geoip_country_name}` - ${geoip_country_name}
        * `${geoip_region_name}` - ${geoip_region_name}
        * `${geoip_region}` - ${geoip_region}
        * `${host}` - ${host}
        * `${domain}` - ${domain}
        * `${http_<header_name>}` - ${http_<header_name>}
        * `${remote_addr}` - ${remote_addr}
        * `${remote_user}` - ${remote_user}
        * `${request_method}` - ${request_method}
        * `${request_uri}` - ${request_uri}
        * `${request}` - ${request}
        * `${scheme}` - ${scheme}
        * `${sent_http_<header_name>}` - ${sent_http_<header_name>}
        * `${status}` - ${status}
        * `${upstream_addr}` - ${upstream_addr}
        * `${upstream_cookie_<name>}` - ${upstream_cookie_<name>}
        * `${upstream_http_<header_name>}` - ${upstream_http_<header_name>}
        * `${upstream_status}` - ${upstream_status}
        * `${uri}` - ${uri}
        * `${server_addr}` - ${server_addr}
        * `${server_port}` - ${server_port}
        * `${ssl_client_cert}` - ${ssl_client_cert}
        * `${ssl_client_escaped_cert}` - ${ssl_client_escaped_cert}
        * `${ssl_client_fingerprint}` - ${ssl_client_fingerprint}
        * `${ssl_client_i_dn}` - ${ssl_client_i_dn}
        * `${ssl_client_s_dn_parsed}` - ${ssl_client_s_dn_parsed}
        * `${ssl_client_s_dn}` - ${ssl_client_s_dn}
        * `${ssl_client_serial}` - ${ssl_client_serial}
        * `${ssl_client_v_end}` - ${ssl_client_v_end}
        * `${ssl_client_v_remain}` - ${ssl_client_v_remain}
        * `${ssl_client_v_start}` - ${ssl_client_v_start}
        * `${ssl_client_verify}` - ${ssl_client_verify}
        * `${tcpinfo_rtt}` - ${tcpinfo_rtt}
        * `${remote_port}` - ${remote_port}
        * `${request_body}` - ${request_body}
      title: EdgeApplicationCriterionFieldVariableEnum
      type: string
    EdgeApplicationCriterionPolymorphicArgument:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      title: EdgeApplicationCriterionPolymorphicArgument
    EdgeApplicationCriterionPolymorphicArgumentRequest:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      title: EdgeApplicationCriterionPolymorphicArgumentRequest
    EdgeApplicationDeviceGroups:
      additionalProperties: false
      example:
        name: name
        id: 0
        user_agent: user_agent
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        user_agent:
          description: Enter a valid regular expression pattern to identify user agents.
          maxLength: 512
          minLength: 1
          pattern: .*
          type: string
      required:
      - id
      - name
      - user_agent
      title: EdgeApplicationDeviceGroups
      type: object
    EdgeApplicationDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        user_agent:
          description: Enter a valid regular expression pattern to identify user agents.
          maxLength: 512
          minLength: 1
          pattern: .*
          type: string
      required:
      - name
      - user_agent
      title: EdgeApplicationDeviceGroupsRequest
      type: object
    EdgeApplicationFunctionInstance:
      additionalProperties: false
      description: Serializer for Edge Application Function Instances
      example:
        args:
          arg_01: value_01
        edge_function: 5559347081229897728
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        args:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance_args"
        edge_function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
      required:
      - edge_function
      - id
      - last_editor
      - last_modified
      - name
      title: EdgeApplicationFunctionInstance
      type: object
    EdgeApplicationFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Edge Application Function Instances
      example:
        args:
          arg_01: value_01
        edge_function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        args:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance_args"
        edge_function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      required:
      - edge_function
      - name
      title: EdgeApplicationFunctionInstanceRequest
      type: object
    EdgeApplicationModules:
      additionalProperties: false
      example:
        edge_cache:
          enabled: true
        application_accelerator:
          enabled: true
        tiered_cache:
          enabled: true
        image_processor:
          enabled: true
        edge_functions:
          enabled: true
      properties:
        edge_cache:
          $ref: "#/components/schemas/CacheModule"
        edge_functions:
          $ref: "#/components/schemas/EdgeFunctionModule"
        application_accelerator:
          $ref: "#/components/schemas/ApplicationAcceleratorModule"
        image_processor:
          $ref: "#/components/schemas/ImageProcessorModule"
        tiered_cache:
          $ref: "#/components/schemas/TieredCacheModule"
      required:
      - application_accelerator
      - edge_cache
      - edge_functions
      - image_processor
      - tiered_cache
      title: EdgeApplicationModules
      type: object
    EdgeApplicationModulesRequest:
      additionalProperties: false
      example:
        edge_cache:
          enabled: true
        application_accelerator:
          enabled: true
        tiered_cache:
          enabled: true
        image_processor:
          enabled: true
        edge_functions:
          enabled: true
      properties:
        edge_cache:
          $ref: "#/components/schemas/CacheModuleRequest"
        edge_functions:
          $ref: "#/components/schemas/EdgeFunctionModuleRequest"
        application_accelerator:
          $ref: "#/components/schemas/ApplicationAcceleratorModuleRequest"
        image_processor:
          $ref: "#/components/schemas/ImageProcessorModuleRequest"
        tiered_cache:
          $ref: "#/components/schemas/TieredCacheModuleRequest"
      required:
      - application_accelerator
      - edge_cache
      - edge_functions
      - image_processor
      - tiered_cache
      title: EdgeApplicationModulesRequest
      type: object
    EdgeApplicationRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          edge_cache:
            enabled: true
          application_accelerator:
            enabled: true
          tiered_cache:
            enabled: true
          image_processor:
            enabled: true
          edge_functions:
            enabled: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeApplicationModulesRequest"
        active:
          type: boolean
        debug:
          type: boolean
      required:
      - name
      title: EdgeApplicationRequest
      type: object
    EdgeApplicationRuleEngine:
      additionalProperties: false
      example:
        phase: phase
        behaviors:
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        last_editor: last_editor
        name: name
        active: true
        description: description
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        order: 119
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        phase:
          description: |-
            * `default` - default
            * `request` - request
            * `response` - response
          title: PhaseEnum
          type: string
        active:
          type: boolean
        behaviors:
          items:
            $ref: "#/components/schemas/EdgeApplicationBehaviorField"
          maxItems: 10
          minItems: 1
          type: array
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionField"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          pattern: .*
          type: string
        order:
          format: int64
          maximum: 199
          minimum: 0
          readOnly: true
          type: integer
        last_editor:
          maxLength: 255
          nullable: true
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - behaviors
      - criteria
      - id
      - last_editor
      - last_modified
      - name
      - order
      - phase
      title: EdgeApplicationRuleEngine
      type: object
    EdgeApplicationRuleEngineOrderRequest:
      additionalProperties: false
      example:
        order:
        - 738633633822310400
        - 738633633822310400
      properties:
        order:
          items:
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          type: array
      required:
      - order
      title: EdgeApplicationRuleEngineOrderRequest
      type: object
    EdgeApplicationRuleEngineRequest:
      additionalProperties: false
      example:
        phase: phase
        behaviors:
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        phase:
          description: |-
            * `default` - default
            * `request` - request
            * `response` - response
          title: PhaseEnum
          type: string
        active:
          type: boolean
        behaviors:
          items:
            $ref: "#/components/schemas/EdgeApplicationBehaviorFieldRequest"
          maxItems: 10
          minItems: 1
          type: array
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          pattern: .*
          type: string
      required:
      - behaviors
      - criteria
      - name
      - phase
      title: EdgeApplicationRuleEngineRequest
      type: object
    EdgeCacheModule:
      additionalProperties: false
      example:
        max_age: 4622587
        caching_for_post_enabled: true
        caching_for_options_enabled: true
        stale_cache_enabled: true
        behavior: behavior
        tiered_cache_region: tiered_cache_region
        tiered_cache_enabled: true
      properties:
        behavior:
          description: |-
            * `honor` - Honor Origin Cache Settings
            * `override` - Override Cache Settings
          title: EdgeCacheModuleBehaviorEnum
          type: string
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        caching_for_post_enabled:
          type: boolean
        caching_for_options_enabled:
          type: boolean
        stale_cache_enabled:
          type: boolean
        tiered_cache_enabled:
          type: boolean
        tiered_cache_region:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
      required:
      - behavior
      - caching_for_options_enabled
      - caching_for_post_enabled
      - max_age
      - stale_cache_enabled
      - tiered_cache_enabled
      title: EdgeCacheModule
      type: object
    EdgeCacheModuleBehaviorEnum:
      description: |-
        * `honor` - Honor Origin Cache Settings
        * `override` - Override Cache Settings
      title: EdgeCacheModuleBehaviorEnum
      type: string
    EdgeCacheModuleRequest:
      additionalProperties: false
      example:
        max_age: 19008185
        caching_for_post_enabled: true
        caching_for_options_enabled: true
        stale_cache_enabled: true
        behavior: behavior
        tiered_cache_region: tiered_cache_region
        tiered_cache_enabled: true
      properties:
        behavior:
          description: |-
            * `honor` - Honor Origin Cache Settings
            * `override` - Override Cache Settings
          title: EdgeCacheModuleBehaviorEnum
          type: string
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        caching_for_post_enabled:
          type: boolean
        caching_for_options_enabled:
          type: boolean
        stale_cache_enabled:
          type: boolean
        tiered_cache_enabled:
          type: boolean
        tiered_cache_region:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
      required:
      - behavior
      - caching_for_options_enabled
      - caching_for_post_enabled
      - max_age
      - stale_cache_enabled
      - tiered_cache_enabled
      title: EdgeCacheModuleRequest
      type: object
    EdgeConnectorHTTP:
      additionalProperties: false
      example:
        product_version: product_version
        addresses:
        - tls_port: 9607
          max_fails: 3
          address: address
          plain_port: 39501
          max_conns: 563
          weight: 59
          active: true
          server_role: ""
          fail_timeout: 42
        - tls_port: 9607
          max_fails: 3
          address: address
          plain_port: 39501
          max_conns: 563
          weight: 59
          active: true
          server_role: ""
          fail_timeout: 42
        read_write_timeout: 109
        load_balance_method: ""
        max_retries: 2
        last_editor: last_editor
        active: true
        type: type
        type_properties:
          path: path
          versions:
          - null
          - null
          real_port_header: real_port_header
          host: host
          following_redirect: true
          real_ip_header: real_ip_header
        modules:
          load_balancer_enabled: true
          origin_shield_enabled: true
        connection_preference:
        - connection_preference
        - connection_preference
        name: name
        tls: ""
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        connection_timeout: 279
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModules"
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnector"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorHTTPTypeProperties"
      required:
      - id
      - last_editor
      - last_modified
      - modules
      - name
      - product_version
      - type
      - type_properties
      title: EdgeConnectorHTTP
      type: object
    EdgeConnectorHTTPRequest:
      additionalProperties: false
      example:
        addresses:
        - tls_port: 39501
          max_fails: 6
          address: address
          plain_port: 5249
          max_conns: 596
          weight: 14
          active: true
          server_role: ""
          fail_timeout: 14
        - tls_port: 39501
          max_fails: 6
          address: address
          plain_port: 5249
          max_conns: 596
          weight: 14
          active: true
          server_role: ""
          fail_timeout: 14
        read_write_timeout: 279
        load_balance_method: ""
        max_retries: 3
        connection_preference:
        - connection_preference
        - connection_preference
        name: name
        active: true
        tls: ""
        type: type
        connection_timeout: 212
        type_properties:
          path: path
          versions:
          - null
          - null
          real_port_header: real_port_header
          host: host
          following_redirect: true
          real_ip_header: real_ip_header
        modules:
          load_balancer_enabled: true
          origin_shield_enabled: true
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/AddressRequest"
          type: array
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorHTTPTypePropertiesRequest"
      required:
      - modules
      - name
      - type
      - type_properties
      title: EdgeConnectorHTTPRequest
      type: object
    EdgeConnectorHTTPTypeProperties:
      additionalProperties: false
      example:
        path: path
        versions:
        - null
        - null
        real_port_header: real_port_header
        host: host
        following_redirect: true
        real_ip_header: real_ip_header
      properties:
        versions:
          items:
            $ref: "#/components/schemas/VersionsEnum"
          type: array
        host:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        following_redirect:
          type: boolean
        real_ip_header:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        real_port_header:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - host
      - path
      - real_ip_header
      - real_port_header
      title: EdgeConnectorHTTPTypeProperties
      type: object
    EdgeConnectorHTTPTypePropertiesRequest:
      additionalProperties: false
      example:
        path: path
        versions:
        - null
        - null
        real_port_header: real_port_header
        host: host
        following_redirect: true
        real_ip_header: real_ip_header
      properties:
        versions:
          items:
            $ref: "#/components/schemas/VersionsEnum"
          type: array
        host:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        following_redirect:
          type: boolean
        real_ip_header:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        real_port_header:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - host
      - path
      - real_ip_header
      - real_port_header
      title: EdgeConnectorHTTPTypePropertiesRequest
      type: object
    EdgeConnectorLiveIngest:
      additionalProperties: false
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModules"
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnector"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorLiveIngestTypeProperties"
      required:
      - id
      - last_editor
      - last_modified
      - modules
      - name
      - product_version
      - type
      - type_properties
      title: EdgeConnectorLiveIngest
      type: object
    EdgeConnectorLiveIngestRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorLiveIngestTypePropertiesRequest"
      required:
      - modules
      - name
      - type
      - type_properties
      title: EdgeConnectorLiveIngestRequest
      type: object
    EdgeConnectorLiveIngestTypeProperties:
      additionalProperties: false
      properties:
        endpoint:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - endpoint
      title: EdgeConnectorLiveIngestTypeProperties
      type: object
    EdgeConnectorLiveIngestTypePropertiesRequest:
      additionalProperties: false
      properties:
        endpoint:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - endpoint
      title: EdgeConnectorLiveIngestTypePropertiesRequest
      type: object
    EdgeConnectorModules:
      additionalProperties: false
      example:
        load_balancer_enabled: true
        origin_shield_enabled: true
      properties:
        load_balancer_enabled:
          type: boolean
        origin_shield_enabled:
          type: boolean
      required:
      - load_balancer_enabled
      - origin_shield_enabled
      title: EdgeConnectorModules
      type: object
    EdgeConnectorModulesRequest:
      additionalProperties: false
      example:
        load_balancer_enabled: true
        origin_shield_enabled: true
      properties:
        load_balancer_enabled:
          type: boolean
        origin_shield_enabled:
          type: boolean
      required:
      - load_balancer_enabled
      - origin_shield_enabled
      title: EdgeConnectorModulesRequest
      type: object
    EdgeConnectorPolymorphic:
      additionalProperties: true
      discriminator:
        mapping:
          http: "#/components/schemas/EdgeConnectorHTTP"
          s3: "#/components/schemas/EdgeConnectorS3"
          edge_storage: "#/components/schemas/EdgeConnectorStorage"
          live_ingest: "#/components/schemas/EdgeConnectorLiveIngest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/EdgeConnectorHTTP"
      - $ref: "#/components/schemas/EdgeConnectorS3"
      - $ref: "#/components/schemas/EdgeConnectorStorage"
      - $ref: "#/components/schemas/EdgeConnectorLiveIngest"
      title: EdgeConnectorPolymorphic
    EdgeConnectorPolymorphicRequest:
      additionalProperties: true
      discriminator:
        mapping:
          http: "#/components/schemas/EdgeConnectorHTTPRequest"
          s3: "#/components/schemas/EdgeConnectorS3Request"
          edge_storage: "#/components/schemas/EdgeConnectorStorageRequest"
          live_ingest: "#/components/schemas/EdgeConnectorLiveIngestRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/EdgeConnectorHTTPRequest"
      - $ref: "#/components/schemas/EdgeConnectorS3Request"
      - $ref: "#/components/schemas/EdgeConnectorStorageRequest"
      - $ref: "#/components/schemas/EdgeConnectorLiveIngestRequest"
      title: EdgeConnectorPolymorphicRequest
    EdgeConnectorS3:
      additionalProperties: false
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModules"
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnector"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorS3TypeProperties"
      required:
      - id
      - last_editor
      - last_modified
      - modules
      - name
      - product_version
      - type
      - type_properties
      title: EdgeConnectorS3
      type: object
    EdgeConnectorS3Request:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/AddressRequest"
          type: array
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorS3TypePropertiesRequest"
      required:
      - modules
      - name
      - type
      - type_properties
      title: EdgeConnectorS3Request
      type: object
    EdgeConnectorS3TypeProperties:
      additionalProperties: false
      properties:
        host:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        bucket:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        region:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        access_key:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        secret_key:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - access_key
      - bucket
      - host
      - path
      - region
      - secret_key
      title: EdgeConnectorS3TypeProperties
      type: object
    EdgeConnectorS3TypePropertiesRequest:
      additionalProperties: false
      properties:
        host:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        bucket:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        region:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        access_key:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        secret_key:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - access_key
      - bucket
      - host
      - path
      - region
      - secret_key
      title: EdgeConnectorS3TypePropertiesRequest
      type: object
    EdgeConnectorStorage:
      additionalProperties: false
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModules"
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnector"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorStorageTypeProperties"
      required:
      - id
      - last_editor
      - last_modified
      - modules
      - name
      - product_version
      - type
      - type_properties
      title: EdgeConnectorStorage
      type: object
    EdgeConnectorStorageRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorStorageTypePropertiesRequest"
      required:
      - modules
      - name
      - type
      - type_properties
      title: EdgeConnectorStorageRequest
      type: object
    EdgeConnectorStorageTypeProperties:
      additionalProperties: false
      properties:
        bucket:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        prefix:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - bucket
      title: EdgeConnectorStorageTypeProperties
      type: object
    EdgeConnectorStorageTypePropertiesRequest:
      additionalProperties: false
      properties:
        bucket:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        prefix:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
      required:
      - bucket
      title: EdgeConnectorStorageTypePropertiesRequest
      type: object
    EdgeFirewall:
      additionalProperties: false
      example:
        product_version: product_version
        debug: true
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        modules:
          ddos_protection: ""
          network_protection: ""
          edge_functions: ""
          waf: ""
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeFirewallModules"
        debug:
          type: boolean
        active:
          type: boolean
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: EdgeFirewall
      type: object
    EdgeFirewallBehaviorField:
      additionalProperties: false
      example:
        argument: ""
        name: name
      properties:
        name:
          description: |-
            * `deny` - deny
            * `run_function` - run_function
            * `drop` - drop
            * `set_rate_limit` - set_rate_limit
            * `tag_event` - tag_event
            * `set_custom_response` - set_custom_response
            * `set_waf_ruleset` - set_waf_ruleset
          title: EdgeFirewallBehaviorNameField
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallBehaviorPolymorphicArgument"
          nullable: true
      required:
      - name
      title: EdgeFirewallBehaviorField
      type: object
    EdgeFirewallBehaviorFieldRequest:
      additionalProperties: false
      example:
        argument: ""
        name: name
      properties:
        name:
          description: |-
            * `deny` - deny
            * `run_function` - run_function
            * `drop` - drop
            * `set_rate_limit` - set_rate_limit
            * `tag_event` - tag_event
            * `set_custom_response` - set_custom_response
            * `set_waf_ruleset` - set_waf_ruleset
          title: EdgeFirewallBehaviorNameField
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallBehaviorPolymorphicArgumentRequest"
          nullable: true
      required:
      - name
      title: EdgeFirewallBehaviorFieldRequest
      type: object
    EdgeFirewallBehaviorNameField:
      description: |-
        * `deny` - deny
        * `run_function` - run_function
        * `drop` - drop
        * `set_rate_limit` - set_rate_limit
        * `tag_event` - tag_event
        * `set_custom_response` - set_custom_response
        * `set_waf_ruleset` - set_waf_ruleset
      title: EdgeFirewallBehaviorNameField
      type: string
    EdgeFirewallBehaviorPolymorphicArgument:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      - $ref: "#/components/schemas/SetRateLimitArgument"
      - $ref: "#/components/schemas/SetCustomResponseArgument"
      - $ref: "#/components/schemas/SetWafRuleSetArgument"
      title: EdgeFirewallBehaviorPolymorphicArgument
    EdgeFirewallBehaviorPolymorphicArgumentRequest:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      - $ref: "#/components/schemas/SetRateLimitArgumentRequest"
      - $ref: "#/components/schemas/SetCustomResponseArgumentRequest"
      - $ref: "#/components/schemas/SetWafRuleSetArgumentRequest"
      title: EdgeFirewallBehaviorPolymorphicArgumentRequest
    EdgeFirewallCriterionField:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Operators | Argument |
        | -------- | ----------- | --------- | ---------|
        | ${header_accept} |  | matches, does_not_match | string |
        | ${header_accept_encoding} |  | matches, does_not_match | string |
        | ${header_accept_language} |  | matches, does_not_match | string |
        | ${header_cookie} |  | matches, does_not_match | string |
        | ${header_origin} |  | matches, does_not_match | string |
        | ${header_referer} |  | matches, does_not_match | string |
        | ${header_user_agent} |  | matches, does_not_match | string |
        | ${host} |  | is_equal, is_not_equal, matches, does_not_match | string |
        | ${network} |  | is_in_list, is_not_in_list | string |
        | ${request_args} |  | is_equal, is_not_equal, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | is_equal, is_not_equal | string |
        | ${request_uri} |  | starts_with, does_not_starts_with, is_equal, is_not_equal, matches, does_not_match | string |
        | ${scheme} |  | is_equal, is_not_equal | string |
        | ${ssl_verification_status} |  | is_equal, is_not_equal | SUCCESS, CERTIFICATE_VERIFICATION_ERROR, MISSING_CLIENT_CERTIFICATE |
        | ${client_certificate_validation} |  | is_equal, is_not_equal | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallCriterionPolymorphicArgument"
          nullable: true
        variable:
          description: |-
            * `${header_accept}` - ${header_accept}
            * `${header_accept_encoding}` - ${header_accept_encoding}
            * `${header_accept_language}` - ${header_accept_language}
            * `${header_cookie}` - ${header_cookie}
            * `${header_origin}` - ${header_origin}
            * `${header_referer}` - ${header_referer}
            * `${header_user_agent}` - ${header_user_agent}
            * `${host}` - ${host}
            * `${network}` - ${network}
            * `${request_args}` - ${request_args}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${scheme}` - ${scheme}
            * `${ssl_verification_status}` - ${ssl_verification_status}
            * `${client_certificate_validation}` - ${client_certificate_validation}
          title: EdgeFirewallCriterionFieldVariableEnum
          type: string
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
      required:
      - conditional
      - operator
      - variable
      title: EdgeFirewallCriterionField
      type: object
    EdgeFirewallCriterionFieldRequest:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Operators | Argument |
        | -------- | ----------- | --------- | ---------|
        | ${header_accept} |  | matches, does_not_match | string |
        | ${header_accept_encoding} |  | matches, does_not_match | string |
        | ${header_accept_language} |  | matches, does_not_match | string |
        | ${header_cookie} |  | matches, does_not_match | string |
        | ${header_origin} |  | matches, does_not_match | string |
        | ${header_referer} |  | matches, does_not_match | string |
        | ${header_user_agent} |  | matches, does_not_match | string |
        | ${host} |  | is_equal, is_not_equal, matches, does_not_match | string |
        | ${network} |  | is_in_list, is_not_in_list | string |
        | ${request_args} |  | is_equal, is_not_equal, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | is_equal, is_not_equal | string |
        | ${request_uri} |  | starts_with, does_not_starts_with, is_equal, is_not_equal, matches, does_not_match | string |
        | ${scheme} |  | is_equal, is_not_equal | string |
        | ${ssl_verification_status} |  | is_equal, is_not_equal | SUCCESS, CERTIFICATE_VERIFICATION_ERROR, MISSING_CLIENT_CERTIFICATE |
        | ${client_certificate_validation} |  | is_equal, is_not_equal | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallCriterionPolymorphicArgumentRequest"
          nullable: true
        variable:
          description: |-
            * `${header_accept}` - ${header_accept}
            * `${header_accept_encoding}` - ${header_accept_encoding}
            * `${header_accept_language}` - ${header_accept_language}
            * `${header_cookie}` - ${header_cookie}
            * `${header_origin}` - ${header_origin}
            * `${header_referer}` - ${header_referer}
            * `${header_user_agent}` - ${header_user_agent}
            * `${host}` - ${host}
            * `${network}` - ${network}
            * `${request_args}` - ${request_args}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${scheme}` - ${scheme}
            * `${ssl_verification_status}` - ${ssl_verification_status}
            * `${client_certificate_validation}` - ${client_certificate_validation}
          title: EdgeFirewallCriterionFieldVariableEnum
          type: string
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
      required:
      - conditional
      - operator
      - variable
      title: EdgeFirewallCriterionFieldRequest
      type: object
    EdgeFirewallCriterionFieldVariableEnum:
      description: |-
        * `${header_accept}` - ${header_accept}
        * `${header_accept_encoding}` - ${header_accept_encoding}
        * `${header_accept_language}` - ${header_accept_language}
        * `${header_cookie}` - ${header_cookie}
        * `${header_origin}` - ${header_origin}
        * `${header_referer}` - ${header_referer}
        * `${header_user_agent}` - ${header_user_agent}
        * `${host}` - ${host}
        * `${network}` - ${network}
        * `${request_args}` - ${request_args}
        * `${request_method}` - ${request_method}
        * `${request_uri}` - ${request_uri}
        * `${scheme}` - ${scheme}
        * `${ssl_verification_status}` - ${ssl_verification_status}
        * `${client_certificate_validation}` - ${client_certificate_validation}
      title: EdgeFirewallCriterionFieldVariableEnum
      type: string
    EdgeFirewallCriterionPolymorphicArgument:
      additionalProperties: false
      nullable: true
      oneOf:
      - description: "These values are only valid when using ${ssl_verification_status}\
          \ variable."
        type: string
      - format: int64
        type: integer
      - type: string
      title: EdgeFirewallCriterionPolymorphicArgument
    EdgeFirewallCriterionPolymorphicArgumentRequest:
      additionalProperties: false
      nullable: true
      oneOf:
      - description: "These values are only valid when using ${ssl_verification_status}\
          \ variable."
        type: string
      - format: int64
        type: integer
      - type: string
      title: EdgeFirewallCriterionPolymorphicArgumentRequest
    EdgeFirewallFunctionInstance:
      additionalProperties: false
      description: Serializer for Edge Firewall Function Instances
      example:
        args:
          arg_01: value_01
        edge_function: 5559347081229897728
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        args:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance_args"
        edge_function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
      required:
      - edge_function
      - id
      - last_editor
      - last_modified
      - name
      title: EdgeFirewallFunctionInstance
      type: object
    EdgeFirewallFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Edge Firewall Function Instances
      example:
        args:
          arg_01: value_01
        edge_function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        args:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance_args"
        edge_function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      required:
      - edge_function
      - name
      title: EdgeFirewallFunctionInstanceRequest
      type: object
    EdgeFirewallModule:
      additionalProperties: false
      description: |-
        Serializer for individual modules in EdgeFirewall.

        Handles serialization and deserialization of module settings with an enabled flag.
      properties:
        enabled:
          type: boolean
      title: EdgeFirewallModule
      type: object
    EdgeFirewallModuleRequest:
      additionalProperties: false
      description: |-
        Serializer for individual modules in EdgeFirewall.

        Handles serialization and deserialization of module settings with an enabled flag.
      properties:
        enabled:
          type: boolean
      title: EdgeFirewallModuleRequest
      type: object
    EdgeFirewallModules:
      additionalProperties: false
      example:
        ddos_protection: ""
        network_protection: ""
        edge_functions: ""
        waf: ""
      properties:
        ddos_protection:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModule"
        edge_functions:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModule"
        network_protection:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModule"
        waf:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModule"
      title: EdgeFirewallModules
      type: object
    EdgeFirewallModulesRequest:
      additionalProperties: false
      example:
        ddos_protection: ""
        network_protection: ""
        edge_functions: ""
        waf: ""
      properties:
        ddos_protection:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModuleRequest"
        edge_functions:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModuleRequest"
        network_protection:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModuleRequest"
        waf:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallModuleRequest"
      title: EdgeFirewallModulesRequest
      type: object
    EdgeFirewallRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          ddos_protection: ""
          network_protection: ""
          edge_functions: ""
          waf: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeFirewallModulesRequest"
        debug:
          type: boolean
        active:
          type: boolean
      required:
      - name
      title: EdgeFirewallRequest
      type: object
    EdgeFirewallRuleEngine:
      additionalProperties: false
      example:
        behaviors:
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        last_editor: last_editor
        name: name
        active: true
        description: description
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        order: 119
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 255
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        active:
          type: boolean
        behaviors:
          items:
            $ref: "#/components/schemas/EdgeFirewallBehaviorField"
          maxItems: 10
          minItems: 1
          type: array
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeFirewallCriterionField"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          pattern: .*
          type: string
        order:
          format: int64
          maximum: 199
          minimum: 0
          readOnly: true
          type: integer
      required:
      - behaviors
      - criteria
      - id
      - last_editor
      - last_modified
      - name
      - order
      title: EdgeFirewallRuleEngine
      type: object
    EdgeFirewallRuleEngineOrderRequest:
      additionalProperties: false
      example:
        order:
        - 738633633822310400
        - 738633633822310400
      properties:
        order:
          items:
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          type: array
      required:
      - order
      title: EdgeFirewallRuleEngineOrderRequest
      type: object
    EdgeFirewallRuleEngineRequest:
      additionalProperties: false
      example:
        behaviors:
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        behaviors:
          items:
            $ref: "#/components/schemas/EdgeFirewallBehaviorFieldRequest"
          maxItems: 10
          minItems: 1
          type: array
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeFirewallCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          pattern: .*
          type: string
      required:
      - behaviors
      - criteria
      - name
      title: EdgeFirewallRuleEngineRequest
      type: object
    EdgeFunctionModule:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: EdgeFunctionModule
      type: object
    EdgeFunctionModuleRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: EdgeFunctionModuleRequest
      type: object
    EdgeFunctions:
      additionalProperties: false
      example:
        product_version: product_version
        code: code
        last_editor: last_editor
        active: true
        language: ""
        version: version
        default_args:
          arg_01: value_01
        initiator_type: ""
        vendor: vendor
        name: name
        id: 0
        reference_count: 6
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        language:
          allOf:
          - $ref: "#/components/schemas/EdgeFunctionsLanguageEnum"
        code:
          maxLength: 20971520
          minLength: 1
          pattern: .*
          type: string
        default_args:
          $ref: "#/components/schemas/EdgeFunctions_default_args"
        initiator_type:
          allOf:
          - $ref: "#/components/schemas/InitiatorTypeEnum"
        active:
          type: boolean
        reference_count:
          format: int64
          readOnly: true
          type: integer
        version:
          description: "Installed version, which may not be the latest if the vendor\
            \ has released updates since installation."
          readOnly: true
          type: string
        vendor:
          readOnly: true
          type: string
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 50
          pattern: .*
          readOnly: true
          type: string
      required:
      - code
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - reference_count
      - vendor
      - version
      title: EdgeFunctions
      type: object
    EdgeFunctionsLanguageEnum:
      description: '* `javascript` - JavaScript'
      title: EdgeFunctionsLanguageEnum
      type: string
    EdgeFunctionsRequest:
      additionalProperties: false
      example:
        code: code
        name: name
        active: true
        language: ""
        default_args:
          arg_01: value_01
        initiator_type: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        language:
          allOf:
          - $ref: "#/components/schemas/EdgeFunctionsLanguageEnum"
        code:
          maxLength: 20971520
          minLength: 1
          pattern: .*
          type: string
        default_args:
          $ref: "#/components/schemas/EdgeFunctions_default_args"
        initiator_type:
          allOf:
          - $ref: "#/components/schemas/InitiatorTypeEnum"
        active:
          type: boolean
      required:
      - code
      - name
      title: EdgeFunctionsRequest
      type: object
    EngineVersionEnum:
      description: '* `2021-Q3` - 2021-Q3'
      title: EngineVersionEnum
      type: string
    GetEdgeFunctions:
      additionalProperties: false
      example:
        product_version: product_version
        vendor: vendor
        last_editor: last_editor
        name: name
        active: true
        language: ""
        id: 0
        reference_count: 6
        version: version
        last_modified: 2000-01-23T04:56:07.000+00:00
        default_args:
          arg_01: value_01
        initiator_type: ""
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        language:
          allOf:
          - $ref: "#/components/schemas/GetEdgeFunctionsLanguageEnum"
        default_args:
          $ref: "#/components/schemas/EdgeFunctions_default_args"
        initiator_type:
          allOf:
          - $ref: "#/components/schemas/InitiatorTypeEnum"
        active:
          type: boolean
        reference_count:
          format: int64
          readOnly: true
          type: integer
        version:
          description: "Installed version, which may not be the latest if the vendor\
            \ has released updates since installation."
          readOnly: true
          type: string
        vendor:
          readOnly: true
          type: string
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 50
          pattern: .*
          readOnly: true
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - reference_count
      - vendor
      - version
      title: GetEdgeFunctions
      type: object
    GetEdgeFunctionsLanguageEnum:
      description: |-
        * `javascript` - JavaScript
        * `lua` - Lua
      title: GetEdgeFunctionsLanguageEnum
      type: string
    HttpProtocol:
      additionalProperties: false
      properties:
        versions:
          items:
            maxLength: 30
            type: string
          maxItems: 3
          type: array
        http_ports:
          items:
            format: int64
            type: integer
          maxItems: 4
          minItems: 1
          type: array
        https_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          minItems: 1
          nullable: true
          type: array
        quic_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          nullable: true
          type: array
      title: HttpProtocol
      type: object
    HttpProtocolRequest:
      additionalProperties: false
      properties:
        versions:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 3
          type: array
        http_ports:
          items:
            format: int64
            type: integer
          maxItems: 4
          minItems: 1
          type: array
        https_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          minItems: 1
          nullable: true
          type: array
        quic_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          nullable: true
          type: array
      title: HttpProtocolRequest
      type: object
    ImageProcessorModule:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: ImageProcessorModule
      type: object
    ImageProcessorModuleRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: ImageProcessorModuleRequest
      type: object
    InfrastructureEnum:
      description: |-
        * `1` - Production Infrastructure (All Edge Locations)
        * `2` - Staging Infrastructure
      format: int64
      title: InfrastructureEnum
      type: integer
    InitiatorTypeEnum:
      description: |-
        * `edge_application` - Edge Application
        * `edge_firewall` - Edge Firewall
      title: InitiatorTypeEnum
      type: string
    JSONAPIErrorObject:
      additionalProperties: false
      description: Serializer for a single JSON:API error object.
      example:
        code: code
        meta:
          key: ""
        detail: detail
        source: ""
        title: title
        status: status
      properties:
        status:
          description: The HTTP status code applicable to this problem
          maxLength: 3
          minLength: 3
          pattern: "^\\d{3}$"
          type: string
        code:
          description: An application-specific error code
          maxLength: 5
          minLength: 5
          pattern: "^\\d{5}$"
          type: string
        title:
          description: "A short, human-readable summary of the problem"
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        source:
          allOf:
          - $ref: "#/components/schemas/JSONAPIErrorSource"
          description: References to the primary source of the error
        meta:
          additionalProperties: {}
          description: Non-standard meta-information about the error
          type: object
      title: JSONAPIErrorObject
      type: object
    JSONAPIErrorResponse:
      additionalProperties: false
      description: Serializer for a JSON:API error response.
      example:
        errors:
        - code: code
          meta:
            key: ""
          detail: detail
          source: ""
          title: title
          status: status
        - code: code
          meta:
            key: ""
          detail: detail
          source: ""
          title: title
          status: status
      properties:
        errors:
          description: Array of error objects
          items:
            $ref: "#/components/schemas/JSONAPIErrorObject"
          type: array
      required:
      - errors
      title: JSONAPIErrorResponse
      type: object
    JSONAPIErrorSource:
      additionalProperties: false
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          description: JSON Pointer to the value in the request document that caused
            the error
          maxLength: 4096
          minLength: 1
          pattern: "^(/[^/]+)+$"
          type: string
        parameter:
          description: URI query parameter that caused the error
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        header:
          description: Request header name that caused the error
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
      title: JSONAPIErrorSource
      type: object
    LayerEnum:
      description: |-
        * `edge_cache` - Edge Cache
        * `tiered_cache` - Tiered Cache
      title: LayerEnum
      type: string
    LimitByEnum:
      description: |-
        * `client_ip` - client_ip
        * `global` - global
      title: LimitByEnum
      type: string
    LoadBalanceMethodEnum:
      description: |-
        * `off` - Off
        * `ip_hash` - IP Hash
        * `least_connections` - Least Connections
        * `round_robin` - Round Robin
      title: LoadBalanceMethodEnum
      type: string
    MTLS:
      additionalProperties: false
      example:
        certificate: 1
        crl:
        - 1
        - 1
        - 1
        - 1
        - 1
        verification: null
      properties:
        verification:
          $ref: "#/components/schemas/MTLS_verification"
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        crl:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 100
          nullable: true
          type: array
      title: MTLS
      type: object
    MTLSRequest:
      additionalProperties: false
      example:
        certificate: 1
        crl:
        - 1
        - 1
        - 1
        - 1
        - 1
        verification: null
      properties:
        verification:
          $ref: "#/components/schemas/MTLS_verification"
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        crl:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 100
          nullable: true
          type: array
      title: MTLSRequest
      type: object
    MinimumVersionEnum:
      description: |-
        * `` - None
        * `tls_1_0` - TLS 1.0
        * `tls_1_1` - TLS 1.1
        * `tls_1_2` - TLS 1.2
        * `tls_1_3` - TLS 1.3
      title: MinimumVersionEnum
      type: string
    ModeEnum:
      description: |-
        * `learning` - learning
        * `blocking` - blocking
      title: ModeEnum
      type: string
    NetworkList:
      additionalProperties: false
      example:
        last_editor: last_editor
        name: name
        active: true
        id: 0
        type: type
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        active:
          type: boolean
      required:
      - id
      - last_editor
      - last_modified
      - name
      - type
      title: NetworkList
      type: object
    NetworkListDetail:
      additionalProperties: false
      description: |-
        A Network List item can be one of the following formats:


        1. IP Addresses (IPv4/IPv6):

            - Simple IPv4: 192.168.0.1

            - IPv4 with CIDR: 192.168.0.1/24

            - Simple IPv6: 2001:db8:3333:4444:5555:6666:7777:8888

            - IPv6 with CIDR: 2001:db8::/32

            - IP with expiration date: 192.168.0.1 --LT2025-05-29T12:25:23Z

                (The expiration date format is --LT followed by ISO8601 date in UTC timezone)


        2. Country Codes:

            - Two-character uppercase alphanumeric country code (ISO 3166-1 alpha-2)

            - Examples: BR, US, DE, JP


        3. Autonomous System Numbers (ASN):

            - Number composed of digits only

            - Examples: 1234, 5678, 13335
      example:
        last_editor: last_editor
        name: name
        active: true
        id: 0
        type: type
        items:
        - items
        - items
        - items
        - items
        - items
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        items:
          items:
            maxLength: 250
            minLength: 0
            pattern: .*
            type: string
          maxItems: 20000
          minItems: 1
          type: array
        last_editor:
          maxLength: 250
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        active:
          type: boolean
      required:
      - id
      - items
      - last_editor
      - last_modified
      - name
      - type
      title: NetworkListDetail
      type: object
    NetworkListDetailRequest:
      additionalProperties: false
      description: |-
        A Network List item can be one of the following formats:


        1. IP Addresses (IPv4/IPv6):

            - Simple IPv4: 192.168.0.1

            - IPv4 with CIDR: 192.168.0.1/24

            - Simple IPv6: 2001:db8:3333:4444:5555:6666:7777:8888

            - IPv6 with CIDR: 2001:db8::/32

            - IP with expiration date: 192.168.0.1 --LT2025-05-29T12:25:23Z

                (The expiration date format is --LT followed by ISO8601 date in UTC timezone)


        2. Country Codes:

            - Two-character uppercase alphanumeric country code (ISO 3166-1 alpha-2)

            - Examples: BR, US, DE, JP


        3. Autonomous System Numbers (ASN):

            - Number composed of digits only

            - Examples: 1234, 5678, 13335
      example:
        name: name
        active: true
        type: type
        items:
        - items
        - items
        - items
        - items
        - items
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        items:
          items:
            maxLength: 250
            minLength: 1
            pattern: .*
            type: string
          maxItems: 20000
          minItems: 1
          type: array
        active:
          type: boolean
      required:
      - items
      - name
      - type
      title: NetworkListDetailRequest
      type: object
    NullEnum:
      additionalProperties: false
      title: NullEnum
      type: object
    Operator565Enum:
      description: |-
        * `does_not_exist` - does_not_exist
        * `does_not_match` - does_not_match
        * `does_not_start_with` - does_not_start_with
        * `exists` - exists
        * `is_equal` - is_equal
        * `is_in_list` - is_in_list
        * `is_not_equal` - is_not_equal
        * `is_not_in_list` - is_not_in_list
        * `matches` - matches
        * `starts_with` - starts_with
      title: Operator565Enum
      type: string
    Page:
      additionalProperties: false
      example:
        code: code
        custom_status_code: 397
        ttl: 4622587
        uri: uri
      properties:
        code:
          description: |-
            * `default` - default
            * `400` - Bad Request
            * `401` - Unauthorized
            * `403` - Forbidden
            * `404` - Not Found
            * `405` - Method Not Allowed
            * `406` - Not Acceptable
            * `408` - Request Timeout
            * `409` - Conflict
            * `410` - Gone
            * `411` - Length Required
            * `414` - URI Too Long
            * `415` - Unsupported Media Type
            * `416` - Range Not Satisfiable
            * `426` - Upgrade Required
            * `429` - Too Many Requests
            * `431` - Request Header Fields Too Large
            * `500` - Internal Server Error
            * `501` - Not Implemented
            * `502` - Bad Gateway
            * `503` - Service Unavailable
            * `504` - Gateway Timeout
            * `505` - HTTP Version Not Supported
          title: CodeEnum
          type: string
        ttl:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        uri:
          maxLength: 250
          minLength: 1
          nullable: true
          pattern: "^\\/[\\/a-zA-Z0-9\\-_\\.\\~@:]*$"
          type: string
        custom_status_code:
          format: int64
          maximum: 599
          minimum: 100
          nullable: true
          type: integer
      required:
      - code
      title: Page
      type: object
    PageRequest:
      additionalProperties: false
      example:
        code: code
        custom_status_code: 173
        ttl: 19008185
        uri: uri
      properties:
        code:
          description: |-
            * `default` - default
            * `400` - Bad Request
            * `401` - Unauthorized
            * `403` - Forbidden
            * `404` - Not Found
            * `405` - Method Not Allowed
            * `406` - Not Acceptable
            * `408` - Request Timeout
            * `409` - Conflict
            * `410` - Gone
            * `411` - Length Required
            * `414` - URI Too Long
            * `415` - Unsupported Media Type
            * `416` - Range Not Satisfiable
            * `426` - Upgrade Required
            * `429` - Too Many Requests
            * `431` - Request Header Fields Too Large
            * `500` - Internal Server Error
            * `501` - Not Implemented
            * `502` - Bad Gateway
            * `503` - Service Unavailable
            * `504` - Gateway Timeout
            * `505` - HTTP Version Not Supported
          title: CodeEnum
          type: string
        ttl:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        uri:
          maxLength: 250
          minLength: 1
          nullable: true
          pattern: "^\\/[\\/a-zA-Z0-9\\-_\\.\\~@:]*$"
          type: string
        custom_status_code:
          format: int64
          maximum: 599
          minimum: 100
          nullable: true
          type: integer
      required:
      - code
      title: PageRequest
      type: object
    PaginatedCustomPagesList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          connector_custom_pages:
            pages:
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            edge_connector: 6
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          connector_custom_pages:
            pages:
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            edge_connector: 6
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/CustomPages"
          type: array
      title: PaginatedCustomPagesList
      type: object
    PaginatedEdgeApplicationDeviceGroupsList:
      additionalProperties: false
      example:
        count: 123
        results:
        - name: name
          id: 0
          user_agent: user_agent
        - name: name
          id: 0
          user_agent: user_agent
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeApplicationDeviceGroups"
          type: array
      title: PaginatedEdgeApplicationDeviceGroupsList
      type: object
    PaginatedEdgeApplicationFunctionInstanceList:
      additionalProperties: false
      example:
        count: 123
        results:
        - args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeApplicationFunctionInstance"
          type: array
      title: PaginatedEdgeApplicationFunctionInstanceList
      type: object
    PaginatedEdgeApplicationList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache:
              enabled: true
            application_accelerator:
              enabled: true
            tiered_cache:
              enabled: true
            image_processor:
              enabled: true
            edge_functions:
              enabled: true
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache:
              enabled: true
            application_accelerator:
              enabled: true
            tiered_cache:
              enabled: true
            image_processor:
              enabled: true
            edge_functions:
              enabled: true
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeApplication"
          type: array
      title: PaginatedEdgeApplicationList
      type: object
    PaginatedEdgeApplicationRuleEngineList:
      additionalProperties: false
      example:
        count: 123
        results:
        - phase: phase
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        - phase: phase
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeApplicationRuleEngine"
          type: array
      title: PaginatedEdgeApplicationRuleEngineList
      type: object
    PaginatedEdgeConnectorPolymorphicList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          addresses:
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          read_write_timeout: 109
          load_balance_method: ""
          max_retries: 2
          last_editor: last_editor
          active: true
          type: type
          type_properties:
            path: path
            versions:
            - null
            - null
            real_port_header: real_port_header
            host: host
            following_redirect: true
            real_ip_header: real_ip_header
          modules:
            load_balancer_enabled: true
            origin_shield_enabled: true
          connection_preference:
          - connection_preference
          - connection_preference
          name: name
          tls: ""
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          connection_timeout: 279
        - product_version: product_version
          addresses:
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          read_write_timeout: 109
          load_balance_method: ""
          max_retries: 2
          last_editor: last_editor
          active: true
          type: type
          type_properties:
            path: path
            versions:
            - null
            - null
            real_port_header: real_port_header
            host: host
            following_redirect: true
            real_ip_header: real_ip_header
          modules:
            load_balancer_enabled: true
            origin_shield_enabled: true
          connection_preference:
          - connection_preference
          - connection_preference
          name: name
          tls: ""
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          connection_timeout: 279
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeConnectorPolymorphic"
          type: array
      title: PaginatedEdgeConnectorPolymorphicList
      type: object
    PaginatedEdgeFirewallFunctionInstanceList:
      additionalProperties: false
      example:
        count: 123
        results:
        - args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeFirewallFunctionInstance"
          type: array
      title: PaginatedEdgeFirewallFunctionInstanceList
      type: object
    PaginatedEdgeFirewallList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            network_protection: ""
            edge_functions: ""
            waf: ""
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            network_protection: ""
            edge_functions: ""
            waf: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeFirewall"
          type: array
      title: PaginatedEdgeFirewallList
      type: object
    PaginatedEdgeFirewallRuleEngineList:
      additionalProperties: false
      example:
        count: 123
        results:
        - behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        - behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeFirewallRuleEngine"
          type: array
      title: PaginatedEdgeFirewallRuleEngineList
      type: object
    PaginatedGetEdgeFunctionsList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          vendor: vendor
          last_editor: last_editor
          name: name
          active: true
          language: ""
          id: 0
          reference_count: 6
          version: version
          last_modified: 2000-01-23T04:56:07.000+00:00
          default_args:
            arg_01: value_01
          initiator_type: ""
        - product_version: product_version
          vendor: vendor
          last_editor: last_editor
          name: name
          active: true
          language: ""
          id: 0
          reference_count: 6
          version: version
          last_modified: 2000-01-23T04:56:07.000+00:00
          default_args:
            arg_01: value_01
          initiator_type: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/GetEdgeFunctions"
          type: array
      title: PaginatedGetEdgeFunctionsList
      type: object
    PaginatedNetworkListList:
      additionalProperties: false
      example:
        count: 123
        results:
        - last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
        - last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/NetworkList"
          type: array
      title: PaginatedNetworkListList
      type: object
    PaginatedResponseListCacheSettingList:
      additionalProperties: false
      example:
        count: 123
        results:
        - name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              caching_for_post_enabled: true
              caching_for_options_enabled: true
              stale_cache_enabled: true
              behavior: behavior
              tiered_cache_region: tiered_cache_region
              tiered_cache_enabled: true
            browser_cache:
              max_age: 19008185
              behavior: behavior
            slice_controls:
              slice_tiered_caching_enabled: true
              slice_edge_caching_enabled: true
              slice_configuration_range: 577
              slice_configuration_enabled: true
            application_controls:
              cache_by_cookies: cache_by_cookies
              query_string_fields:
              - query_string_fields
              - query_string_fields
              adaptive_delivery_action: adaptive_delivery_action
              device_group:
              - 5
              - 5
              query_string_sort_enabled: true
              cookie_names:
              - cookie_names
              - cookie_names
              cache_by_query_string: cache_by_query_string
        - name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              caching_for_post_enabled: true
              caching_for_options_enabled: true
              stale_cache_enabled: true
              behavior: behavior
              tiered_cache_region: tiered_cache_region
              tiered_cache_enabled: true
            browser_cache:
              max_age: 19008185
              behavior: behavior
            slice_controls:
              slice_tiered_caching_enabled: true
              slice_edge_caching_enabled: true
              slice_configuration_range: 577
              slice_configuration_enabled: true
            application_controls:
              cache_by_cookies: cache_by_cookies
              query_string_fields:
              - query_string_fields
              - query_string_fields
              adaptive_delivery_action: adaptive_delivery_action
              device_group:
              - 5
              - 5
              query_string_sort_enabled: true
              cookie_names:
              - cookie_names
              - cookie_names
              cache_by_query_string: cache_by_query_string
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ResponseListCacheSetting"
          type: array
      title: PaginatedResponseListCacheSettingList
      type: object
    PaginatedWAFList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/WAF"
          type: array
      title: PaginatedWAFList
      type: object
    PaginatedWAFRuleList:
      additionalProperties: false
      example:
        count: 123
        results:
        - rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
        - rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/WAFRule"
          type: array
      title: PaginatedWAFRuleList
      type: object
    PaginatedWorkloadDeploymentList:
      additionalProperties: false
      example:
        count: 123
        results:
        - current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            strategy_type: strategy_type
            attributes:
              custom_page: 1
              edge_firewall: 1
              edge_application: 5559347081229897728
          last_modified: 2000-01-23T04:56:07.000+00:00
        - current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            strategy_type: strategy_type
            attributes:
              custom_page: 1
              edge_firewall: 1
              edge_application: 5559347081229897728
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/WorkloadDeployment"
          type: array
      title: PaginatedWorkloadDeploymentList
      type: object
    PaginatedWorkloadList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
        - product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/Workload"
          type: array
      title: PaginatedWorkloadList
      type: object
    PatchedCacheSettingRequest:
      additionalProperties: false
      example:
        name: name
        modules:
          edge_cache:
            max_age: 19008185
            caching_for_post_enabled: true
            caching_for_options_enabled: true
            stale_cache_enabled: true
            behavior: behavior
            tiered_cache_region: tiered_cache_region
            tiered_cache_enabled: true
          browser_cache:
            max_age: 2525491
            behavior: behavior
          slice_controls:
            slice_tiered_caching_enabled: true
            slice_edge_caching_enabled: true
            slice_configuration_range: 610
            slice_configuration_enabled: true
          application_controls:
            cache_by_cookies: cache_by_cookies
            query_string_fields:
            - query_string_fields
            - query_string_fields
            adaptive_delivery_action: adaptive_delivery_action
            device_group:
            - 1
            - 1
            query_string_sort_enabled: true
            cookie_names:
            - cookie_names
            - cookie_names
            cache_by_query_string: cache_by_query_string
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
          type: string
        modules:
          $ref: "#/components/schemas/CacheSettingModulesRequest"
      title: PatchedCacheSettingRequest
      type: object
    PatchedCustomPagesRequest:
      additionalProperties: false
      example:
        connector_custom_pages:
          pages:
          - code: code
            custom_status_code: 173
            ttl: 19008185
            uri: uri
          - code: code
            custom_status_code: 173
            ttl: 19008185
            uri: uri
          edge_connector: 0
        name: name
        active: true
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        active:
          title: Is Active
          type: boolean
        connector_custom_pages:
          $ref: "#/components/schemas/ConnectorCustomPagesRequest"
      title: PatchedCustomPagesRequest
      type: object
    PatchedEdgeApplicationDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        user_agent:
          description: Enter a valid regular expression pattern to identify user agents.
          maxLength: 512
          minLength: 1
          pattern: .*
          type: string
      title: PatchedEdgeApplicationDeviceGroupsRequest
      type: object
    PatchedEdgeApplicationFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Edge Application Function Instances
      example:
        args:
          arg_01: value_01
        edge_function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        args:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance_args"
        edge_function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      title: PatchedEdgeApplicationFunctionInstanceRequest
      type: object
    PatchedEdgeApplicationRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          edge_cache:
            enabled: true
          application_accelerator:
            enabled: true
          tiered_cache:
            enabled: true
          image_processor:
            enabled: true
          edge_functions:
            enabled: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeApplicationModulesRequest"
        active:
          type: boolean
        debug:
          type: boolean
      title: PatchedEdgeApplicationRequest
      type: object
    PatchedEdgeApplicationRuleEngineRequest:
      additionalProperties: false
      example:
        phase: phase
        behaviors:
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        phase:
          description: |-
            * `default` - default
            * `request` - request
            * `response` - response
          title: PhaseEnum
          type: string
        active:
          type: boolean
        behaviors:
          items:
            $ref: "#/components/schemas/EdgeApplicationBehaviorFieldRequest"
          maxItems: 10
          minItems: 1
          type: array
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          pattern: .*
          type: string
      title: PatchedEdgeApplicationRuleEngineRequest
      type: object
    PatchedEdgeConnectorHTTPRequest:
      additionalProperties: false
      example:
        addresses:
        - tls_port: 39501
          max_fails: 6
          address: address
          plain_port: 5249
          max_conns: 596
          weight: 14
          active: true
          server_role: ""
          fail_timeout: 14
        - tls_port: 39501
          max_fails: 6
          address: address
          plain_port: 5249
          max_conns: 596
          weight: 14
          active: true
          server_role: ""
          fail_timeout: 14
        read_write_timeout: 181
        load_balance_method: ""
        max_retries: 1
        connection_preference:
        - connection_preference
        - connection_preference
        name: name
        active: true
        tls: ""
        type: type
        connection_timeout: 24
        type_properties:
          path: path
          versions:
          - null
          - null
          real_port_header: real_port_header
          host: host
          following_redirect: true
          real_ip_header: real_ip_header
        modules:
          load_balancer_enabled: true
          origin_shield_enabled: true
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/AddressRequest"
          type: array
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorHTTPTypePropertiesRequest"
      title: PatchedEdgeConnectorHTTPRequest
      type: object
    PatchedEdgeConnectorLiveIngestRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorLiveIngestTypePropertiesRequest"
      title: PatchedEdgeConnectorLiveIngestRequest
      type: object
    PatchedEdgeConnectorPolymorphicRequest:
      additionalProperties: true
      discriminator:
        mapping:
          http: "#/components/schemas/PatchedEdgeConnectorHTTPRequest"
          s3: "#/components/schemas/PatchedEdgeConnectorS3Request"
          edge_storage: "#/components/schemas/PatchedEdgeConnectorStorageRequest"
          live_ingest: "#/components/schemas/PatchedEdgeConnectorLiveIngestRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/PatchedEdgeConnectorHTTPRequest"
      - $ref: "#/components/schemas/PatchedEdgeConnectorS3Request"
      - $ref: "#/components/schemas/PatchedEdgeConnectorStorageRequest"
      - $ref: "#/components/schemas/PatchedEdgeConnectorLiveIngestRequest"
      title: PatchedEdgeConnectorPolymorphicRequest
    PatchedEdgeConnectorS3Request:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/AddressRequest"
          type: array
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorS3TypePropertiesRequest"
      title: PatchedEdgeConnectorS3Request
      type: object
    PatchedEdgeConnectorStorageRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeConnectorModulesRequest"
        active:
          type: boolean
        type:
          description: |-
            * `http` - HTTP
            * `s3` - S3
            * `edge_storage` - Edge Storage
            * `live_ingest` - Live Ingest
          title: Type5cdEnum
          type: string
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSEdgeConnectorRequest"
        load_balance_method:
          allOf:
          - $ref: "#/components/schemas/LoadBalanceMethodEnum"
        connection_preference:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 2
          type: array
        connection_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        max_retries:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        type_properties:
          $ref: "#/components/schemas/EdgeConnectorStorageTypePropertiesRequest"
      title: PatchedEdgeConnectorStorageRequest
      type: object
    PatchedEdgeFirewallFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Edge Firewall Function Instances
      example:
        args:
          arg_01: value_01
        edge_function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        args:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance_args"
        edge_function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      title: PatchedEdgeFirewallFunctionInstanceRequest
      type: object
    PatchedEdgeFirewallRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          ddos_protection: ""
          network_protection: ""
          edge_functions: ""
          waf: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        modules:
          $ref: "#/components/schemas/EdgeFirewallModulesRequest"
        debug:
          type: boolean
        active:
          type: boolean
      title: PatchedEdgeFirewallRequest
      type: object
    PatchedEdgeFirewallRuleEngineRequest:
      additionalProperties: false
      example:
        behaviors:
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        - argument: ""
          name: name
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        behaviors:
          items:
            $ref: "#/components/schemas/EdgeFirewallBehaviorFieldRequest"
          maxItems: 10
          minItems: 1
          type: array
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeFirewallCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          pattern: .*
          type: string
      title: PatchedEdgeFirewallRuleEngineRequest
      type: object
    PatchedEdgeFunctionsRequest:
      additionalProperties: false
      example:
        code: code
        name: name
        active: true
        language: ""
        default_args:
          arg_01: value_01
        initiator_type: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        language:
          allOf:
          - $ref: "#/components/schemas/EdgeFunctionsLanguageEnum"
        code:
          maxLength: 20971520
          minLength: 1
          pattern: .*
          type: string
        default_args:
          $ref: "#/components/schemas/EdgeFunctions_default_args"
        initiator_type:
          allOf:
          - $ref: "#/components/schemas/InitiatorTypeEnum"
        active:
          type: boolean
      title: PatchedEdgeFunctionsRequest
      type: object
    PatchedNetworkListDetailRequest:
      additionalProperties: false
      description: |-
        A Network List item can be one of the following formats:


        1. IP Addresses (IPv4/IPv6):

            - Simple IPv4: 192.168.0.1

            - IPv4 with CIDR: 192.168.0.1/24

            - Simple IPv6: 2001:db8:3333:4444:5555:6666:7777:8888

            - IPv6 with CIDR: 2001:db8::/32

            - IP with expiration date: 192.168.0.1 --LT2025-05-29T12:25:23Z

                (The expiration date format is --LT followed by ISO8601 date in UTC timezone)


        2. Country Codes:

            - Two-character uppercase alphanumeric country code (ISO 3166-1 alpha-2)

            - Examples: BR, US, DE, JP


        3. Autonomous System Numbers (ASN):

            - Number composed of digits only

            - Examples: 1234, 5678, 13335
      example:
        name: name
        active: true
        type: type
        items:
        - items
        - items
        - items
        - items
        - items
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        items:
          items:
            maxLength: 250
            minLength: 1
            pattern: .*
            type: string
          maxItems: 20000
          minItems: 1
          type: array
        active:
          type: boolean
      title: PatchedNetworkListDetailRequest
      type: object
    PatchedWAFRequest:
      additionalProperties: false
      example:
        product_version: product_version
        name: name
        engine_settings:
          attributes:
            rulesets:
            - null
            - null
            thresholds:
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
          engine_version: ""
          type: ""
        active: true
      properties:
        active:
          type: boolean
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          nullable: true
          pattern: \d+\.\d+
          type: string
        engine_settings:
          $ref: "#/components/schemas/WAFEngineSettingsFieldRequest"
      title: PatchedWAFRequest
      type: object
    PatchedWAFRuleRequest:
      additionalProperties: false
      example:
        rule_id: ""
        path: path
        name: name
        active: true
        conditions:
        - match: match
        - match: match
        operator: ""
      properties:
        rule_id:
          allOf:
          - $ref: "#/components/schemas/RuleIdEnum"
          description: |-
            0 - All Rules<br>
            1 - Validation of protocol compliance: weird request, unable to parse<br>
            2 - Request too big, stored on disk and not parsed<br>
            10 - Validation of protocol compliance: invalid HEX encoding (null bytes)<br>
            11 - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)<br>
            12 - Validation of protocol compliance: invalid formatted URL<br>
            13 - Validation of protocol compliance: invalid POST format<br>
            14 - Validation of protocol compliance: invalid POST boundary<br>
            15 - Validation of protocol compliance: invalid JSON<br>
            16 - Validation of protocol compliance: POST with no body<br>
            17 - Possible SQL Injection attack: validation with libinjection_sql<br>
            18 - Possible XSS attack: validation with libinjection_xss<br>
            1000 - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies<br>
            1001 - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies<br>
            1002 - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies<br>
            1003 - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies<br>
            1004 - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies<br>
            1005 - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies<br>
            1006 - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies<br>
            1007 - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies<br>
            1008 - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String<br>
            1009 - Possible SQL Injection attack: equal sign (=) found in Body or Query String<br>
            1010 - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies<br>
            1011 - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies<br>
            1013 - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies<br>
            1015 - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies<br>
            1016 - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies<br>
            1017 - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies<br>
            1100 - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies<br>
            1101 - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies<br>
            1102 - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies<br>
            1103 - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies<br>
            1104 - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies<br>
            1105 - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies<br>
            1106 - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies<br>
            1107 - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies<br>
            1108 - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies<br>
            1109 - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies<br>
            1110 - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies<br>
            1198 - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR<br>
            1199 - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies<br>
            1200 - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies<br>
            1202 - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies<br>
            1203 - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies<br>
            1204 - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies<br>
            1205 - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies<br>
            1206 - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies<br>
            1207 - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies<br>
            1208 - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies<br>
            1209 - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies<br>
            1210 - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies<br>
            1302 - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies<br>
            1303 - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies<br>
            1310 - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies<br>
            1311 - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies<br>
            1312 - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies<br>
            1314 - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies<br>
            1315 - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies<br>
            1400 - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies<br>
            1401 - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies<br>
            1402 - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies<br>
            1500 - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file<br>
            2001 - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering

            * `0` - All Rules
            * `1` - Validation of protocol compliance: weird request, unable to parse
            * `2` - Request too big, stored on disk and not parsed
            * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
            * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
            * `12` - Validation of protocol compliance: invalid formatted URL
            * `13` - Validation of protocol compliance: invalid POST format
            * `14` - Validation of protocol compliance: invalid POST boundary
            * `15` - Validation of protocol compliance: invalid JSON
            * `16` - Validation of protocol compliance: POST with no body
            * `17` - Possible SQL Injection attack: validation with libinjection_sql
            * `18` - Possible XSS attack: validation with libinjection_xss
            * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
            * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
            * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
            * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
            * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
            * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
            * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
            * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
            * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
            * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
            * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
            * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
            * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
            * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
            * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
            * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
            * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
            * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
            * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
            * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
            * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
            * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
            * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
            * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
            * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
            * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
            * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
            * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
            * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
            * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
            * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
            * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
            * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
            * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
            * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
            * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
            * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
            * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
            * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
            * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
            * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
            * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
            * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
            * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
            * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
            * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
            * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
            * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
            * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
            * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
            * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 0
          nullable: true
          pattern: "^[^|]*$"
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/WAFExceptionPolymorphicConditionRequest"
          minItems: 1
          type: array
        operator:
          allOf:
          - $ref: "#/components/schemas/WAFRuleOperatorEnum"
        active:
          type: boolean
      title: PatchedWAFRuleRequest
      type: object
    PatchedWorkloadDeploymentRequest:
      additionalProperties: false
      example:
        current: true
        name: name
        active: true
        strategy:
          strategy_type: strategy_type
          attributes:
            custom_page: 1
            edge_firewall: 6
            edge_application: 738633633822310400
      properties:
        name:
          maxLength: 254
          minLength: 1
          pattern: .*
          type: string
        current:
          type: boolean
        active:
          type: boolean
        strategy:
          $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyAttrsRequest"
      title: PatchedWorkloadDeploymentRequest
      type: object
    PatchedWorkloadRequest:
      additionalProperties: false
      example:
        infrastructure: ""
        name: name
        active: true
        domains:
        - domains
        - domains
        workload_domain_allow_access: true
        tls: ""
        protocols: ""
        mtls:
          certificate: 1
          crl:
          - 1
          - 1
          - 1
          - 1
          - 1
          verification: null
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        infrastructure:
          allOf:
          - $ref: "#/components/schemas/InfrastructureEnum"
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSWorkloadRequest"
        protocols:
          allOf:
          - $ref: "#/components/schemas/ProtocolsRequest"
        mtls:
          $ref: "#/components/schemas/MTLSRequest"
        domains:
          items:
            minLength: 1
            type: string
          type: array
        workload_domain_allow_access:
          type: boolean
      title: PatchedWorkloadRequest
      type: object
    PhaseEnum:
      description: |-
        * `default` - default
        * `request` - request
        * `response` - response
      title: PhaseEnum
      type: string
    PolicyEnum:
      description: |-
        * `off` - off
        * `on` - on
        * `preserve` - preserve
      title: PolicyEnum
      type: string
    Protocols:
      additionalProperties: false
      properties:
        http:
          allOf:
          - $ref: "#/components/schemas/HttpProtocol"
      title: Protocols
      type: object
    ProtocolsRequest:
      additionalProperties: false
      properties:
        http:
          allOf:
          - $ref: "#/components/schemas/HttpProtocolRequest"
      title: ProtocolsRequest
      type: object
    PurgeInput:
      additionalProperties: false
      description: Serialize the incoming purge request.
      example:
        items:
        - items
        - items
        layer: ""
      properties:
        items:
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
        layer:
          allOf:
          - $ref: "#/components/schemas/LayerEnum"
      required:
      - items
      title: PurgeInput
      type: object
    PurgeInputRequest:
      additionalProperties: false
      description: Serialize the incoming purge request.
      example:
        items:
        - items
        - items
        layer: ""
      properties:
        items:
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
        layer:
          allOf:
          - $ref: "#/components/schemas/LayerEnum"
      required:
      - items
      title: PurgeInputRequest
      type: object
    ResponseAsyncCacheSetting:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              caching_for_post_enabled: true
              caching_for_options_enabled: true
              stale_cache_enabled: true
              behavior: behavior
              tiered_cache_region: tiered_cache_region
              tiered_cache_enabled: true
            browser_cache:
              max_age: 19008185
              behavior: behavior
            slice_controls:
              slice_tiered_caching_enabled: true
              slice_edge_caching_enabled: true
              slice_configuration_range: 577
              slice_configuration_enabled: true
            application_controls:
              cache_by_cookies: cache_by_cookies
              query_string_fields:
              - query_string_fields
              - query_string_fields
              adaptive_delivery_action: adaptive_delivery_action
              device_group:
              - 5
              - 5
              query_string_sort_enabled: true
              cookie_names:
              - cookie_names
              - cookie_names
              cache_by_query_string: cache_by_query_string
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/CacheSetting"
      required:
      - data
      title: ResponseAsyncCacheSetting
      type: object
    ResponseAsyncCustomPages:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          connector_custom_pages:
            pages:
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            edge_connector: 6
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/CustomPages"
      required:
      - data
      title: ResponseAsyncCustomPages
      type: object
    ResponseAsyncDeleteCacheSetting:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteCacheSetting
      type: object
    ResponseAsyncDeleteCustomPages:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteCustomPages
      type: object
    ResponseAsyncDeleteEdgeApplication:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeApplication
      type: object
    ResponseAsyncDeleteEdgeApplicationDeviceGroups:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeApplicationDeviceGroups
      type: object
    ResponseAsyncDeleteEdgeApplicationFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeApplicationFunctionInstance
      type: object
    ResponseAsyncDeleteEdgeApplicationRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeApplicationRuleEngine
      type: object
    ResponseAsyncDeleteEdgeConnectorPolymorphic:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeConnectorPolymorphic
      type: object
    ResponseAsyncDeleteEdgeFirewall:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeFirewall
      type: object
    ResponseAsyncDeleteEdgeFirewallFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeFirewallFunctionInstance
      type: object
    ResponseAsyncDeleteEdgeFirewallRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteEdgeFirewallRuleEngine
      type: object
    ResponseAsyncDeleteGetEdgeFunctions:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteGetEdgeFunctions
      type: object
    ResponseAsyncDeleteNetworkListDetail:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteNetworkListDetail
      type: object
    ResponseAsyncDeleteWAF:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteWAF
      type: object
    ResponseAsyncDeleteWAFRule:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteWAFRule
      type: object
    ResponseAsyncDeleteWorkload:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteWorkload
      type: object
    ResponseAsyncDeleteWorkloadDeployment:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteWorkloadDeployment
      type: object
    ResponseAsyncEdgeApplication:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache:
              enabled: true
            application_accelerator:
              enabled: true
            tiered_cache:
              enabled: true
            image_processor:
              enabled: true
            edge_functions:
              enabled: true
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplication"
      required:
      - data
      title: ResponseAsyncEdgeApplication
      type: object
    ResponseAsyncEdgeApplicationDeviceGroups:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          user_agent: user_agent
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplicationDeviceGroups"
      required:
      - data
      title: ResponseAsyncEdgeApplicationDeviceGroups
      type: object
    ResponseAsyncEdgeApplicationFunctionInstance:
      additionalProperties: false
      example:
        data:
          args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance"
      required:
      - data
      title: ResponseAsyncEdgeApplicationFunctionInstance
      type: object
    ResponseAsyncEdgeApplicationRuleEngine:
      additionalProperties: false
      example:
        data:
          phase: phase
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplicationRuleEngine"
      required:
      - data
      title: ResponseAsyncEdgeApplicationRuleEngine
      type: object
    ResponseAsyncEdgeConnectorPolymorphic:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          addresses:
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          read_write_timeout: 109
          load_balance_method: ""
          max_retries: 2
          last_editor: last_editor
          active: true
          type: type
          type_properties:
            path: path
            versions:
            - null
            - null
            real_port_header: real_port_header
            host: host
            following_redirect: true
            real_ip_header: real_ip_header
          modules:
            load_balancer_enabled: true
            origin_shield_enabled: true
          connection_preference:
          - connection_preference
          - connection_preference
          name: name
          tls: ""
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          connection_timeout: 279
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeConnectorPolymorphic"
      required:
      - data
      title: ResponseAsyncEdgeConnectorPolymorphic
      type: object
    ResponseAsyncEdgeFirewall:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            network_protection: ""
            edge_functions: ""
            waf: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFirewall"
      required:
      - data
      title: ResponseAsyncEdgeFirewall
      type: object
    ResponseAsyncEdgeFirewallFunctionInstance:
      additionalProperties: false
      example:
        data:
          args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFirewallFunctionInstance"
      required:
      - data
      title: ResponseAsyncEdgeFirewallFunctionInstance
      type: object
    ResponseAsyncEdgeFirewallRuleEngine:
      additionalProperties: false
      example:
        data:
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFirewallRuleEngine"
      required:
      - data
      title: ResponseAsyncEdgeFirewallRuleEngine
      type: object
    ResponseAsyncEdgeFunctions:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          language: ""
          version: version
          default_args:
            arg_01: value_01
          initiator_type: ""
          vendor: vendor
          name: name
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFunctions"
      required:
      - data
      title: ResponseAsyncEdgeFunctions
      type: object
    ResponseAsyncNetworkListDetail:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          items:
          - items
          - items
          - items
          - items
          - items
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/NetworkListDetail"
      required:
      - data
      title: ResponseAsyncNetworkListDetail
      type: object
    ResponseAsyncPurgeInput:
      additionalProperties: false
      example:
        data:
          items:
          - items
          - items
          layer: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/PurgeInput"
      required:
      - data
      title: ResponseAsyncPurgeInput
      type: object
    ResponseAsyncWAF:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/WAF"
      required:
      - data
      title: ResponseAsyncWAF
      type: object
    ResponseAsyncWAFRule:
      additionalProperties: false
      example:
        data:
          rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/WAFRule"
      required:
      - data
      title: ResponseAsyncWAFRule
      type: object
    ResponseAsyncWorkload:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/Workload"
      required:
      - data
      title: ResponseAsyncWorkload
      type: object
    ResponseAsyncWorkloadDeployment:
      additionalProperties: false
      example:
        data:
          current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            strategy_type: strategy_type
            attributes:
              custom_page: 1
              edge_firewall: 1
              edge_application: 5559347081229897728
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/WorkloadDeployment"
      required:
      - data
      title: ResponseAsyncWorkloadDeployment
      type: object
    ResponseBadRequestCacheSetting:
      additionalProperties: false
      example:
        name:
        - name
        - name
        id:
        - id
        - id
        detail: detail
        modules:
          edge_cache:
            max_age:
            - max_age
            - max_age
            caching_for_post_enabled:
            - caching_for_post_enabled
            - caching_for_post_enabled
            caching_for_options_enabled:
            - caching_for_options_enabled
            - caching_for_options_enabled
            stale_cache_enabled:
            - stale_cache_enabled
            - stale_cache_enabled
            behavior:
            - behavior
            - behavior
            tiered_cache_region:
            - tiered_cache_region
            - tiered_cache_region
            tiered_cache_enabled:
            - tiered_cache_enabled
            - tiered_cache_enabled
          browser_cache:
            max_age:
            - max_age
            - max_age
            behavior:
            - behavior
            - behavior
          slice_controls:
            slice_tiered_caching_enabled:
            - slice_tiered_caching_enabled
            - slice_tiered_caching_enabled
            slice_edge_caching_enabled:
            - slice_edge_caching_enabled
            - slice_edge_caching_enabled
            slice_configuration_range:
            - slice_configuration_range
            - slice_configuration_range
            slice_configuration_enabled:
            - slice_configuration_enabled
            - slice_configuration_enabled
          application_controls:
            cache_by_cookies:
            - cache_by_cookies
            - cache_by_cookies
            query_string_fields:
            - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
            - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
            adaptive_delivery_action:
            - adaptive_delivery_action
            - adaptive_delivery_action
            device_group:
            - device_group
            - device_group
            query_string_sort_enabled:
            - query_string_sort_enabled
            - query_string_sort_enabled
            cookie_names: null
            cache_by_query_string:
            - cache_by_query_string
            - cache_by_query_string
      properties:
        id:
          items:
            type: string
          type: array
        name:
          items:
            type: string
          type: array
        modules:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassModulesField"
        detail:
          maxLength: 4096
          minLength: 1
          pattern: .*
          type: string
      title: ResponseBadRequestCacheSetting
      type: object
    ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField:
      additionalProperties: false
      example:
        cache_by_cookies:
        - cache_by_cookies
        - cache_by_cookies
        query_string_fields:
        - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
        - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
        adaptive_delivery_action:
        - adaptive_delivery_action
        - adaptive_delivery_action
        device_group:
        - device_group
        - device_group
        query_string_sort_enabled:
        - query_string_sort_enabled
        - query_string_sort_enabled
        cookie_names: null
        cache_by_query_string:
        - cache_by_query_string
        - cache_by_query_string
      properties:
        cache_by_query_string:
          items:
            type: string
          type: array
        query_string_fields:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields"
        query_string_sort_enabled:
          items:
            type: string
          type: array
        cache_by_cookies:
          items:
            type: string
          type: array
        cookie_names:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields"
        adaptive_delivery_action:
          items:
            type: string
          type: array
        device_group:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField
      type: object
    ResponseBadRequestCacheSettingModulesSerializerBrowser_cacheField:
      additionalProperties: false
      example:
        max_age:
        - max_age
        - max_age
        behavior:
        - behavior
        - behavior
      properties:
        behavior:
          items:
            type: string
          type: array
        max_age:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingModulesSerializerBrowser_cacheField
      type: object
    ResponseBadRequestCacheSettingModulesSerializerEdge_cacheField:
      additionalProperties: false
      example:
        max_age:
        - max_age
        - max_age
        caching_for_post_enabled:
        - caching_for_post_enabled
        - caching_for_post_enabled
        caching_for_options_enabled:
        - caching_for_options_enabled
        - caching_for_options_enabled
        stale_cache_enabled:
        - stale_cache_enabled
        - stale_cache_enabled
        behavior:
        - behavior
        - behavior
        tiered_cache_region:
        - tiered_cache_region
        - tiered_cache_region
        tiered_cache_enabled:
        - tiered_cache_enabled
        - tiered_cache_enabled
      properties:
        behavior:
          items:
            type: string
          type: array
        max_age:
          items:
            type: string
          type: array
        caching_for_post_enabled:
          items:
            type: string
          type: array
        caching_for_options_enabled:
          items:
            type: string
          type: array
        stale_cache_enabled:
          items:
            type: string
          type: array
        tiered_cache_enabled:
          items:
            type: string
          type: array
        tiered_cache_region:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingModulesSerializerEdge_cacheField
      type: object
    ResponseBadRequestCacheSettingModulesSerializerSlice_controlsField:
      additionalProperties: false
      example:
        slice_tiered_caching_enabled:
        - slice_tiered_caching_enabled
        - slice_tiered_caching_enabled
        slice_edge_caching_enabled:
        - slice_edge_caching_enabled
        - slice_edge_caching_enabled
        slice_configuration_range:
        - slice_configuration_range
        - slice_configuration_range
        slice_configuration_enabled:
        - slice_configuration_enabled
        - slice_configuration_enabled
      properties:
        slice_configuration_enabled:
          items:
            type: string
          type: array
        slice_edge_caching_enabled:
          items:
            type: string
          type: array
        slice_tiered_caching_enabled:
          items:
            type: string
          type: array
        slice_configuration_range:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingModulesSerializerSlice_controlsField
      type: object
    ResponseBadRequestEdgeApplication:
      additionalProperties: false
      example:
        product_version:
        - product_version
        - product_version
        debug:
        - debug
        - debug
        last_editor:
        - last_editor
        - last_editor
        name:
        - name
        - name
        active:
        - active
        - active
        id:
        - id
        - id
        detail: detail
        last_modified:
        - last_modified
        - last_modified
        modules:
          edge_cache:
            max_age:
            - max_age
            - max_age
            caching_for_post_enabled:
            - caching_for_post_enabled
            - caching_for_post_enabled
            caching_for_options_enabled:
            - caching_for_options_enabled
            - caching_for_options_enabled
            stale_cache_enabled:
            - stale_cache_enabled
            - stale_cache_enabled
            behavior:
            - behavior
            - behavior
            tiered_cache_region:
            - tiered_cache_region
            - tiered_cache_region
            tiered_cache_enabled:
            - tiered_cache_enabled
            - tiered_cache_enabled
          browser_cache:
            max_age:
            - max_age
            - max_age
            behavior:
            - behavior
            - behavior
          slice_controls:
            slice_tiered_caching_enabled:
            - slice_tiered_caching_enabled
            - slice_tiered_caching_enabled
            slice_edge_caching_enabled:
            - slice_edge_caching_enabled
            - slice_edge_caching_enabled
            slice_configuration_range:
            - slice_configuration_range
            - slice_configuration_range
            slice_configuration_enabled:
            - slice_configuration_enabled
            - slice_configuration_enabled
          application_controls:
            cache_by_cookies:
            - cache_by_cookies
            - cache_by_cookies
            query_string_fields:
            - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
            - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
            adaptive_delivery_action:
            - adaptive_delivery_action
            - adaptive_delivery_action
            device_group:
            - device_group
            - device_group
            query_string_sort_enabled:
            - query_string_sort_enabled
            - query_string_sort_enabled
            cookie_names: null
            cache_by_query_string:
            - cache_by_query_string
            - cache_by_query_string
      properties:
        name:
          items:
            type: string
          type: array
        id:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        modules:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassModulesField"
        active:
          items:
            type: string
          type: array
        debug:
          items:
            type: string
          type: array
        product_version:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          pattern: .*
          type: string
      title: ResponseBadRequestEdgeApplication
      type: object
    ResponseBadRequestSerializerMetaclassModulesField:
      additionalProperties: false
      example:
        edge_cache:
          max_age:
          - max_age
          - max_age
          caching_for_post_enabled:
          - caching_for_post_enabled
          - caching_for_post_enabled
          caching_for_options_enabled:
          - caching_for_options_enabled
          - caching_for_options_enabled
          stale_cache_enabled:
          - stale_cache_enabled
          - stale_cache_enabled
          behavior:
          - behavior
          - behavior
          tiered_cache_region:
          - tiered_cache_region
          - tiered_cache_region
          tiered_cache_enabled:
          - tiered_cache_enabled
          - tiered_cache_enabled
        browser_cache:
          max_age:
          - max_age
          - max_age
          behavior:
          - behavior
          - behavior
        slice_controls:
          slice_tiered_caching_enabled:
          - slice_tiered_caching_enabled
          - slice_tiered_caching_enabled
          slice_edge_caching_enabled:
          - slice_edge_caching_enabled
          - slice_edge_caching_enabled
          slice_configuration_range:
          - slice_configuration_range
          - slice_configuration_range
          slice_configuration_enabled:
          - slice_configuration_enabled
          - slice_configuration_enabled
        application_controls:
          cache_by_cookies:
          - cache_by_cookies
          - cache_by_cookies
          query_string_fields:
          - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
          - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
          adaptive_delivery_action:
          - adaptive_delivery_action
          - adaptive_delivery_action
          device_group:
          - device_group
          - device_group
          query_string_sort_enabled:
          - query_string_sort_enabled
          - query_string_sort_enabled
          cookie_names: null
          cache_by_query_string:
          - cache_by_query_string
          - cache_by_query_string
      properties:
        browser_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerBrowser_cacheField"
        edge_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerEdge_cacheField"
        application_controls:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField"
        slice_controls:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerSlice_controlsField"
      title: ResponseBadRequestSerializerMetaclassModulesField
      type: object
    ResponseBadRequestSerializerMetaclassStrategyField:
      additionalProperties: false
      example:
        strategy_type:
        - strategy_type
        - strategy_type
      properties:
        strategy_type:
          items:
            type: string
          type: array
      title: ResponseBadRequestSerializerMetaclassStrategyField
      type: object
    ResponseBadRequestWorkloadDeployment:
      additionalProperties: false
      example:
        current:
        - current
        - current
        last_editor:
        - last_editor
        - last_editor
        name:
        - name
        - name
        active:
        - active
        - active
        id:
        - id
        - id
        detail: detail
        strategy:
          strategy_type:
          - strategy_type
          - strategy_type
        last_modified:
        - last_modified
        - last_modified
      properties:
        id:
          items:
            type: string
          type: array
        name:
          items:
            type: string
          type: array
        active:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        strategy:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassStrategyField"
        current:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingModulesSerializerSlice_controlsField
      type: object
    ResponseBadRequestEdgeApplication:
      additionalProperties: false
      example:
        product_version:
        - product_version
        - product_version
        debug:
        - debug
        - debug
        last_editor:
        - last_editor
        - last_editor
        name:
        - name
        - name
        active:
        - active
        - active
        id:
        - id
        - id
        detail: detail
        last_modified:
        - last_modified
        - last_modified
        modules:
          edge_cache:
            max_age:
            - max_age
            - max_age
            caching_for_post_enabled:
            - caching_for_post_enabled
            - caching_for_post_enabled
            caching_for_options_enabled:
            - caching_for_options_enabled
            - caching_for_options_enabled
            stale_cache_enabled:
            - stale_cache_enabled
            - stale_cache_enabled
            behavior:
            - behavior
            - behavior
            tiered_cache_region:
            - tiered_cache_region
            - tiered_cache_region
            tiered_cache_enabled:
            - tiered_cache_enabled
            - tiered_cache_enabled
          browser_cache:
            max_age:
            - max_age
            - max_age
            behavior:
            - behavior
            - behavior
          slice_controls:
            slice_tiered_caching_enabled:
            - slice_tiered_caching_enabled
            - slice_tiered_caching_enabled
            slice_edge_caching_enabled:
            - slice_edge_caching_enabled
            - slice_edge_caching_enabled
            slice_configuration_range:
            - slice_configuration_range
            - slice_configuration_range
            slice_configuration_enabled:
            - slice_configuration_enabled
            - slice_configuration_enabled
          application_controls:
            cache_by_cookies:
            - cache_by_cookies
            - cache_by_cookies
            query_string_fields:
            - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
            - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
            adaptive_delivery_action:
            - adaptive_delivery_action
            - adaptive_delivery_action
            device_group:
            - device_group
            - device_group
            query_string_sort_enabled:
            - query_string_sort_enabled
            - query_string_sort_enabled
            cookie_names: null
            cache_by_query_string:
            - cache_by_query_string
            - cache_by_query_string
      properties:
        name:
          items:
            type: string
          type: array
        id:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        modules:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassModulesField"
        active:
          items:
            type: string
          type: array
        debug:
          items:
            type: string
          type: array
        product_version:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          pattern: .*
          type: string
      title: ResponseBadRequestWorkloadDeployment
      type: object
    ResponseBadRequestSerializerMetaclassModulesField:
      additionalProperties: false
      example:
        edge_cache:
          max_age:
          - max_age
          - max_age
          caching_for_post_enabled:
          - caching_for_post_enabled
          - caching_for_post_enabled
          caching_for_options_enabled:
          - caching_for_options_enabled
          - caching_for_options_enabled
          stale_cache_enabled:
          - stale_cache_enabled
          - stale_cache_enabled
          behavior:
          - behavior
          - behavior
          tiered_cache_region:
          - tiered_cache_region
          - tiered_cache_region
          tiered_cache_enabled:
          - tiered_cache_enabled
          - tiered_cache_enabled
        browser_cache:
          max_age:
          - max_age
          - max_age
          behavior:
          - behavior
          - behavior
        slice_controls:
          slice_tiered_caching_enabled:
          - slice_tiered_caching_enabled
          - slice_tiered_caching_enabled
          slice_edge_caching_enabled:
          - slice_edge_caching_enabled
          - slice_edge_caching_enabled
          slice_configuration_range:
          - slice_configuration_range
          - slice_configuration_range
          slice_configuration_enabled:
          - slice_configuration_enabled
          - slice_configuration_enabled
        application_controls:
          cache_by_cookies:
          - cache_by_cookies
          - cache_by_cookies
          query_string_fields:
          - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
          - ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields
          adaptive_delivery_action:
          - adaptive_delivery_action
          - adaptive_delivery_action
          device_group:
          - device_group
          - device_group
          query_string_sort_enabled:
          - query_string_sort_enabled
          - query_string_sort_enabled
          cookie_names: null
          cache_by_query_string:
          - cache_by_query_string
          - cache_by_query_string
      properties:
        browser_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerBrowser_cacheField"
        edge_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerEdge_cacheField"
        application_controls:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField"
        slice_controls:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingModulesSerializerSlice_controlsField"
      title: ResponseBadRequestSerializerMetaclassModulesField
      type: object
    ResponseCustomPages:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          connector_custom_pages:
            pages:
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            edge_connector: 6
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/CustomPages"
      required:
      - data
      title: ResponseCustomPages
      type: object
    ResponseDeleteCustomPages:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteCustomPages
      type: object
    ResponseDeleteEdgeApplication:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeApplication
      type: object
    ResponseDeleteEdgeApplicationFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeApplicationFunctionInstance
      type: object
    ResponseDeleteEdgeApplicationRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeApplicationRuleEngine
      type: object
    ResponseDeleteEdgeConnectorPolymorphic:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeConnectorPolymorphic
      type: object
    ResponseDeleteEdgeFirewall:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeFirewall
      type: object
    ResponseDeleteEdgeFirewallFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeFirewallFunctionInstance
      type: object
    ResponseDeleteEdgeFirewallRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeFirewallRuleEngine
      type: object
    ResponseDeleteEdgeFunctions:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteEdgeFunctions
      type: object
    ResponseDeleteNetworkListDetail:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteNetworkListDetail
      type: object
    ResponseDeleteWAF:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteWAF
      type: object
    ResponseDeleteWAFRule:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteWAFRule
      type: object
    ResponseEdgeApplication:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache:
              enabled: true
            application_accelerator:
              enabled: true
            tiered_cache:
              enabled: true
            image_processor:
              enabled: true
            edge_functions:
              enabled: true
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplication"
      required:
      - data
      title: ResponseEdgeApplication
      type: object
    ResponseEdgeApplicationDeviceGroups:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          user_agent: user_agent
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplicationDeviceGroups"
      required:
      - data
      title: ResponseEdgeApplicationDeviceGroups
      type: object
    ResponseEdgeApplicationFunctionInstance:
      additionalProperties: false
      example:
        data:
          args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance"
      required:
      - data
      title: ResponseEdgeApplicationFunctionInstance
      type: object
    ResponseEdgeApplicationRuleEngine:
      additionalProperties: false
      example:
        data:
          phase: phase
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeApplicationRuleEngine"
      required:
      - data
      title: ResponseEdgeApplicationRuleEngine
      type: object
    ResponseEdgeConnectorPolymorphic:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          addresses:
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          read_write_timeout: 109
          load_balance_method: ""
          max_retries: 2
          last_editor: last_editor
          active: true
          type: type
          type_properties:
            path: path
            versions:
            - null
            - null
            real_port_header: real_port_header
            host: host
            following_redirect: true
            real_ip_header: real_ip_header
          modules:
            load_balancer_enabled: true
            origin_shield_enabled: true
          connection_preference:
          - connection_preference
          - connection_preference
          name: name
          tls: ""
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          connection_timeout: 279
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeConnectorPolymorphic"
      required:
      - data
      title: ResponseEdgeConnectorPolymorphic
      type: object
    ResponseEdgeFirewall:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            network_protection: ""
            edge_functions: ""
            waf: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFirewall"
      required:
      - data
      title: ResponseEdgeFirewall
      type: object
    ResponseEdgeFirewallFunctionInstance:
      additionalProperties: false
      example:
        data:
          args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFirewallFunctionInstance"
      required:
      - data
      title: ResponseEdgeFirewallFunctionInstance
      type: object
    ResponseEdgeFirewallRuleEngine:
      additionalProperties: false
      example:
        data:
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFirewallRuleEngine"
      required:
      - data
      title: ResponseEdgeFirewallRuleEngine
      type: object
    ResponseEdgeFunctions:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          language: ""
          version: version
          default_args:
            arg_01: value_01
          initiator_type: ""
          vendor: vendor
          name: name
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/EdgeFunctions"
      required:
      - data
      title: ResponseEdgeFunctions
      type: object
    ResponseListCacheSetting:
      additionalProperties: false
      example:
        name: name
        id: 0
        modules:
          edge_cache:
            max_age: 4622587
            caching_for_post_enabled: true
            caching_for_options_enabled: true
            stale_cache_enabled: true
            behavior: behavior
            tiered_cache_region: tiered_cache_region
            tiered_cache_enabled: true
          browser_cache:
            max_age: 19008185
            behavior: behavior
          slice_controls:
            slice_tiered_caching_enabled: true
            slice_edge_caching_enabled: true
            slice_configuration_range: 577
            slice_configuration_enabled: true
          application_controls:
            cache_by_cookies: cache_by_cookies
            query_string_fields:
            - query_string_fields
            - query_string_fields
            adaptive_delivery_action: adaptive_delivery_action
            device_group:
            - 5
            - 5
            query_string_sort_enabled: true
            cookie_names:
            - cookie_names
            - cookie_names
            cache_by_query_string: cache_by_query_string
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
          type: string
        modules:
          $ref: "#/components/schemas/CacheSettingModules"
      required:
      - id
      - name
      title: ResponseListCacheSetting
      type: object
    ResponseNetworkListDetail:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          items:
          - items
          - items
          - items
          - items
          - items
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/NetworkListDetail"
      required:
      - data
      title: ResponseNetworkListDetail
      type: object
    ResponsePurgeInput:
      additionalProperties: false
      example:
        data:
          items:
          - items
          - items
          layer: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/PurgeInput"
      required:
      - data
      title: ResponsePurgeInput
      type: object
    ResponseRetrieveCacheSetting:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              caching_for_post_enabled: true
              caching_for_options_enabled: true
              stale_cache_enabled: true
              behavior: behavior
              tiered_cache_region: tiered_cache_region
              tiered_cache_enabled: true
            browser_cache:
              max_age: 19008185
              behavior: behavior
            slice_controls:
              slice_tiered_caching_enabled: true
              slice_edge_caching_enabled: true
              slice_configuration_range: 577
              slice_configuration_enabled: true
            application_controls:
              cache_by_cookies: cache_by_cookies
              query_string_fields:
              - query_string_fields
              - query_string_fields
              adaptive_delivery_action: adaptive_delivery_action
              device_group:
              - 5
              - 5
              query_string_sort_enabled: true
              cookie_names:
              - cookie_names
              - cookie_names
              cache_by_query_string: cache_by_query_string
      properties:
        data:
          $ref: "#/components/schemas/CacheSetting"
      required:
      - data
      title: ResponseRetrieveCacheSetting
      type: object
    ResponseRetrieveCustomPages:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          connector_custom_pages:
            pages:
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            - code: code
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            edge_connector: 6
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/CustomPages"
      required:
      - data
      title: ResponseRetrieveCustomPages
      type: object
    ResponseRetrieveEdgeApplication:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache:
              enabled: true
            application_accelerator:
              enabled: true
            tiered_cache:
              enabled: true
            image_processor:
              enabled: true
            edge_functions:
              enabled: true
      properties:
        data:
          $ref: "#/components/schemas/EdgeApplication"
      required:
      - data
      title: ResponseRetrieveEdgeApplication
      type: object
    ResponseRetrieveEdgeApplicationDeviceGroups:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          user_agent: user_agent
      properties:
        data:
          $ref: "#/components/schemas/EdgeApplicationDeviceGroups"
      required:
      - data
      title: ResponseRetrieveEdgeApplicationDeviceGroups
      type: object
    ResponseRetrieveEdgeApplicationFunctionInstance:
      additionalProperties: false
      example:
        data:
          args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/EdgeApplicationFunctionInstance"
      required:
      - data
      title: ResponseRetrieveEdgeApplicationFunctionInstance
      type: object
    ResponseRetrieveEdgeApplicationRuleEngine:
      additionalProperties: false
      example:
        data:
          phase: phase
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        data:
          $ref: "#/components/schemas/EdgeApplicationRuleEngine"
      required:
      - data
      title: ResponseRetrieveEdgeApplicationRuleEngine
      type: object
    ResponseRetrieveEdgeConnectorPolymorphic:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          addresses:
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          - tls_port: 9607
            max_fails: 3
            address: address
            plain_port: 39501
            max_conns: 563
            weight: 59
            active: true
            server_role: ""
            fail_timeout: 42
          read_write_timeout: 109
          load_balance_method: ""
          max_retries: 2
          last_editor: last_editor
          active: true
          type: type
          type_properties:
            path: path
            versions:
            - null
            - null
            real_port_header: real_port_header
            host: host
            following_redirect: true
            real_ip_header: real_ip_header
          modules:
            load_balancer_enabled: true
            origin_shield_enabled: true
          connection_preference:
          - connection_preference
          - connection_preference
          name: name
          tls: ""
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          connection_timeout: 279
      properties:
        data:
          $ref: "#/components/schemas/EdgeConnectorPolymorphic"
      required:
      - data
      title: ResponseRetrieveEdgeConnectorPolymorphic
      type: object
    ResponseRetrieveEdgeFirewall:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            network_protection: ""
            edge_functions: ""
            waf: ""
      properties:
        data:
          $ref: "#/components/schemas/EdgeFirewall"
      required:
      - data
      title: ResponseRetrieveEdgeFirewall
      type: object
    ResponseRetrieveEdgeFirewallFunctionInstance:
      additionalProperties: false
      example:
        data:
          args:
            arg_01: value_01
          edge_function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/EdgeFirewallFunctionInstance"
      required:
      - data
      title: ResponseRetrieveEdgeFirewallFunctionInstance
      type: object
    ResponseRetrieveEdgeFirewallRuleEngine:
      additionalProperties: false
      example:
        data:
          behaviors:
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          - argument: ""
            name: name
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        data:
          $ref: "#/components/schemas/EdgeFirewallRuleEngine"
      required:
      - data
      title: ResponseRetrieveEdgeFirewallRuleEngine
      type: object
    ResponseRetrieveGetEdgeFunctions:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          vendor: vendor
          last_editor: last_editor
          name: name
          active: true
          language: ""
          id: 0
          reference_count: 6
          version: version
          last_modified: 2000-01-23T04:56:07.000+00:00
          default_args:
            arg_01: value_01
          initiator_type: ""
      properties:
        data:
          $ref: "#/components/schemas/GetEdgeFunctions"
      required:
      - data
      title: ResponseRetrieveGetEdgeFunctions
      type: object
    ResponseRetrieveNetworkListDetail:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          items:
          - items
          - items
          - items
          - items
          - items
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/NetworkListDetail"
      required:
      - data
      title: ResponseRetrieveNetworkListDetail
      type: object
    ResponseRetrieveWAF:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/WAF"
      required:
      - data
      title: ResponseRetrieveWAF
      type: object
    ResponseRetrieveWAFRule:
      additionalProperties: false
      example:
        data:
          rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
      properties:
        data:
          $ref: "#/components/schemas/WAFRule"
      required:
      - data
      title: ResponseRetrieveWAFRule
      type: object
    ResponseRetrieveWorkload:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
      properties:
        data:
          $ref: "#/components/schemas/Workload"
      required:
      - data
      title: ResponseRetrieveWorkload
      type: object
    ResponseRetrieveWorkloadDeployment:
      additionalProperties: false
      example:
        data:
          current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            strategy_type: strategy_type
            attributes:
              custom_page: 1
              edge_firewall: 1
              edge_application: 5559347081229897728
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/WorkloadDeployment"
      required:
      - data
      title: ResponseRetrieveWorkloadDeployment
      type: object
    ResponseWAF:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/WAF"
      required:
      - data
      title: ResponseWAF
      type: object
    ResponseWAFRule:
      additionalProperties: false
      example:
        data:
          rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/WAFRule"
      required:
      - data
      title: ResponseWAFRule
      type: object
    ResponseWorkload:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/Workload"
      required:
      - data
      title: ResponseWorkload
      type: object
    ResponseWorkloadDeployment:
      additionalProperties: false
      example:
        data:
          current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            strategy_type: strategy_type
            attributes:
              custom_page: 1
              edge_firewall: 1
              edge_application: 5559347081229897728
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/WorkloadDeployment"
      required:
      - data
      title: ResponseWorkloadDeployment
      type: object
    RuleIdEnum:
      description: |-
        * `0` - All Rules
        * `1` - Validation of protocol compliance: weird request, unable to parse
        * `2` - Request too big, stored on disk and not parsed
        * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
        * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
        * `12` - Validation of protocol compliance: invalid formatted URL
        * `13` - Validation of protocol compliance: invalid POST format
        * `14` - Validation of protocol compliance: invalid POST boundary
        * `15` - Validation of protocol compliance: invalid JSON
        * `16` - Validation of protocol compliance: POST with no body
        * `17` - Possible SQL Injection attack: validation with libinjection_sql
        * `18` - Possible XSS attack: validation with libinjection_xss
        * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
        * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
        * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
        * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
        * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
        * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
        * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
        * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
        * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
        * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
        * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
        * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
        * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
        * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
        * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
        * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
        * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
        * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
        * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
        * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
        * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
        * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
        * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
        * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
        * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
        * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
        * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
        * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
        * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
        * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
        * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
        * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
        * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
        * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
        * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
        * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
        * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
        * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
        * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
        * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
        * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
        * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
        * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
        * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
        * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
        * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
        * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
        * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
        * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
        * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
        * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
      format: int64
      title: RuleIdEnum
      type: integer
    RulesetsEnum:
      description: '* `1` - Azion WAF Score Ruleset'
      format: int64
      title: RulesetsEnum
      type: integer
    SensitivityEnum:
      description: |-
        * `highest` - Highest
        * `high` - High
        * `medium` - Medium
        * `low` - Low
        * `lowest` - Lowest
      title: SensitivityEnum
      type: string
    ServerRoleEnum:
      description: |-
        * `primary` - Primary
        * `backup` - Backup
      title: ServerRoleEnum
      type: string
    SetCustomResponseArgument:
      additionalProperties: false
      properties:
        status_code:
          format: int64
          maximum: 499
          minimum: 200
          type: integer
        content_type:
          maxLength: 255
          minLength: 0
          pattern: .*
          type: string
        content_body:
          maxLength: 500
          minLength: 0
          pattern: .*
          type: string
      required:
      - status_code
      title: SetCustomResponseArgument
      type: object
    SetCustomResponseArgumentRequest:
      additionalProperties: false
      properties:
        status_code:
          format: int64
          maximum: 499
          minimum: 200
          type: integer
        content_type:
          maxLength: 255
          minLength: 0
          pattern: .*
          type: string
        content_body:
          maxLength: 500
          minLength: 0
          pattern: .*
          type: string
      required:
      - status_code
      title: SetCustomResponseArgumentRequest
      type: object
    SetRateLimitArgument:
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: "#/components/schemas/SetRateLimitArgumentTypeEnum"
        limit_by:
          description: |-
            * `client_ip` - client_ip
            * `global` - global
          title: LimitByEnum
          type: string
        average_rate_limit:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
        maximum_burst_size:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
      required:
      - average_rate_limit
      - limit_by
      title: SetRateLimitArgument
      type: object
    SetRateLimitArgumentRequest:
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: "#/components/schemas/SetRateLimitArgumentTypeEnum"
        limit_by:
          description: |-
            * `client_ip` - client_ip
            * `global` - global
          title: LimitByEnum
          type: string
        average_rate_limit:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
        maximum_burst_size:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
      required:
      - average_rate_limit
      - limit_by
      title: SetRateLimitArgumentRequest
      type: object
    SetRateLimitArgumentTypeEnum:
      description: |-
        * `second` - second
        * `minute` - minute
      title: SetRateLimitArgumentTypeEnum
      type: string
    SetWafRuleSetArgument:
      additionalProperties: false
      properties:
        id:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        mode:
          description: |-
            * `learning` - learning
            * `blocking` - blocking
          title: ModeEnum
          type: string
      required:
      - id
      - mode
      title: SetWafRuleSetArgument
      type: object
    SetWafRuleSetArgumentRequest:
      additionalProperties: false
      properties:
        id:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        mode:
          description: |-
            * `learning` - learning
            * `blocking` - blocking
          title: ModeEnum
          type: string
      required:
      - id
      - mode
      title: SetWafRuleSetArgumentRequest
      type: object
    SliceControlsModule:
      additionalProperties: false
      example:
        slice_tiered_caching_enabled: true
        slice_edge_caching_enabled: true
        slice_configuration_range: 577
        slice_configuration_enabled: true
      properties:
        slice_configuration_enabled:
          type: boolean
        slice_edge_caching_enabled:
          type: boolean
        slice_tiered_caching_enabled:
          type: boolean
        slice_configuration_range:
          format: int64
          maximum: 1024
          minimum: 0
          type: integer
      required:
      - slice_configuration_enabled
      - slice_edge_caching_enabled
      - slice_tiered_caching_enabled
      title: SliceControlsModule
      type: object
    SliceControlsModuleRequest:
      additionalProperties: false
      example:
        slice_tiered_caching_enabled: true
        slice_edge_caching_enabled: true
        slice_configuration_range: 610
        slice_configuration_enabled: true
      properties:
        slice_configuration_enabled:
          type: boolean
        slice_edge_caching_enabled:
          type: boolean
        slice_tiered_caching_enabled:
          type: boolean
        slice_configuration_range:
          format: int64
          maximum: 1024
          minimum: 0
          type: integer
      required:
      - slice_configuration_enabled
      - slice_edge_caching_enabled
      - slice_tiered_caching_enabled
      title: SliceControlsModuleRequest
      type: object
    StrategyTypeEnum:
      description: '* `default` - Default'
      title: StrategyTypeEnum
      type: string
    TLSEdgeConnector:
      additionalProperties: false
      properties:
        policy:
          allOf:
          - $ref: "#/components/schemas/PolicyEnum"
          description: |-
            policy of security to access the origin Possible values: off, on, preserve. Default: preserve

            * `off` - off
            * `on` - on
            * `preserve` - preserve
      title: TLSEdgeConnector
      type: object
    TLSEdgeConnectorRequest:
      additionalProperties: false
      properties:
        policy:
          allOf:
          - $ref: "#/components/schemas/PolicyEnum"
          description: |-
            policy of security to access the origin Possible values: off, on, preserve. Default: preserve

            * `off` - off
            * `on` - on
            * `preserve` - preserve
      title: TLSEdgeConnectorRequest
      type: object
    TLSWorkload:
      additionalProperties: false
      properties:
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        ciphers:
          allOf:
          - $ref: "#/components/schemas/CiphersEnum"
          description: |-
            Allow to configure which set of ciphers will be used when TLS ciphers negotiation.

            * `1` - TLSv1.2_2018 - TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256
            * `2` - TLSv1.2_2019 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `3` - TLSv1.3_2022 - ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
            * `4` - TLSv1.2_2021 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `5` - Legacy_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA
            * `6` - Compatible_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
            * `7` - Modern_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305
            * `8` - Legacy_v2017Q1 - AES128-CCM:AES128-CCM8:AES128-GCM-SHA256:AES128-SHA:AES128-SHA256:AES256-CCM:AES256-CCM8:AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        minimum_version:
          $ref: "#/components/schemas/TLSWorkload_minimum_version"
      title: TLSWorkload
      type: object
    TLSWorkloadRequest:
      additionalProperties: false
      properties:
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        ciphers:
          allOf:
          - $ref: "#/components/schemas/CiphersEnum"
          description: |-
            Allow to configure which set of ciphers will be used when TLS ciphers negotiation.

            * `1` - TLSv1.2_2018 - TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256
            * `2` - TLSv1.2_2019 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `3` - TLSv1.3_2022 - ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
            * `4` - TLSv1.2_2021 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `5` - Legacy_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA
            * `6` - Compatible_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
            * `7` - Modern_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305
            * `8` - Legacy_v2017Q1 - AES128-CCM:AES128-CCM8:AES128-GCM-SHA256:AES128-SHA:AES128-SHA256:AES256-CCM:AES256-CCM8:AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        minimum_version:
          $ref: "#/components/schemas/TLSWorkload_minimum_version"
      title: TLSWorkloadRequest
      type: object
    ThreatEnum:
      description: |-
        * `cross_site_scripting` - cross_site_scripting
        * `directory_traversal` - directory_traversal
        * `evading_tricks` - evading_tricks
        * `file_upload` - file_upload
        * `identified_attack` - identified_attack
        * `remote_file_inclusion` - remote_file_inclusion
        * `sql_injection` - sql_injection
        * `unwanted_access` - unwanted_access
      title: ThreatEnum
      type: string
    ThresholdsConfigField:
      additionalProperties: false
      example:
        threat: threat
        sensitivity: ""
      properties:
        threat:
          description: |-
            * `cross_site_scripting` - cross_site_scripting
            * `directory_traversal` - directory_traversal
            * `evading_tricks` - evading_tricks
            * `file_upload` - file_upload
            * `identified_attack` - identified_attack
            * `remote_file_inclusion` - remote_file_inclusion
            * `sql_injection` - sql_injection
            * `unwanted_access` - unwanted_access
          title: ThreatEnum
          type: string
        sensitivity:
          allOf:
          - $ref: "#/components/schemas/SensitivityEnum"
      required:
      - threat
      title: ThresholdsConfigField
      type: object
    ThresholdsConfigFieldRequest:
      additionalProperties: false
      example:
        threat: threat
        sensitivity: ""
      properties:
        threat:
          description: |-
            * `cross_site_scripting` - cross_site_scripting
            * `directory_traversal` - directory_traversal
            * `evading_tricks` - evading_tricks
            * `file_upload` - file_upload
            * `identified_attack` - identified_attack
            * `remote_file_inclusion` - remote_file_inclusion
            * `sql_injection` - sql_injection
            * `unwanted_access` - unwanted_access
          title: ThreatEnum
          type: string
        sensitivity:
          allOf:
          - $ref: "#/components/schemas/SensitivityEnum"
      required:
      - threat
      title: ThresholdsConfigFieldRequest
      type: object
    TieredCacheModule:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: TieredCacheModule
      type: object
    TieredCacheModuleRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: TieredCacheModuleRequest
      type: object
    Type528Enum:
      description: |-
        * `asn` - ASN
        * `countries` - Countries
        * `ip_cidr` - IP/CIDR
      title: Type528Enum
      type: string
    Type5cdEnum:
      description: |-
        * `http` - HTTP
        * `s3` - S3
        * `edge_storage` - Edge Storage
        * `live_ingest` - Live Ingest
      title: Type5cdEnum
      type: string
    VerificationEnum:
      description: |-
        * `enforce` - Enforce
        * `permissive` - Permissive
      title: VerificationEnum
      type: string
    VersionsEnum:
      description: '* `http1` - http1'
      title: VersionsEnum
      type: string
    WAF:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        name: name
        engine_settings:
          attributes:
            rulesets:
            - null
            - null
            thresholds:
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
          engine_version: ""
          type: ""
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        active:
          type: boolean
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          nullable: true
          pattern: \d+\.\d+
          type: string
        engine_settings:
          $ref: "#/components/schemas/WAFEngineSettingsField"
      required:
      - id
      - last_editor
      - last_modified
      - name
      title: WAF
      type: object
    WAFEngineSettingsAttributesField:
      additionalProperties: false
      example:
        rulesets:
        - null
        - null
        thresholds:
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
      properties:
        rulesets:
          items:
            $ref: "#/components/schemas/RulesetsEnum"
          type: array
        thresholds:
          items:
            $ref: "#/components/schemas/ThresholdsConfigField"
          maxItems: 8
          type: array
      title: WAFEngineSettingsAttributesField
      type: object
    WAFEngineSettingsAttributesFieldRequest:
      additionalProperties: false
      example:
        rulesets:
        - null
        - null
        thresholds:
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
      properties:
        rulesets:
          items:
            $ref: "#/components/schemas/RulesetsEnum"
          type: array
        thresholds:
          items:
            $ref: "#/components/schemas/ThresholdsConfigFieldRequest"
          maxItems: 8
          type: array
      title: WAFEngineSettingsAttributesFieldRequest
      type: object
    WAFEngineSettingsField:
      additionalProperties: false
      example:
        attributes:
          rulesets:
          - null
          - null
          thresholds:
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
        engine_version: ""
        type: ""
      properties:
        engine_version:
          allOf:
          - $ref: "#/components/schemas/EngineVersionEnum"
        type:
          allOf:
          - $ref: "#/components/schemas/WAFEngineSettingsFieldTypeEnum"
        attributes:
          $ref: "#/components/schemas/WAFEngineSettingsAttributesField"
      title: WAFEngineSettingsField
      type: object
    WAFEngineSettingsFieldRequest:
      additionalProperties: false
      example:
        attributes:
          rulesets:
          - null
          - null
          thresholds:
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
        engine_version: ""
        type: ""
      properties:
        engine_version:
          allOf:
          - $ref: "#/components/schemas/EngineVersionEnum"
        type:
          allOf:
          - $ref: "#/components/schemas/WAFEngineSettingsFieldTypeEnum"
        attributes:
          $ref: "#/components/schemas/WAFEngineSettingsAttributesFieldRequest"
      title: WAFEngineSettingsFieldRequest
      type: object
    WAFEngineSettingsFieldTypeEnum:
      description: '* `score` - score'
      title: WAFEngineSettingsFieldTypeEnum
      type: string
    WAFExceptionGenericCondition:
      additionalProperties: false
      example:
        match: match
      properties:
        match:
          description: |-
            * `any_http_header_name` - any_http_header_name
            * `any_http_header_value` - any_http_header_value
            * `any_query_string_name` - any_query_string_name
            * `any_query_string_value` - any_query_string_value
            * `any_url` - any_url
            * `body_form_field_name` - body_form_field_name
            * `body_form_field_value` - body_form_field_value
            * `file_extension` - file_extension
            * `raw_body` - raw_body
          title: WAFExceptionGenericConditionMatchEnum
          type: string
      required:
      - match
      title: WAFExceptionGenericCondition
      type: object
    WAFExceptionGenericConditionMatchEnum:
      description: |-
        * `any_http_header_name` - any_http_header_name
        * `any_http_header_value` - any_http_header_value
        * `any_query_string_name` - any_query_string_name
        * `any_query_string_value` - any_query_string_value
        * `any_url` - any_url
        * `body_form_field_name` - body_form_field_name
        * `body_form_field_value` - body_form_field_value
        * `file_extension` - file_extension
        * `raw_body` - raw_body
      title: WAFExceptionGenericConditionMatchEnum
      type: string
    WAFExceptionGenericConditionRequest:
      additionalProperties: false
      example:
        match: match
      properties:
        match:
          description: |-
            * `any_http_header_name` - any_http_header_name
            * `any_http_header_value` - any_http_header_value
            * `any_query_string_name` - any_query_string_name
            * `any_query_string_value` - any_query_string_value
            * `any_url` - any_url
            * `body_form_field_name` - body_form_field_name
            * `body_form_field_value` - body_form_field_value
            * `file_extension` - file_extension
            * `raw_body` - raw_body
          title: WAFExceptionGenericConditionMatchEnum
          type: string
      required:
      - match
      title: WAFExceptionGenericConditionRequest
      type: object
    WAFExceptionPolymorphicCondition:
      additionalProperties: false
      oneOf:
      - $ref: "#/components/schemas/WAFExceptionGenericCondition"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnValue"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnName"
      title: WAFExceptionPolymorphicCondition
    WAFExceptionPolymorphicConditionRequest:
      additionalProperties: false
      oneOf:
      - $ref: "#/components/schemas/WAFExceptionGenericConditionRequest"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnValueRequest"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnNameRequest"
      title: WAFExceptionPolymorphicConditionRequest
    WAFExceptionSpecificConditionOnName:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_name` - specific_body_form_field_name
            * `specific_http_header_name` - specific_http_header_name
            * `specific_query_string_name` - specific_query_string_name
          title: WAFExceptionSpecificConditionOnNameMatchEnum
          type: string
        name:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: "[a-zA-Z0-9<>?()]+"
          type: string
      required:
      - match
      - name
      title: WAFExceptionSpecificConditionOnName
      type: object
    WAFExceptionSpecificConditionOnNameMatchEnum:
      description: |-
        * `specific_body_form_field_name` - specific_body_form_field_name
        * `specific_http_header_name` - specific_http_header_name
        * `specific_query_string_name` - specific_query_string_name
      title: WAFExceptionSpecificConditionOnNameMatchEnum
      type: string
    WAFExceptionSpecificConditionOnNameRequest:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_name` - specific_body_form_field_name
            * `specific_http_header_name` - specific_http_header_name
            * `specific_query_string_name` - specific_query_string_name
          title: WAFExceptionSpecificConditionOnNameMatchEnum
          type: string
        name:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: "[a-zA-Z0-9<>?()]+"
          type: string
      required:
      - match
      - name
      title: WAFExceptionSpecificConditionOnNameRequest
      type: object
    WAFExceptionSpecificConditionOnValue:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_value` - specific_body_form_field_value
            * `specific_http_header_value` - specific_http_header_value
            * `specific_query_string_value` - specific_query_string_value
          title: WAFExceptionSpecificConditionOnValueMatchEnum
          type: string
        value:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: "[a-zA-Z0-9<>?()]+"
          type: string
      required:
      - match
      - value
      title: WAFExceptionSpecificConditionOnValue
      type: object
    WAFExceptionSpecificConditionOnValueMatchEnum:
      description: |-
        * `specific_body_form_field_value` - specific_body_form_field_value
        * `specific_http_header_value` - specific_http_header_value
        * `specific_query_string_value` - specific_query_string_value
      title: WAFExceptionSpecificConditionOnValueMatchEnum
      type: string
    WAFExceptionSpecificConditionOnValueRequest:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_value` - specific_body_form_field_value
            * `specific_http_header_value` - specific_http_header_value
            * `specific_query_string_value` - specific_query_string_value
          title: WAFExceptionSpecificConditionOnValueMatchEnum
          type: string
        value:
          maxLength: 255
          minLength: 1
          nullable: true
          pattern: "[a-zA-Z0-9<>?()]+"
          type: string
      required:
      - match
      - value
      title: WAFExceptionSpecificConditionOnValueRequest
      type: object
    WAFRequest:
      additionalProperties: false
      example:
        product_version: product_version
        name: name
        engine_settings:
          attributes:
            rulesets:
            - null
            - null
            thresholds:
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
          engine_version: ""
          type: ""
        active: true
      properties:
        active:
          type: boolean
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          nullable: true
          pattern: \d+\.\d+
          type: string
        engine_settings:
          $ref: "#/components/schemas/WAFEngineSettingsFieldRequest"
      required:
      - name
      title: WAFRequest
      type: object
    WAFRule:
      additionalProperties: false
      example:
        rule_id: ""
        path: path
        last_editor: last_editor
        name: name
        active: true
        id: 0
        conditions:
        - match: match
        - match: match
        last_modified: 2000-01-23T04:56:07.000+00:00
        operator: ""
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        rule_id:
          allOf:
          - $ref: "#/components/schemas/RuleIdEnum"
          description: |-
            0 - All Rules<br>
            1 - Validation of protocol compliance: weird request, unable to parse<br>
            2 - Request too big, stored on disk and not parsed<br>
            10 - Validation of protocol compliance: invalid HEX encoding (null bytes)<br>
            11 - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)<br>
            12 - Validation of protocol compliance: invalid formatted URL<br>
            13 - Validation of protocol compliance: invalid POST format<br>
            14 - Validation of protocol compliance: invalid POST boundary<br>
            15 - Validation of protocol compliance: invalid JSON<br>
            16 - Validation of protocol compliance: POST with no body<br>
            17 - Possible SQL Injection attack: validation with libinjection_sql<br>
            18 - Possible XSS attack: validation with libinjection_xss<br>
            1000 - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies<br>
            1001 - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies<br>
            1002 - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies<br>
            1003 - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies<br>
            1004 - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies<br>
            1005 - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies<br>
            1006 - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies<br>
            1007 - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies<br>
            1008 - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String<br>
            1009 - Possible SQL Injection attack: equal sign (=) found in Body or Query String<br>
            1010 - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies<br>
            1011 - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies<br>
            1013 - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies<br>
            1015 - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies<br>
            1016 - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies<br>
            1017 - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies<br>
            1100 - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies<br>
            1101 - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies<br>
            1102 - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies<br>
            1103 - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies<br>
            1104 - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies<br>
            1105 - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies<br>
            1106 - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies<br>
            1107 - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies<br>
            1108 - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies<br>
            1109 - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies<br>
            1110 - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies<br>
            1198 - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR<br>
            1199 - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies<br>
            1200 - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies<br>
            1202 - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies<br>
            1203 - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies<br>
            1204 - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies<br>
            1205 - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies<br>
            1206 - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies<br>
            1207 - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies<br>
            1208 - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies<br>
            1209 - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies<br>
            1210 - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies<br>
            1302 - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies<br>
            1303 - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies<br>
            1310 - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies<br>
            1311 - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies<br>
            1312 - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies<br>
            1314 - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies<br>
            1315 - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies<br>
            1400 - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies<br>
            1401 - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies<br>
            1402 - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies<br>
            1500 - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file<br>
            2001 - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering

            * `0` - All Rules
            * `1` - Validation of protocol compliance: weird request, unable to parse
            * `2` - Request too big, stored on disk and not parsed
            * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
            * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
            * `12` - Validation of protocol compliance: invalid formatted URL
            * `13` - Validation of protocol compliance: invalid POST format
            * `14` - Validation of protocol compliance: invalid POST boundary
            * `15` - Validation of protocol compliance: invalid JSON
            * `16` - Validation of protocol compliance: POST with no body
            * `17` - Possible SQL Injection attack: validation with libinjection_sql
            * `18` - Possible XSS attack: validation with libinjection_xss
            * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
            * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
            * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
            * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
            * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
            * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
            * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
            * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
            * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
            * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
            * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
            * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
            * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
            * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
            * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
            * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
            * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
            * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
            * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
            * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
            * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
            * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
            * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
            * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
            * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
            * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
            * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
            * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
            * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
            * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
            * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
            * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
            * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
            * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
            * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
            * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
            * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
            * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
            * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
            * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
            * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
            * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
            * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
            * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
            * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
            * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
            * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
            * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
            * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
            * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
            * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
        name:
          maxLength: 255
          minLength: 0
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 0
          nullable: true
          pattern: "^[^|]*$"
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/WAFExceptionPolymorphicCondition"
          minItems: 1
          type: array
        operator:
          allOf:
          - $ref: "#/components/schemas/WAFRuleOperatorEnum"
        active:
          type: boolean
        last_editor:
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
      required:
      - conditions
      - id
      - last_editor
      - last_modified
      - name
      title: WAFRule
      type: object
    WAFRuleOperatorEnum:
      description: |-
        * `regex` - regex
        * `contains` - contains
      title: WAFRuleOperatorEnum
      type: string
    WAFRuleRequest:
      additionalProperties: false
      example:
        rule_id: ""
        path: path
        name: name
        active: true
        conditions:
        - match: match
        - match: match
        operator: ""
      properties:
        rule_id:
          allOf:
          - $ref: "#/components/schemas/RuleIdEnum"
          description: |-
            0 - All Rules<br>
            1 - Validation of protocol compliance: weird request, unable to parse<br>
            2 - Request too big, stored on disk and not parsed<br>
            10 - Validation of protocol compliance: invalid HEX encoding (null bytes)<br>
            11 - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)<br>
            12 - Validation of protocol compliance: invalid formatted URL<br>
            13 - Validation of protocol compliance: invalid POST format<br>
            14 - Validation of protocol compliance: invalid POST boundary<br>
            15 - Validation of protocol compliance: invalid JSON<br>
            16 - Validation of protocol compliance: POST with no body<br>
            17 - Possible SQL Injection attack: validation with libinjection_sql<br>
            18 - Possible XSS attack: validation with libinjection_xss<br>
            1000 - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies<br>
            1001 - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies<br>
            1002 - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies<br>
            1003 - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies<br>
            1004 - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies<br>
            1005 - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies<br>
            1006 - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies<br>
            1007 - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies<br>
            1008 - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String<br>
            1009 - Possible SQL Injection attack: equal sign (=) found in Body or Query String<br>
            1010 - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies<br>
            1011 - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies<br>
            1013 - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies<br>
            1015 - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies<br>
            1016 - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies<br>
            1017 - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies<br>
            1100 - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies<br>
            1101 - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies<br>
            1102 - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies<br>
            1103 - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies<br>
            1104 - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies<br>
            1105 - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies<br>
            1106 - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies<br>
            1107 - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies<br>
            1108 - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies<br>
            1109 - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies<br>
            1110 - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies<br>
            1198 - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR<br>
            1199 - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies<br>
            1200 - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies<br>
            1202 - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies<br>
            1203 - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies<br>
            1204 - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies<br>
            1205 - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies<br>
            1206 - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies<br>
            1207 - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies<br>
            1208 - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies<br>
            1209 - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies<br>
            1210 - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies<br>
            1302 - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies<br>
            1303 - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies<br>
            1310 - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies<br>
            1311 - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies<br>
            1312 - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies<br>
            1314 - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies<br>
            1315 - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies<br>
            1400 - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies<br>
            1401 - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies<br>
            1402 - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies<br>
            1500 - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file<br>
            2001 - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering

            * `0` - All Rules
            * `1` - Validation of protocol compliance: weird request, unable to parse
            * `2` - Request too big, stored on disk and not parsed
            * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
            * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
            * `12` - Validation of protocol compliance: invalid formatted URL
            * `13` - Validation of protocol compliance: invalid POST format
            * `14` - Validation of protocol compliance: invalid POST boundary
            * `15` - Validation of protocol compliance: invalid JSON
            * `16` - Validation of protocol compliance: POST with no body
            * `17` - Possible SQL Injection attack: validation with libinjection_sql
            * `18` - Possible XSS attack: validation with libinjection_xss
            * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
            * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
            * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
            * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
            * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
            * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
            * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
            * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
            * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
            * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
            * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
            * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
            * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
            * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
            * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
            * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
            * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
            * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
            * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
            * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
            * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
            * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
            * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
            * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
            * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
            * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
            * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
            * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
            * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
            * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
            * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
            * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
            * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
            * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
            * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
            * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
            * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
            * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
            * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
            * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
            * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
            * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
            * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
            * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
            * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
            * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
            * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
            * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
            * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
            * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
            * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
        name:
          maxLength: 255
          minLength: 1
          pattern: .*
          type: string
        path:
          maxLength: 255
          minLength: 0
          nullable: true
          pattern: "^[^|]*$"
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/WAFExceptionPolymorphicConditionRequest"
          minItems: 1
          type: array
        operator:
          allOf:
          - $ref: "#/components/schemas/WAFRuleOperatorEnum"
        active:
          type: boolean
      required:
      - conditions
      - name
      title: WAFRuleRequest
      type: object
    Workload:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        active: true
        domains:
        - domains
        - domains
        workload_domain: workload_domain
        infrastructure: ""
        name: name
        workload_domain_allow_access: true
        tls: ""
        id: 0
        protocols: ""
        last_modified: 2000-01-23T04:56:07.000+00:00
        mtls:
          certificate: 1
          crl:
          - 1
          - 1
          - 1
          - 1
          - 1
          verification: null
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        infrastructure:
          allOf:
          - $ref: "#/components/schemas/InfrastructureEnum"
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSWorkload"
        protocols:
          allOf:
          - $ref: "#/components/schemas/Protocols"
        mtls:
          $ref: "#/components/schemas/MTLS"
        domains:
          items:
            type: string
          type: array
        workload_domain_allow_access:
          type: boolean
        workload_domain:
          pattern: .*
          readOnly: true
          type: string
        product_version:
          pattern: ^(custom|\d+\.\d+)$
          readOnly: true
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - workload_domain
      title: Workload
      type: object
    WorkloadDeployment:
      additionalProperties: false
      example:
        current: true
        last_editor: last_editor
        name: name
        active: true
        id: 0
        strategy:
          strategy_type: strategy_type
          attributes:
            custom_page: 1
            edge_firewall: 1
            edge_application: 5559347081229897728
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 254
          minLength: 1
          pattern: .*
          type: string
        current:
          type: boolean
        active:
          type: boolean
        strategy:
          $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyAttrs"
        last_editor:
          maxLength: 250
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - strategy
      title: WorkloadDeployment
      type: object
    WorkloadDeploymentRequest:
      additionalProperties: false
      example:
        current: true
        name: name
        active: true
        strategy:
          strategy_type: strategy_type
          attributes:
            custom_page: 1
            edge_firewall: 6
            edge_application: 738633633822310400
      properties:
        name:
          maxLength: 254
          minLength: 1
          pattern: .*
          type: string
        current:
          type: boolean
        active:
          type: boolean
        strategy:
          $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyAttrsRequest"
      required:
      - name
      - strategy
      title: WorkloadDeploymentRequest
      type: object
    WorkloadRequest:
      additionalProperties: false
      example:
        infrastructure: ""
        name: name
        active: true
        domains:
        - domains
        - domains
        workload_domain_allow_access: true
        tls: ""
        protocols: ""
        mtls:
          certificate: 1
          crl:
          - 1
          - 1
          - 1
          - 1
          - 1
          verification: null
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        infrastructure:
          allOf:
          - $ref: "#/components/schemas/InfrastructureEnum"
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSWorkloadRequest"
        protocols:
          allOf:
          - $ref: "#/components/schemas/ProtocolsRequest"
        mtls:
          $ref: "#/components/schemas/MTLSRequest"
        domains:
          items:
            minLength: 1
            type: string
          type: array
        workload_domain_allow_access:
          type: boolean
      required:
      - name
      title: WorkloadRequest
      type: object
    EdgeApplicationFunctionInstance_args:
      description: |
        Args to be accessed by the Edge Function.
        - args must be a JSON object or an array.
        - If there are no args being informed, the function default_args will be used.
      example:
        arg_01: value_01
      properties:
        arg:
          type: object
      type: object
    EdgeFunctions_default_args:
      description: |
        Args to be accessed by the Edge Function.
        - default_args must be a JSON object or an array.
        - If there are no args being informed, an empty JSON object will be used.
      example:
        arg_01: value_01
      properties:
        arg:
          type: object
      type: object
    MTLS_verification:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/VerificationEnum"
      - $ref: "#/components/schemas/NullEnum"
    ResponseBadRequestCacheSettingModulesSerializerApplication_controlsField_query_string_fields:
      oneOf:
      - items:
          type: string
        type: array
      - additionalProperties:
          items:
            type: string
          type: array
        type: object
    TLSWorkload_minimum_version:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/MinimumVersionEnum"
      - $ref: "#/components/schemas/BlankEnum"
      - $ref: "#/components/schemas/NullEnum"
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    TokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
