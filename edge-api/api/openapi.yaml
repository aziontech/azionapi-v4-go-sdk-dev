openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the edge-api
  title: edge-api
  version: 1.0.0
servers:
- url: /
paths:
  /edge_application/applications:
    get:
      description: List all Applications owned by your account.
      operationId: List Applications
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, last_editor, last_modified, active, debug, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Applications
      tags:
      - Applications
    post:
      description: Create a new Application in your account.
      operationId: Create Application
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Application
      tags:
      - Applications
  /edge_application/applications/{application_id}:
    delete:
      description: Destruction of a specific Application in your account.
      operationId: Destroy Application
      parameters:
      - description: A unique integer value identifying the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Application
      tags:
      - Applications
    get:
      description: Retrieve details of a specific Application in your account.
      operationId: Retrieve Application
      parameters:
      - description: A unique integer value identifying the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Application
      tags:
      - Applications
    patch:
      description: Update one or more fields of an existing Application without affecting
        other fields.
      operationId: Partial update Application
      parameters:
      - description: A unique integer value identifying the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedApplicationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Application
      tags:
      - Applications
    put:
      description: Update an existing Application. This replaces the entire Application
        with the new data provided.
      operationId: Update Application
      parameters:
      - description: A unique integer value identifying the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplication"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplication"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Application
      tags:
      - Applications
  /edge_application/applications/{application_id}/cache_settings:
    get:
      description: List all Cache Settings owned by your account.
      operationId: List Cache Settings
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseListCacheSettingList"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List all Applications Cache Settings
      tags:
      - Applications - Cache Settings
    post:
      description: Create a new Cache Setting in your account.
      operationId: Create Cache Setting
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CacheSettingRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Applications Cache Setting
      tags:
      - Applications - Cache Settings
  /edge_application/applications/{application_id}/cache_settings/{id}:
    delete:
      description: Destruction of a specific Cache Setting in your account.
      operationId: Destroy Cache Setting
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCacheSetting"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCacheSetting"
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Applications Cache Setting
      tags:
      - Applications - Cache Settings
    get:
      description: Retrieve details of a specific Cache Setting in your account.
      operationId: Retrieve Cache Setting
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCacheSetting"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Applications Cache Setting
      tags:
      - Applications - Cache Settings
    patch:
      description: Update one or more fields of an existing Cache Setting without
        affecting other fields.
      operationId: Partial update Cache Setting
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCacheSettingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Applications Cache Setting
      tags:
      - Applications - Cache Settings
    put:
      description: Update an existing Cache Setting. This replaces the entire Cache
        Setting with the new data provided.
      operationId: Update Cache Setting
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CacheSettingRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCacheSetting"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCacheSetting"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Applications Cache Setting
      tags:
      - Applications - Cache Settings
  /edge_application/applications/{application_id}/clone:
    post:
      description: "Create a new Application by performing a deep copy of an existing\
        \ Application, including its Cache Settings, Origins, Error Responses, Function\
        \ Instances, and Rules Engine."
      operationId: Clone Application
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneApplicationRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveApplication"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestApplication"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplication"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Clone an Application
      tags:
      - Applications
  /edge_application/applications/{application_id}/device_groups:
    get:
      description: List all Device Groups owned by your account.
      operationId: list_device_groups
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, user_agent)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationDeviceGroupsList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Applications Device Groups
      tags:
      - Applications - Device Groups
    post:
      description: Create a new Device Group in your account.
      operationId: create_device_group
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationDeviceGroupsRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Applications Device Group
      tags:
      - Applications - Device Groups
  /edge_application/applications/{application_id}/device_groups/{id}:
    delete:
      description: Destruction of a specific Device Group in your account.
      operationId: destroy_device_groups
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Applications Device Group
      tags:
      - Applications - Device Groups
    get:
      description: Retrieve details of a specific Device Group in your account.
      operationId: retrieve_device_group
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Device Group
      tags:
      - Applications - Device Groups
    patch:
      description: Update one or more fields of an existing Device Group without affecting
        other fields.
      operationId: partial_update_device_group
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedApplicationDeviceGroupsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Applications Device Group
      tags:
      - Applications - Device Groups
    put:
      description: Update an existing Device Group. This replaces the entire Device
        Group with the new data provided.
      operationId: update_device_group
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationDeviceGroupsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationDeviceGroups"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationDeviceGroups"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Applications Device Group
      tags:
      - Applications - Device Groups
  /edge_application/applications/{application_id}/functions:
    get:
      description: List all Function Instances for a specific Application owned by
        your account.
      operationId: list_application_function_instances
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, last_editor, last_modified, name, args, function, active)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationFunctionInstanceList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Function Instances
      tags:
      - Applications - Function
    post:
      description: Create a new Function Instance for a specific Application in your
        account.
      operationId: create_application_function_instance
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationFunctionInstanceRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Application Function Instance
      tags:
      - Applications - Function
  /edge_application/applications/{application_id}/functions/{function_id}:
    delete:
      description: Destroy a specific Application Function Instance in your account.
      operationId: destroy_application_function_instance
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Application Function Instance
      tags:
      - Applications - Function
    get:
      description: Retrieve details of a specific Application Function Instance in
        your account.
      operationId: retrieve_application_function_instance
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Application Function Instance
      tags:
      - Applications - Function
    patch:
      description: Update one or more fields of an existing Application Function Instance
        without affecting other fields.
      operationId: partial_update_application_function_instance
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedApplicationFunctionInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Application Function Instance
      tags:
      - Applications - Function
    put:
      description: Update an existing Application Function Instance. This replaces
        the entire Function Instance with the new data provided.
      operationId: update_application_function_instance
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationFunctionInstanceRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Edge Application Function Instance
      tags:
      - Applications - Function
  /edge_application/applications/{application_id}/request_rules:
    get:
      description: List all Rules for a specific Application owned by your account.
      operationId: edge_application_api_applications_request_rules_list
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, active, description, order, criteria, last_editor, last_modified, behaviors)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationRequestPhaseRuleEngineList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Application Request Rules
      tags:
      - Applications - Request Rules
    post:
      description: Create a new Rule for a specific Application in your account.
      operationId: edge_application_api_applications_request_rules_create
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngineRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationRequestPhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationRequestPhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Application Request Rule
      tags:
      - Applications - Request Rules
  /edge_application/applications/{application_id}/request_rules/{id}:
    delete:
      description: Destroy a specific Rule in your account.
      operationId: edge_application_api_applications_request_rules_destroy
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteApplicationRequestPhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteApplicationRequestPhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Application Request Rule
      tags:
      - Applications - Request Rules
    get:
      description: Retrieve details of a specific Rule in your account.
      operationId: edge_application_api_applications_request_rules_retrieve
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveApplicationRequestPhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Application Request Rule
      tags:
      - Applications - Request Rules
    patch:
      description: Update one or more fields of an existing Application Rule  without
        affecting other fields.
      operationId: edge_application_api_applications_request_rules_partial_update
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedApplicationRequestPhaseRuleEngineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationRequestPhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationRequestPhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Application Request Rule
      tags:
      - Applications - Request Rules
    put:
      description: Update an existing Rule. This replaces the entire Rule with the
        new data provided.
      operationId: edge_application_api_applications_request_rules_update
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngineRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationRequestPhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationRequestPhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Application Request Rule
      tags:
      - Applications - Request Rules
  /edge_application/applications/{application_id}/request_rules/order:
    put:
      description: Reoder all Rules for a specific Application owned by your account.
      operationId: edge_application_api_applications_request_rules_order_update
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: order)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngineOrderRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationRequestPhaseRuleEngineList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationRequestPhaseRuleEngineList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Ordering Application Request Rules
      tags:
      - Applications - Request Rules
  /edge_application/applications/{application_id}/response_rules:
    get:
      description: List all Rules for a specific Application owned by your account.
      operationId: edge_application_api_applications_response_rules_list
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, active, description, order, criteria, last_editor, last_modified, behaviors)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationResponsePhaseRuleEngineList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Application Response Rules
      tags:
      - Applications - Response Rules
    post:
      description: Create a new Rule for a specific Application in your account.
      operationId: edge_application_api_applications_response_rules_create
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationResponsePhaseRuleEngineRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationResponsePhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationResponsePhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Application Response Rule
      tags:
      - Applications - Response Rules
  /edge_application/applications/{application_id}/response_rules/{id}:
    delete:
      description: Destroy a specific Rule in your account.
      operationId: edge_application_api_applications_response_rules_destroy
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteApplicationResponsePhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteApplicationResponsePhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Application Response Rule
      tags:
      - Applications - Response Rules
    get:
      description: Retrieve details of a specific Rule in your account.
      operationId: edge_application_api_applications_response_rules_retrieve
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveApplicationRequestPhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Application Response Rule
      tags:
      - Applications - Response Rules
    patch:
      description: Update one or more fields of an existing Application Rule  without
        affecting other fields.
      operationId: edge_application_api_applications_response_rules_partial_update
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedApplicationResponsePhaseRuleEngineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationResponsePhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationResponsePhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Application Response Rule
      tags:
      - Applications - Response Rules
    put:
      description: Update an existing Rule. This replaces the entire Rule with the
        new data provided.
      operationId: edge_application_api_applications_response_rules_update
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationResponsePhaseRuleEngineRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseApplicationResponsePhaseRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncApplicationResponsePhaseRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Application Response Rule
      tags:
      - Applications - Response Rules
  /edge_application/applications/{application_id}/response_rules/order:
    put:
      description: Reoder all Rules for a specific Application owned by your account.
      operationId: edge_application_api_applications_response_rules_order_update
      parameters:
      - explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: order)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationResponsePhaseRuleEngineOrderRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationResponsePhaseRuleEngineList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedApplicationResponsePhaseRuleEngineList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Ordering Application Response Rules
      tags:
      - Applications - Response Rules
  /edge_connector/connectors:
    get:
      description: List all Connectors owned by your account.
      operationId: list_connectors
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: )
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedConnectorPolymorphicList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Connectors
      tags:
      - Connectors
    post:
      description: Create a new Connector in your account.
      operationId: create_connector
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectorPolymorphicRequest"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Connector
      tags:
      - Connectors
  /edge_connector/connectors/{id}:
    delete:
      description: Destruction of a specific Connector in your account.
      operationId: destroy_connector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Connector
      tags:
      - Connectors
    get:
      description: Retrieve details of a specific Connector in your account.
      operationId: retrieve_connector
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Connector
      tags:
      - Connectors
    patch:
      description: Update one or more fields of an existing Connector without affecting
        other fields.
      operationId: partial_update_connector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedConnectorPolymorphicRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Connector
      tags:
      - Connectors
    put:
      description: Update an existing Connector. This replaces the entire Connector
        with the new data provided.
      operationId: update_connector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectorPolymorphicRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseConnectorPolymorphic"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncConnectorPolymorphic"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Connector
      tags:
      - Connectors
  /edge_firewall/firewalls:
    get:
      description: List all Firewalls owned by your account.
      operationId: List Firewalls
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, debug, active, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedFirewallList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Firewalls
      tags:
      - Firewalls
    post:
      description: Create a new Firewall for your account.
      operationId: Create Firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Firewall
      tags:
      - Firewalls
  /edge_firewall/firewalls/{edge_firewall_id}/functions:
    get:
      description: List all Function Instances for a specific Firewall owned by your
        account.
      operationId: List Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, last_editor, last_modified, name, args, function, active)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedFirewallFunctionInstanceList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Firewall Function
      tags:
      - Firewalls - Function
    post:
      description: Create a new Function Instance for a specific Firewall in your
        account.
      operationId: Create Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallFunctionInstanceRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Firewall Function
      tags:
      - Firewalls - Function
  /edge_firewall/firewalls/{edge_firewall_id}/functions/{id}:
    delete:
      description: Destroy a specific Firewall Function Instance in your account.
      operationId: Destroy Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Firewall Function
      tags:
      - Firewalls - Function
    get:
      description: Retrieve details of a specific Firewall Function Instance in your
        account.
      operationId: Retrieve Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Firewall Function
      tags:
      - Firewalls - Function
    patch:
      description: Update one or more fields of an existing Firewall Function Instance
        without affecting other fields.
      operationId: Partial update Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedFirewallFunctionInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Firewall Function
      tags:
      - Firewalls - Function
    put:
      description: Update an existing Firewall Function Instance. This replaces the
        entire Function Instance with the new data provided.
      operationId: Update Firewall Function
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallFunctionInstanceRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewallFunctionInstance"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewallFunctionInstance"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Firewall Function
      tags:
      - Firewalls - Function
  /edge_firewall/firewalls/{edge_firewall_id}/request_rules:
    get:
      description: List all Rules for a specific Firewall owned by your account.
      operationId: List Firewall Rules
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, last_editor, last_modified, active, description, order, behaviors, criteria)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedFirewallRuleEngineList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Firewall Rules
      tags:
      - Firewalls - Rules Engine
    post:
      description: Create a new Rule for a specific Firewall in your account.
      operationId: Create Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRuleEngineRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Firewall Rule
      tags:
      - Firewalls - Rules Engine
  /edge_firewall/firewalls/{edge_firewall_id}/request_rules/{id}:
    delete:
      description: Destroy a specific Rule in your account.
      operationId: Destroy Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Firewall Rule
      tags:
      - Firewalls - Rules Engine
    get:
      description: Retrieve details of a specific Rule in your account.
      operationId: Retrieve Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Firewall Rule
      tags:
      - Firewalls - Rules Engine
    patch:
      description: Update one or more fields of an existing Firewall Rule without
        affecting other fields.
      operationId: Partial update Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedFirewallRuleEngineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Firewall Rule
      tags:
      - Firewalls - Rules Engine
    put:
      description: Update an existing Rule. This replaces the entire Rule with the
        new data provided.
      operationId: Update Firewall Rule
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRuleEngineRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewallRuleEngine"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewallRuleEngine"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Firewall Rule
      tags:
      - Firewalls - Rules Engine
  /edge_firewall/firewalls/{edge_firewall_id}/request_rules/order:
    put:
      description: Reoder all Rules for a specific Firewall owned by your account.
      operationId: Order Firewall Rules
      parameters:
      - explode: false
        in: path
        name: edge_firewall_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: order)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRuleEngineOrderRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedFirewallRuleEngineList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedFirewallRuleEngineList"
          description: ""
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Ordering Firewall Rules
      tags:
      - Firewalls - Rules Engine
  /edge_firewall/firewalls/{id}:
    delete:
      description: Destruction of a specific Firewall in your account.
      operationId: Destroy Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Firewall
      tags:
      - Firewalls
    get:
      description: Retrieve details from a specific Firewall in your account.
      operationId: Retrieve Firewall
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from an Firewall
      tags:
      - Firewalls
    patch:
      description: Update one or more fields of an existing Firewall without affecting
        other fields.
      operationId: Partial update Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedFirewallRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Firewall
      tags:
      - Firewalls
    put:
      description: Update an existing Firewall. This replaces the entire Firewall
        with the new data provided.
      operationId: Update Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Firewall
      tags:
      - Firewalls
  /edge_firewall/firewalls/{id}/clone:
    post:
      description: "Create a new Firewall by performing a deep copy of an existing\
        \ Firewall, including its Function Instances and Rules Engine."
      operationId: Clone Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneFirewallRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFirewall"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFirewall"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Clone an Firewall
      tags:
      - Firewalls
  /edge_firewall/wafs:
    get:
      description: List all WAFs owned by your account.
      operationId: List WAFs
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id, active, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWAFList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Web Application Firewalls (WAFs)
      tags:
      - WAFs
    post:
      description: Create a new WAF for your account.
      operationId: Create WAF
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Web Application Firewall (WAF)
      tags:
      - WAFs
  /edge_firewall/wafs/{waf_id}:
    delete:
      description: Destruction of a specific WAF in your account.
      operationId: Destroy WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Web Application Firewall (WAF)
      tags:
      - WAFs
    get:
      description: Retrieve details from a specific WAF in your account.
      operationId: Retrieve WAF
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a Web Application Firewall (WAF)
      tags:
      - WAFs
    patch:
      description: Update one or more fields of an existing WAF without affecting
        other fields.
      operationId: Partial update WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWAFRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Web Application Firewall (WAF)
      tags:
      - WAFs
    put:
      description: Update an existing WAF. This replaces the entire WAF with the new
        data provided.
      operationId: Update WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Web Application Firewall (WAF)
      tags:
      - WAFs
  /edge_firewall/wafs/{waf_id}/clone:
    post:
      description: "Create a new WAF by performing a deep copy of an existing WAF,\
        \ including its Exceptions."
      operationId: Clone WAF
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneWAFRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAF"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAF"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Clone a Web Application Firewall (WAF)
      tags:
      - WAFs
  /edge_firewall/wafs/{waf_id}/exceptions:
    get:
      description: List all Exceptions associated with a specific WAF owned by your
        account.
      operationId: List WAF Exceptions
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: rule_id, name, path, conditions, operator, active, last_editor, last_modified)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWAFRuleList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Exceptions for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    post:
      description: Create a new Exception for a specific WAF in your account.
      operationId: Create WAF Exception
      parameters:
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRuleRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Exception for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
  /edge_firewall/wafs/{waf_id}/exceptions/{exception_id}:
    delete:
      description: Remove a specific Exception from a WAF in your account.
      operationId: Destroy WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Exception from a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    get:
      description: Retrieve details of a specific Exception from a WAF in your account.
      operationId: Retrieve WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Exception from a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    patch:
      description: Update one or more fields of an existing exception for a WAF without
        affecting other fields.
      operationId: Partial Update WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWAFRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Exception for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
    put:
      description: Update an existing Exception for a WAF. This replaces the entire
        rule with the new data provided.
      operationId: Update WAF Exception
      parameters:
      - explode: false
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: waf_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WAFRuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWAFRule"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWAFRule"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Exception for a Web Application Firewall (WAF)
      tags:
      - WAFs - Exceptions
  /edge_functions/functions:
    get:
      description: List all Functions owned by your account.
      operationId: List Functions
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, language, json_args, runtime_environment, active, last_editor, last_modified, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEdgeFunctionsList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Functions
      tags:
      - Functions
    post:
      description: Create a new Function in your account.
      operationId: Create Function
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFunctionsRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFunctionsDoc"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFunctionsDoc"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Function
      tags:
      - Functions
  /edge_functions/functions/{id}:
    delete:
      description: Destroy a specific Function in your account.
      operationId: Destroy Function
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteFunctionsDoc"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteFunctionsDoc"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Function
      tags:
      - Functions
    get:
      description: Retrieve details of a specific Function in your account.
      operationId: Retrieve Function
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveFunctionsDoc"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Function
      tags:
      - Functions
    patch:
      description: Update one or more fields of an existing Function without affecting
        other fields.
      operationId: Partial update Function
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEdgeFunctionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFunctionsDoc"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFunctionsDoc"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Function
      tags:
      - Functions
    put:
      description: Update an existing Function. This replaces the entire Function
        with the new data provided.
      operationId: Update Function
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeFunctionsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseFunctionsDoc"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncFunctionsDoc"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Function
      tags:
      - Functions
  /workspace/custom_pages:
    get:
      description: List all Custom Pages owned by your account.
      operationId: list_custom_pages
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, last_editor, last_modified, active, product_version, pages)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCustomPageList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Custom Pages
      tags:
      - Custom Pages
    post:
      description: Create a new Custom Page in your account.
      operationId: create_custom_page
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomPageRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomPage"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCustomPage"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Custom Page
      tags:
      - Custom Pages
  /workspace/custom_pages/{id}:
    delete:
      description: Destruction of a specific Custom Page in your account.
      operationId: destroy_custom_page
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteCustomPage"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCustomPage"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Custom Page
      tags:
      - Custom Pages
    get:
      description: Retrieve details of a specific Custom Page in your account.
      operationId: retrieve_custom_page
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCustomPage"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Custom Page
      tags:
      - Custom Pages
    patch:
      description: Update one or more fields of an existing Custom Page without affecting
        other fields.
      operationId: partial_update_custom_page
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCustomPageRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomPage"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCustomPage"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Custom Page
      tags:
      - Custom Pages
    put:
      description: Update an existing Custom Page. This replaces the entire Custom
        Page with the new data provided.
      operationId: update_custom_page
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomPageRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCustomPage"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCustomPage"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Custom Page
      tags:
      - Custom Pages
  /workspace/network_lists:
    get:
      description: List all Network Lists owned by your account.
      operationId: list_network_lists
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, type, last_editor, last_modified, active)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedNetworkListList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Network Lists
      tags:
      - Network Lists
    post:
      description: Create a new Network List in your account.
      operationId: create_network_list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkListDetailRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Network List
      tags:
      - Network Lists
  /workspace/network_lists/{id}:
    delete:
      description: Destroy a specific Network List in your account.
      operationId: destroy_network_list
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Network List
      tags:
      - Network Lists
    get:
      description: Retrieve details of a specific Network List in your account.
      operationId: retrieve_network_list
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by IPv4. Only applicable for network lists of type 'ip_cidr'.
        explode: true
        in: query
        name: ipv4
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter by IPv6. Only applicable for network lists of type 'ip_cidr'.
        explode: true
        in: query
        name: ipv6
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Network List
      tags:
      - Network Lists
    patch:
      description: Update one or more fields of an existing Network List without affecting
        other fields.
      operationId: partial_update_network_list
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedNetworkListDetailRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Network List
      tags:
      - Network Lists
    put:
      description: Update an existing Network List. This replaces the entire Network
        List with the new data provided.
      operationId: update_network_list
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkListDetailRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseNetworkListDetail"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncNetworkListDetail"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Network List
      tags:
      - Network Lists
  /workspace/purge/{purge_type}:
    post:
      description: Create a new Purge Request in your account.
      operationId: Create Purge Request
      parameters:
      - description: "type of purge: URL, Wildcard or Cachekey"
        explode: false
        in: path
        name: purge_type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurgeInputRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponsePurgeInput"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncPurgeInput"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Purge Request
      tags:
      - Purge
  /workspace/workloads:
    get:
      description: List all Workloads owned by your account.
      operationId: List Workloads
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, last_editor, last_modified, active, workload_domain_allow_access, workload_domain, infrastructure, domains, product_version)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWorkloadList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Workloads
      tags:
      - Workloads
    post:
      description: Create a new Workload in your account.
      operationId: Create Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkload"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create an Workload
      tags:
      - Workloads
  /workspace/workloads/{workload_id}:
    delete:
      description: Destruction of a specific Workload in your account.
      operationId: Destroy Workload
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy an Workload
      tags:
      - Workloads
    get:
      description: Retrieve details of a specific Workload in your account.
      operationId: Retrieve Workload
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of an Workload
      tags:
      - Workloads
    patch:
      description: Update one or more fields of an existing Workload without affecting
        other fields.
      operationId: Partial update Workload
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWorkloadRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkload"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update an Workload
      tags:
      - Workloads
    put:
      description: Update an existing Workload. This replaces the entire Workload
        with the new data provided.
      operationId: Update Workload
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkload"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkload"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update an Workload
      tags:
      - Workloads
  /workspace/workloads/{workload_id}/deployments:
    get:
      description: List all Workload Deployments related to your account's Workloads.
      operationId: List Workload Deployments
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, active, last_editor, last_modified, current)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWorkloadDeploymentList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Workload Deployments
      tags:
      - Workload Deployments
    post:
      description: Create a new Workload Deployment in your account.
      operationId: Create Workload Deployment
      parameters:
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadDeploymentRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestWorkloadDeployment"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Workload Deployment
      tags:
      - Workload Deployments
  /workspace/workloads/{workload_id}/deployments/{deployment_id}:
    delete:
      description: Destruction of a specific Workload Deployment in your account.
      operationId: Destroy Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWorkloadDeployment"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteWorkloadDeployment"
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestWorkloadDeployment"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Workload Deployment
      tags:
      - Workload Deployments
    get:
      description: Retrieve details of a specific Workload Deployment in your account.
      operationId: Retrieve Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveWorkloadDeployment"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Workload Deployment
      tags:
      - Workload Deployments
    patch:
      description: Update one or more fields of an existing Workload Deployment without
        affecting other fields.
      operationId: Partial update Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWorkloadDeploymentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkloadDeployment"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Workload Deployment
      tags:
      - Workload Deployments
    put:
      description: Update an existing Workload Deployment. This replaces the entire
        Workload Deployment with the new data provided.
      operationId: Update Workload Deployment
      parameters:
      - explode: false
        in: path
        name: deployment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: workload_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkloadDeploymentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseWorkloadDeployment"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncWorkloadDeployment"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Workload Deployment
      tags:
      - Workload Deployments
components:
  schemas:
    AWS4HMAC:
      additionalProperties: false
      properties:
        type:
          description: '* `aws4_hmac_sha256` - AWS for HMAC - SHA256'
          title: AWS4HMACTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/AWS4HMACAttributes"
      required:
      - attributes
      - type
      title: AWS4HMAC
      type: object
    AWS4HMACAttributes:
      additionalProperties: false
      properties:
        region:
          maxLength: 255
          minLength: 1
          type: string
        service:
          maxLength: 255
          minLength: 1
          type: string
        access_key:
          maxLength: 255
          minLength: 1
          type: string
        secret_key:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - access_key
      - region
      - secret_key
      title: AWS4HMACAttributes
      type: object
    AWS4HMACAttributesRequest:
      additionalProperties: false
      properties:
        region:
          maxLength: 255
          minLength: 1
          type: string
        service:
          maxLength: 255
          minLength: 1
          type: string
        access_key:
          maxLength: 255
          minLength: 1
          type: string
        secret_key:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - access_key
      - region
      - secret_key
      title: AWS4HMACAttributesRequest
      type: object
    AWS4HMACRequest:
      additionalProperties: false
      properties:
        type:
          description: '* `aws4_hmac_sha256` - AWS for HMAC - SHA256'
          title: AWS4HMACTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/AWS4HMACAttributesRequest"
      required:
      - attributes
      - type
      title: AWS4HMACRequest
      type: object
    AWS4HMACTypeEnum:
      description: '* `aws4_hmac_sha256` - AWS for HMAC - SHA256'
      title: AWS4HMACTypeEnum
      type: string
    Address:
      additionalProperties: false
      example:
        https_port: 9607
        address: address
        active: true
        http_port: 39501
        modules: ""
      properties:
        active:
          description: Indicates if the address is active for use
          type: boolean
        address:
          description: IPv4/IPv6 address or CNAME to resolve
          maxLength: 255
          minLength: 1
          type: string
        http_port:
          description: Port number for HTTP connections
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        https_port:
          description: Port number for HTTPS connections
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        modules:
          allOf:
          - $ref: "#/components/schemas/AddressModules"
          nullable: true
      required:
      - address
      title: Address
      type: object
    AddressLoadBalancerModule:
      additionalProperties: false
      properties:
        server_role:
          allOf:
          - $ref: "#/components/schemas/ServerRoleEnum"
          description: |-
            Role of the address in load balancing

            * `primary` - Primary
            * `backup` - Backup
        weight:
          description: Weight used in load balancing strategy
          format: int64
          maximum: 100
          minimum: 1
          type: integer
      title: AddressLoadBalancerModule
      type: object
    AddressLoadBalancerModuleRequest:
      additionalProperties: false
      properties:
        server_role:
          allOf:
          - $ref: "#/components/schemas/ServerRoleEnum"
          description: |-
            Role of the address in load balancing

            * `primary` - Primary
            * `backup` - Backup
        weight:
          description: Weight used in load balancing strategy
          format: int64
          maximum: 100
          minimum: 1
          type: integer
      title: AddressLoadBalancerModuleRequest
      type: object
    AddressModules:
      additionalProperties: false
      properties:
        load_balancer:
          $ref: "#/components/schemas/AddressLoadBalancerModule"
      title: AddressModules
      type: object
    AddressModulesRequest:
      additionalProperties: false
      properties:
        load_balancer:
          $ref: "#/components/schemas/AddressLoadBalancerModuleRequest"
      title: AddressModulesRequest
      type: object
    AddressRequest:
      additionalProperties: false
      example:
        https_port: 39501
        address: address
        active: true
        http_port: 5249
        modules: ""
      properties:
        active:
          description: Indicates if the address is active for use
          type: boolean
        address:
          description: IPv4/IPv6 address or CNAME to resolve
          maxLength: 255
          minLength: 1
          type: string
        http_port:
          description: Port number for HTTP connections
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        https_port:
          description: Port number for HTTPS connections
          format: int64
          maximum: 65535
          minimum: 1
          type: integer
        modules:
          allOf:
          - $ref: "#/components/schemas/AddressModulesRequest"
          nullable: true
      required:
      - address
      title: AddressRequest
      type: object
    Application:
      additionalProperties: false
      example:
        product_version: product_version
        debug: true
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        modules:
          edge_cache: ""
          application_accelerator: ""
          functions: ""
          tiered_cache: ""
          image_processor: ""
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 100
          minLength: 1
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        modules:
          $ref: "#/components/schemas/ApplicationModules"
        active:
          type: boolean
        debug:
          type: boolean
        product_version:
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: Application
      type: object
    ApplicationAcceleratorModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: ApplicationAcceleratorModule
      type: object
    ApplicationAcceleratorModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: ApplicationAcceleratorModuleRequest
      type: object
    ApplicationDeviceGroups:
      additionalProperties: false
      example:
        name: name
        id: 0
        user_agent: user_agent
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        user_agent:
          description: Enter a valid regular expression pattern to identify user agents.
          maxLength: 512
          minLength: 1
          type: string
      required:
      - id
      - name
      - user_agent
      title: ApplicationDeviceGroups
      type: object
    ApplicationDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        user_agent:
          description: Enter a valid regular expression pattern to identify user agents.
          maxLength: 512
          minLength: 1
          type: string
      required:
      - name
      - user_agent
      title: ApplicationDeviceGroupsRequest
      type: object
    ApplicationFunctionInstance:
      additionalProperties: false
      description: Serializer for Application Function Instances
      example:
        args: ""
        function: 5559347081229897728
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 100
          minLength: 1
          type: string
        args: {}
        function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
        last_editor:
          maxLength: 250
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - function
      - id
      - last_editor
      - last_modified
      - name
      title: ApplicationFunctionInstance
      type: object
    ApplicationFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Application Function Instances
      example:
        args: ""
        function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        args: {}
        function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      required:
      - function
      - name
      title: ApplicationFunctionInstanceRequest
      type: object
    ApplicationModules:
      additionalProperties: false
      example:
        edge_cache: ""
        application_accelerator: ""
        functions: ""
        tiered_cache: ""
        image_processor: ""
      properties:
        edge_cache:
          allOf:
          - $ref: "#/components/schemas/CacheModule"
        functions:
          allOf:
          - $ref: "#/components/schemas/EdgeFunctionModule"
        application_accelerator:
          allOf:
          - $ref: "#/components/schemas/ApplicationAcceleratorModule"
        image_processor:
          allOf:
          - $ref: "#/components/schemas/ImageProcessorModule"
        tiered_cache:
          allOf:
          - $ref: "#/components/schemas/TieredCacheModule"
      title: ApplicationModules
      type: object
    ApplicationModulesRequest:
      additionalProperties: false
      example:
        edge_cache: ""
        application_accelerator: ""
        functions: ""
        tiered_cache: ""
        image_processor: ""
      properties:
        edge_cache:
          allOf:
          - $ref: "#/components/schemas/CacheModuleRequest"
        functions:
          allOf:
          - $ref: "#/components/schemas/EdgeFunctionModuleRequest"
        application_accelerator:
          allOf:
          - $ref: "#/components/schemas/ApplicationAcceleratorModuleRequest"
        image_processor:
          allOf:
          - $ref: "#/components/schemas/ImageProcessorModuleRequest"
        tiered_cache:
          allOf:
          - $ref: "#/components/schemas/TieredCacheModuleRequest"
      title: ApplicationModulesRequest
      type: object
    ApplicationRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          edge_cache: ""
          application_accelerator: ""
          functions: ""
          tiered_cache: ""
          image_processor: ""
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        modules:
          $ref: "#/components/schemas/ApplicationModulesRequest"
        active:
          type: boolean
        debug:
          type: boolean
      required:
      - name
      title: ApplicationRequest
      type: object
    ApplicationRequestPhaseRuleEngine:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        last_editor: last_editor
        name: name
        active: true
        description: description
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        order: 119
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionField"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviors"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
        order:
          format: int64
          maximum: 199
          minimum: 0
          type: integer
        last_editor:
          maxLength: 255
          nullable: true
          type: string
        last_modified:
          format: date-time
          nullable: true
          type: string
      required:
      - behaviors
      - criteria
      - id
      - last_editor
      - last_modified
      - name
      - order
      title: ApplicationRequestPhaseRuleEngine
      type: object
    ApplicationRequestPhaseRuleEngineOrderRequest:
      additionalProperties: false
      example:
        order:
        - 738633633822310400
        - 738633633822310400
      properties:
        order:
          items:
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          type: array
      required:
      - order
      title: ApplicationRequestPhaseRuleEngineOrderRequest
      type: object
    ApplicationRequestPhaseRuleEngineRequest:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsRequest"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
      required:
      - behaviors
      - criteria
      - name
      title: ApplicationRequestPhaseRuleEngineRequest
      type: object
    ApplicationResponsePhaseRuleEngine:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        last_editor: last_editor
        name: name
        active: true
        description: description
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        order: 119
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionField"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviors"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
        order:
          format: int64
          maximum: 199
          minimum: 0
          type: integer
        last_editor:
          maxLength: 255
          nullable: true
          type: string
        last_modified:
          format: date-time
          nullable: true
          type: string
      required:
      - behaviors
      - criteria
      - id
      - last_editor
      - last_modified
      - name
      - order
      title: ApplicationResponsePhaseRuleEngine
      type: object
    ApplicationResponsePhaseRuleEngineOrderRequest:
      additionalProperties: false
      example:
        order:
        - 738633633822310400
        - 738633633822310400
      properties:
        order:
          items:
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          type: array
      required:
      - order
      title: ApplicationResponsePhaseRuleEngineOrderRequest
      type: object
    ApplicationResponsePhaseRuleEngineRequest:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsRequest"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
      required:
      - behaviors
      - criteria
      - name
      title: ApplicationResponsePhaseRuleEngineRequest
      type: object
    ApplicationRuleEngineAddHeader:
      additionalProperties: true
      description: Add header
      properties:
        type:
          description: '* `add_request_header` - add_request_header'
          title: ApplicationRuleEngineAddHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineAddHeaderAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineAddHeader
      type: object
    ApplicationRuleEngineAddHeaderAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineAddHeaderAttributes
      type: object
    ApplicationRuleEngineAddHeaderAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineAddHeaderAttributesRequest
      type: object
    ApplicationRuleEngineAddHeaderRequest:
      additionalProperties: true
      description: Add header
      properties:
        type:
          description: '* `add_request_header` - add_request_header'
          title: ApplicationRuleEngineAddHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineAddHeaderAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineAddHeaderRequest
      type: object
    ApplicationRuleEngineAddHeaderTypeEnum:
      description: '* `add_request_header` - add_request_header'
      title: ApplicationRuleEngineAddHeaderTypeEnum
      type: string
    ApplicationRuleEngineAddRequestCookie:
      additionalProperties: true
      description: Add request cookie
      properties:
        type:
          description: '* `add_request_cookie` - add_request_cookie'
          title: ApplicationRuleEngineAddRequestCookieTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineAddRequestCookieAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineAddRequestCookie
      type: object
    ApplicationRuleEngineAddRequestCookieAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineAddRequestCookieAttributes
      type: object
    ApplicationRuleEngineAddRequestCookieAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineAddRequestCookieAttributesRequest
      type: object
    ApplicationRuleEngineAddRequestCookieRequest:
      additionalProperties: true
      description: Add request cookie
      properties:
        type:
          description: '* `add_request_cookie` - add_request_cookie'
          title: ApplicationRuleEngineAddRequestCookieTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineAddRequestCookieAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineAddRequestCookieRequest
      type: object
    ApplicationRuleEngineAddRequestCookieTypeEnum:
      description: '* `add_request_cookie` - add_request_cookie'
      title: ApplicationRuleEngineAddRequestCookieTypeEnum
      type: string
    ApplicationRuleEngineAddResponseHeader:
      additionalProperties: true
      description: Add response header
      properties:
        type:
          description: '* `add_response_header` - add_response_header'
          title: ApplicationRuleEngineAddResponseHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineAddResponseHeaderAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineAddResponseHeader
      type: object
    ApplicationRuleEngineAddResponseHeaderAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineAddResponseHeaderAttributes
      type: object
    ApplicationRuleEngineAddResponseHeaderAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineAddResponseHeaderAttributesRequest
      type: object
    ApplicationRuleEngineAddResponseHeaderRequest:
      additionalProperties: true
      description: Add response header
      properties:
        type:
          description: '* `add_response_header` - add_response_header'
          title: ApplicationRuleEngineAddResponseHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineAddResponseHeaderAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineAddResponseHeaderRequest
      type: object
    ApplicationRuleEngineAddResponseHeaderTypeEnum:
      description: '* `add_response_header` - add_response_header'
      title: ApplicationRuleEngineAddResponseHeaderTypeEnum
      type: string
    ApplicationRuleEngineCaptureMatchGroups:
      additionalProperties: true
      description: Capture match groups
      properties:
        type:
          description: '* `capture_match_groups` - capture_match_groups'
          title: ApplicationRuleEngineCaptureMatchGroupsTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineCaptureMatchGroupsAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineCaptureMatchGroups
      type: object
    ApplicationRuleEngineCaptureMatchGroupsAttributes:
      additionalProperties: true
      properties:
        subject:
          maxLength: 50
          minLength: 4
          type: string
        regex:
          maxLength: 255
          minLength: 1
          type: string
        captured_array:
          maxLength: 10
          minLength: 1
          type: string
      required:
      - captured_array
      - regex
      - subject
      title: ApplicationRuleEngineCaptureMatchGroupsAttributes
      type: object
    ApplicationRuleEngineCaptureMatchGroupsAttributesRequest:
      additionalProperties: true
      properties:
        subject:
          maxLength: 50
          minLength: 4
          type: string
        regex:
          maxLength: 255
          minLength: 1
          type: string
        captured_array:
          maxLength: 10
          minLength: 1
          type: string
      required:
      - captured_array
      - regex
      - subject
      title: ApplicationRuleEngineCaptureMatchGroupsAttributesRequest
      type: object
    ApplicationRuleEngineCaptureMatchGroupsRequest:
      additionalProperties: true
      description: Capture match groups
      properties:
        type:
          description: '* `capture_match_groups` - capture_match_groups'
          title: ApplicationRuleEngineCaptureMatchGroupsTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineCaptureMatchGroupsAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineCaptureMatchGroupsRequest
      type: object
    ApplicationRuleEngineCaptureMatchGroupsTypeEnum:
      description: '* `capture_match_groups` - capture_match_groups'
      title: ApplicationRuleEngineCaptureMatchGroupsTypeEnum
      type: string
    ApplicationRuleEngineFilterHeader:
      additionalProperties: true
      description: Filter header
      properties:
        type:
          description: '* `filter_request_header` - filter_request_header'
          title: ApplicationRuleEngineFilterHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineFilterHeaderAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineFilterHeader
      type: object
    ApplicationRuleEngineFilterHeaderAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineFilterHeaderAttributes
      type: object
    ApplicationRuleEngineFilterHeaderAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineFilterHeaderAttributesRequest
      type: object
    ApplicationRuleEngineFilterHeaderRequest:
      additionalProperties: true
      description: Filter header
      properties:
        type:
          description: '* `filter_request_header` - filter_request_header'
          title: ApplicationRuleEngineFilterHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineFilterHeaderAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineFilterHeaderRequest
      type: object
    ApplicationRuleEngineFilterHeaderTypeEnum:
      description: '* `filter_request_header` - filter_request_header'
      title: ApplicationRuleEngineFilterHeaderTypeEnum
      type: string
    ApplicationRuleEngineFilterRequestCookie:
      additionalProperties: true
      description: Filter request cookie
      properties:
        type:
          description: '* `filter_request_cookie` - filter_request_cookie'
          title: ApplicationRuleEngineFilterRequestCookieTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineFilterRequestCookieAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineFilterRequestCookie
      type: object
    ApplicationRuleEngineFilterRequestCookieAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineFilterRequestCookieAttributes
      type: object
    ApplicationRuleEngineFilterRequestCookieAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineFilterRequestCookieAttributesRequest
      type: object
    ApplicationRuleEngineFilterRequestCookieRequest:
      additionalProperties: true
      description: Filter request cookie
      properties:
        type:
          description: '* `filter_request_cookie` - filter_request_cookie'
          title: ApplicationRuleEngineFilterRequestCookieTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineFilterRequestCookieAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineFilterRequestCookieRequest
      type: object
    ApplicationRuleEngineFilterRequestCookieTypeEnum:
      description: '* `filter_request_cookie` - filter_request_cookie'
      title: ApplicationRuleEngineFilterRequestCookieTypeEnum
      type: string
    ApplicationRuleEngineFilterResponseHeader:
      additionalProperties: true
      description: Filter header
      properties:
        type:
          description: '* `filter_response_header` - filter_response_header'
          title: ApplicationRuleEngineFilterResponseHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineFilterResponseHeaderAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineFilterResponseHeader
      type: object
    ApplicationRuleEngineFilterResponseHeaderAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineFilterResponseHeaderAttributes
      type: object
    ApplicationRuleEngineFilterResponseHeaderAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineFilterResponseHeaderAttributesRequest
      type: object
    ApplicationRuleEngineFilterResponseHeaderRequest:
      additionalProperties: true
      description: Filter header
      properties:
        type:
          description: '* `filter_response_header` - filter_response_header'
          title: ApplicationRuleEngineFilterResponseHeaderTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineFilterResponseHeaderAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineFilterResponseHeaderRequest
      type: object
    ApplicationRuleEngineFilterResponseHeaderTypeEnum:
      description: '* `filter_response_header` - filter_response_header'
      title: ApplicationRuleEngineFilterResponseHeaderTypeEnum
      type: string
    ApplicationRuleEngineNoArgs:
      additionalProperties: true
      description: Behaviors without arguments
      properties:
        type:
          description: |-
            * `deny` - deny
            * `no_content` - no_content
            * `deliver` - deliver
            * `finish_request_phase` - finish_request_phase
            * `forward_cookies` - forward_cookies
            * `optimize_images` - optimize_images
            * `bypass_cache` - bypass_cache
            * `enable_gzip` - enable_gzip
            * `redirect_http_to_https` - redirect_http_to_https
          title: ApplicationRuleEngineNoArgsTypeEnum
          type: string
      required:
      - type
      title: ApplicationRuleEngineNoArgs
      type: object
    ApplicationRuleEngineNoArgsRequest:
      additionalProperties: true
      description: Behaviors without arguments
      properties:
        type:
          description: |-
            * `deny` - deny
            * `no_content` - no_content
            * `deliver` - deliver
            * `finish_request_phase` - finish_request_phase
            * `forward_cookies` - forward_cookies
            * `optimize_images` - optimize_images
            * `bypass_cache` - bypass_cache
            * `enable_gzip` - enable_gzip
            * `redirect_http_to_https` - redirect_http_to_https
          title: ApplicationRuleEngineNoArgsTypeEnum
          type: string
      required:
      - type
      title: ApplicationRuleEngineNoArgsRequest
      type: object
    ApplicationRuleEngineNoArgsTypeEnum:
      description: |-
        * `deny` - deny
        * `no_content` - no_content
        * `deliver` - deliver
        * `finish_request_phase` - finish_request_phase
        * `forward_cookies` - forward_cookies
        * `optimize_images` - optimize_images
        * `bypass_cache` - bypass_cache
        * `enable_gzip` - enable_gzip
        * `redirect_http_to_https` - redirect_http_to_https
      title: ApplicationRuleEngineNoArgsTypeEnum
      type: string
    ApplicationRuleEngineRequestPhaseBehaviors:
      additionalProperties: true
      discriminator:
        mapping:
          deny: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          no_content: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          deliver: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          finish_request_phase: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          redirect_to_301: "#/components/schemas/ApplicationRequestPhaseBehaviorWithArgs"
          redirect_to_302: "#/components/schemas/ApplicationRequestPhaseBehaviorWithArgs"
          forward_cookies: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          optimize_images: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          bypass_cache: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          enable_gzip: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          filter_request_cookie: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie"
          run_function: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction"
          set_origin: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin"
          redirect_http_to_https: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
          set_connector: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector"
          set_cache_policy: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy"
          rewrite_request: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest"
          add_request_header: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader"
          filter_request_header: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader"
          capture_match_groups: "#/components/schemas/ApplicationRequestPhaseBehaviorCaptureMatchGroups"
          add_request_cookie: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgs"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorWithArgs"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorCaptureMatchGroups"
      title: ApplicationRuleEngineRequestPhaseBehaviors
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineAddHeader"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader
    ApplicationRequestPhaseBehaviorAddHeaderRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineAddHeaderRequest"
      title: ApplicationRequestPhaseBehaviorAddHeaderRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineAddRequestCookie"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie
    ApplicationRequestPhaseBehaviorAddRequestCookieRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineAddRequestCookieRequest"
      title: ApplicationRequestPhaseBehaviorAddRequestCookieRequest
    ApplicationRequestPhaseBehaviorCaptureMatchGroups:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineCaptureMatchGroupsRequest"
      title: ApplicationRequestPhaseBehaviorCaptureMatchGroups
    ApplicationRequestPhaseBehaviorCaptureMatchGroupsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineCaptureMatchGroupsRequest"
      title: ApplicationRequestPhaseBehaviorCaptureMatchGroupsRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineFilterHeader"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader
    ApplicationRequestPhaseBehaviorFilterHeaderRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineFilterHeaderRequest"
      title: ApplicationRequestPhaseBehaviorFilterHeaderRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineFilterRequestCookie"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie
    ApplicationRequestPhaseBehaviorFilterRequestCookieRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineFilterRequestCookieRequest"
      title: ApplicationRequestPhaseBehaviorFilterRequestCookieRequest
    ApplicationRequestPhaseBehaviorWithoutArgs:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineNoArgs"
      example:
        type: type
      title: ApplicationRequestPhaseBehaviorWithoutArgs
    ApplicationRequestPhaseBehaviorWithoutArgsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineNoArgs"
      example:
        type: type
      title: ApplicationRequestPhaseBehaviorWithoutArgsRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineRewriteRequest"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest
    ApplicationRequestPhaseBehaviorRewriteRequestRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineRewriteRequestRequest"
      title: ApplicationRequestPhaseBehaviorRewriteRequestRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineRunFunction"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction
    ApplicationRequestPhaseBehaviorRunFunctionRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionRequest"
      title: ApplicationRequestPhaseBehaviorRunFunctionRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetCachePolicy"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy
    ApplicationRequestPhaseBehaviorSetCachePolicyRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetCachePolicyRequest"
      title: ApplicationRequestPhaseBehaviorSetCachePolicyRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetConnector"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector
    ApplicationRequestPhaseBehaviorSetConnectorRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetConnectorRequest"
      title: ApplicationRequestPhaseBehaviorSetConnectorRequest
    ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetOrigin"
      title: ApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin
    ApplicationRequestPhaseBehaviorSetOriginRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetOriginRequest"
      title: ApplicationRequestPhaseBehaviorSetOriginRequest
    ApplicationRequestPhaseBehaviorWithArgs:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineString"
      title: ApplicationRequestPhaseBehaviorWithArgs
    ApplicationRequestPhaseBehaviorWithArgsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineString"
      title: ApplicationRequestPhaseBehaviorWithArgsRequest
    ApplicationRuleEngineRequestPhaseBehaviorsRequest:
      additionalProperties: true
      discriminator:
        mapping:
          deny: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          no_content: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          deliver: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          finish_request_phase: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          redirect_to_301: "#/components/schemas/ApplicationRequestPhaseBehaviorWithArgsRequest"
          redirect_to_302: "#/components/schemas/ApplicationRequestPhaseBehaviorWithArgsRequest"
          forward_cookies: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          optimize_images: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          bypass_cache: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          enable_gzip: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          filter_request_cookie: "#/components/schemas/ApplicationRequestPhaseBehaviorFilterRequestCookieRequest"
          run_function: "#/components/schemas/ApplicationRequestPhaseBehaviorRunFunctionRequest"
          set_origin: "#/components/schemas/ApplicationRequestPhaseBehaviorSetOriginRequest"
          redirect_http_to_https: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
          set_connector: "#/components/schemas/ApplicationRequestPhaseBehaviorSetConnectorRequest"
          set_cache_policy: "#/components/schemas/ApplicationRequestPhaseBehaviorSetCachePolicyRequest"
          rewrite_request: "#/components/schemas/ApplicationRequestPhaseBehaviorRewriteRequestRequest"
          add_request_header: "#/components/schemas/ApplicationRequestPhaseBehaviorAddHeaderRequest"
          filter_request_header: "#/components/schemas/ApplicationRequestPhaseBehaviorFilterHeaderRequest"
          capture_match_groups: "#/components/schemas/ApplicationRequestPhaseBehaviorCaptureMatchGroupsRequest"
          add_request_cookie: "#/components/schemas/ApplicationRequestPhaseBehaviorAddRequestCookieRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorWithoutArgsRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorWithArgsRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorCaptureMatchGroupsRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorAddHeaderRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorAddRequestCookieRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorFilterHeaderRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorFilterRequestCookieRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorRewriteRequestRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorRunFunctionRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorSetCachePolicyRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorSetConnectorRequest"
      - $ref: "#/components/schemas/ApplicationRequestPhaseBehaviorSetOriginRequest"
      title: ApplicationRuleEngineRequestPhaseBehaviorsRequest
    ApplicationRuleEngineRequestPhaseBehaviorsShared:
      additionalProperties: true
      description: |-
        Polymorphic serializer base class.

        Note that the discriminator field must exist at the same depth as the mapped
        serializer fields for the OpenAPI introspection. See
        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for
        more information. As such, it's not possible to define something like:

        {
            "object_type": "foo",
            "polymorphic_context": {
                <foo-specific fields>
            }
        }

        without explicitly wrapping this in a parent serializer, i.e. -
        ``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires
        access to the ``object_type`` in the parent scope.
      properties:
        type:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - type
      title: ApplicationRuleEngineRequestPhaseBehaviorsShared
      type: object
    ApplicationRuleEngineResponseNoArgs:
      additionalProperties: true
      description: Enable gzip
      properties:
        type:
          description: |-
            * `enable_gzip` - enable_gzip
            * `deliver` - deliver
          title: ApplicationRuleEngineResponseNoArgsTypeEnum
          type: string
      required:
      - type
      title: ApplicationRuleEngineResponseNoArgs
      type: object
    ApplicationRuleEngineResponseNoArgsRequest:
      additionalProperties: true
      description: Enable gzip
      properties:
        type:
          description: |-
            * `enable_gzip` - enable_gzip
            * `deliver` - deliver
          title: ApplicationRuleEngineResponseNoArgsTypeEnum
          type: string
      required:
      - type
      title: ApplicationRuleEngineResponseNoArgsRequest
      type: object
    ApplicationRuleEngineResponseNoArgsTypeEnum:
      description: |-
        * `enable_gzip` - enable_gzip
        * `deliver` - deliver
      title: ApplicationRuleEngineResponseNoArgsTypeEnum
      type: string
    ApplicationRuleEngineResponsePhaseBehaviors:
      additionalProperties: true
      discriminator:
        mapping:
          enable_gzip: "#/components/schemas/ApplicationResponsePhaseBehaviorWithoutArgs"
          deliver: "#/components/schemas/ApplicationResponsePhaseBehaviorWithoutArgs"
          redirect_to_301: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgs"
          redirect_to_302: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgs"
          filter_response_cookie: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgs"
          run_function: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse"
          set_cookie: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie"
          add_response_header: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader"
          filter_response_header: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader"
          capture_match_groups: "#/components/schemas/ApplicationResponsePhaseBehaviorCaptureMatchGroups"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/ApplicationResponsePhaseBehaviorWithoutArgs"
      - $ref: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgs"
      - $ref: "#/components/schemas/ApplicationResponsePhaseBehaviorCaptureMatchGroups"
      title: ApplicationRuleEngineResponsePhaseBehaviors
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineAddResponseHeader"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineAddResponseHeaderRequest"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest
    ApplicationResponsePhaseBehaviorCaptureMatchGroups:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineCaptureMatchGroups"
      title: ApplicationResponsePhaseBehaviorCaptureMatchGroups
    ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineCaptureMatchGroups"
      title: ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineFilterResponseHeader"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineFilterResponseHeaderRequest"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest
    ApplicationResponsePhaseBehaviorWithoutArgs:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineNoArgs"
      example:
        type: type
      title: ApplicationResponsePhaseBehaviorWithoutArgs
    ApplicationResponsePhaseBehaviorWithoutArgsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineNoArgs"
      example:
        type: type
      title: ApplicationResponsePhaseBehaviorWithoutArgsRequest
    ApplicationResponsePhaseBehaviorWithArgs:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineString"
      title: ApplicationResponsePhaseBehaviorWithArgs
    ApplicationResponsePhaseBehaviorWithArgsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineString"
      title: ApplicationResponsePhaseBehaviorWithArgsRequest
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionResponse"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionResponseRequest"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetCookie"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie
    ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsShared"
      - $ref: "#/components/schemas/ApplicationRuleEngineSetCookieRequest"
      title: ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest
    ApplicationRuleEngineResponsePhaseBehaviorsRequest:
      additionalProperties: true
      discriminator:
        mapping:
          enable_gzip: "#/components/schemas/ApplicationResponsePhaseBehaviorWithoutArgsRequest"
          deliver: "#/components/schemas/ApplicationResponsePhaseBehaviorWithoutArgsRequest"
          redirect_to_301: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgsRequest"
          redirect_to_302: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgsRequest"
          filter_response_cookie: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgsRequest"
          run_function: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest"
          set_cookie: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest"
          add_response_header: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest"
          filter_response_header: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest"
          capture_match_groups: "#/components/schemas/ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/ApplicationResponsePhaseBehaviorWithoutArgsRequest"
      - $ref: "#/components/schemas/ApplicationResponsePhaseBehaviorWithArgsRequest"
      - $ref: "#/components/schemas/ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest"
      title: ApplicationRuleEngineResponsePhaseBehaviorsRequest
    ApplicationRuleEngineResponsePhaseBehaviorsShared:
      additionalProperties: true
      description: |-
        Polymorphic serializer base class.

        Note that the discriminator field must exist at the same depth as the mapped
        serializer fields for the OpenAPI introspection. See
        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for
        more information. As such, it's not possible to define something like:

        {
            "object_type": "foo",
            "polymorphic_context": {
                <foo-specific fields>
            }
        }

        without explicitly wrapping this in a parent serializer, i.e. -
        ``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires
        access to the ``object_type`` in the parent scope.
      properties:
        type:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - type
      title: ApplicationRuleEngineResponsePhaseBehaviorsShared
      type: object
    ApplicationRuleEngineResponseString:
      additionalProperties: true
      description: String behavior
      properties:
        type:
          description: |-
            * `redirect_to_301` - redirect_to_301
            * `redirect_to_302` - redirect_to_302
            * `filter_response_cookie` - filter_response_cookie
          title: ApplicationRuleEngineResponseStringTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineResponseStringAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineResponseString
      type: object
    ApplicationRuleEngineResponseStringAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineResponseStringAttributes
      type: object
    ApplicationRuleEngineResponseStringAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineResponseStringAttributesRequest
      type: object
    ApplicationRuleEngineResponseStringRequest:
      additionalProperties: true
      description: String behavior
      properties:
        type:
          description: |-
            * `redirect_to_301` - redirect_to_301
            * `redirect_to_302` - redirect_to_302
            * `filter_response_cookie` - filter_response_cookie
          title: ApplicationRuleEngineResponseStringTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineResponseStringAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineResponseStringRequest
      type: object
    ApplicationRuleEngineResponseStringTypeEnum:
      description: |-
        * `redirect_to_301` - redirect_to_301
        * `redirect_to_302` - redirect_to_302
        * `filter_response_cookie` - filter_response_cookie
      title: ApplicationRuleEngineResponseStringTypeEnum
      type: string
    ApplicationRuleEngineRewriteRequest:
      additionalProperties: true
      description: Rewrite request
      properties:
        type:
          description: '* `rewrite_request` - rewrite_request'
          title: TypeF11Enum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineRewriteRequestAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineRewriteRequest
      type: object
    ApplicationRuleEngineRewriteRequestAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineRewriteRequestAttributes
      type: object
    ApplicationRuleEngineRewriteRequestAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineRewriteRequestAttributesRequest
      type: object
    ApplicationRuleEngineRewriteRequestRequest:
      additionalProperties: true
      description: Rewrite request
      properties:
        type:
          description: '* `rewrite_request` - rewrite_request'
          title: TypeF11Enum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineRewriteRequestAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineRewriteRequestRequest
      type: object
    ApplicationRuleEngineRunFunction:
      additionalProperties: true
      description: Run a function
      properties:
        type:
          description: '* `run_function` - run_function'
          title: Type689Enum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineRunFunction
      type: object
    ApplicationRuleEngineRunFunctionAttributes:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineRunFunctionAttributes
      type: object
    ApplicationRuleEngineRunFunctionAttributesRequest:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineRunFunctionAttributesRequest
      type: object
    ApplicationRuleEngineRunFunctionRequest:
      additionalProperties: true
      description: Run a function
      properties:
        type:
          description: '* `run_function` - run_function'
          title: Type689Enum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineRunFunctionRequest
      type: object
    ApplicationRuleEngineRunFunctionResponse:
      additionalProperties: true
      description: Run a function
      properties:
        type:
          description: '* `run_function` - run_function'
          title: Type689Enum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionResponseAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineRunFunctionResponse
      type: object
    ApplicationRuleEngineRunFunctionResponseAttributes:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineRunFunctionResponseAttributes
      type: object
    ApplicationRuleEngineRunFunctionResponseAttributesRequest:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineRunFunctionResponseAttributesRequest
      type: object
    ApplicationRuleEngineRunFunctionResponseRequest:
      additionalProperties: true
      description: Run a function
      properties:
        type:
          description: '* `run_function` - run_function'
          title: Type689Enum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineRunFunctionResponseAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineRunFunctionResponseRequest
      type: object
    ApplicationRuleEngineSetCachePolicy:
      additionalProperties: true
      description: Set cache policy
      properties:
        type:
          description: '* `set_cache_policy` - set_cache_policy'
          title: ApplicationRuleEngineSetCachePolicyTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetCachePolicyAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetCachePolicy
      type: object
    ApplicationRuleEngineSetCachePolicyAttributes:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineSetCachePolicyAttributes
      type: object
    ApplicationRuleEngineSetCachePolicyAttributesRequest:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineSetCachePolicyAttributesRequest
      type: object
    ApplicationRuleEngineSetCachePolicyRequest:
      additionalProperties: true
      description: Set cache policy
      properties:
        type:
          description: '* `set_cache_policy` - set_cache_policy'
          title: ApplicationRuleEngineSetCachePolicyTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetCachePolicyAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetCachePolicyRequest
      type: object
    ApplicationRuleEngineSetCachePolicyTypeEnum:
      description: '* `set_cache_policy` - set_cache_policy'
      title: ApplicationRuleEngineSetCachePolicyTypeEnum
      type: string
    ApplicationRuleEngineSetConnector:
      additionalProperties: true
      description: Set edge connector
      properties:
        type:
          description: '* `set_connector` - set_connector'
          title: ApplicationRuleEngineSetConnectorTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetConnectorAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetConnector
      type: object
    ApplicationRuleEngineSetConnectorAttributes:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineSetConnectorAttributes
      type: object
    ApplicationRuleEngineSetConnectorAttributesRequest:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineSetConnectorAttributesRequest
      type: object
    ApplicationRuleEngineSetConnectorRequest:
      additionalProperties: true
      description: Set edge connector
      properties:
        type:
          description: '* `set_connector` - set_connector'
          title: ApplicationRuleEngineSetConnectorTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetConnectorAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetConnectorRequest
      type: object
    ApplicationRuleEngineSetConnectorTypeEnum:
      description: '* `set_connector` - set_connector'
      title: ApplicationRuleEngineSetConnectorTypeEnum
      type: string
    ApplicationRuleEngineSetCookie:
      additionalProperties: true
      description: Set cookie
      properties:
        type:
          description: '* `set_cookie` - set_cookie'
          title: ApplicationRuleEngineSetCookieTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetCookieAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetCookie
      type: object
    ApplicationRuleEngineSetCookieAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineSetCookieAttributes
      type: object
    ApplicationRuleEngineSetCookieAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineSetCookieAttributesRequest
      type: object
    ApplicationRuleEngineSetCookieRequest:
      additionalProperties: true
      description: Set cookie
      properties:
        type:
          description: '* `set_cookie` - set_cookie'
          title: ApplicationRuleEngineSetCookieTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetCookieAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetCookieRequest
      type: object
    ApplicationRuleEngineSetCookieTypeEnum:
      description: '* `set_cookie` - set_cookie'
      title: ApplicationRuleEngineSetCookieTypeEnum
      type: string
    ApplicationRuleEngineSetOrigin:
      additionalProperties: true
      description: Set origin
      properties:
        type:
          description: '* `set_origin` - set_origin'
          title: ApplicationRuleEngineSetOriginTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetOriginAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetOrigin
      type: object
    ApplicationRuleEngineSetOriginAttributes:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineSetOriginAttributes
      type: object
    ApplicationRuleEngineSetOriginAttributesRequest:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: ApplicationRuleEngineSetOriginAttributesRequest
      type: object
    ApplicationRuleEngineSetOriginRequest:
      additionalProperties: true
      description: Set origin
      properties:
        type:
          description: '* `set_origin` - set_origin'
          title: ApplicationRuleEngineSetOriginTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineSetOriginAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineSetOriginRequest
      type: object
    ApplicationRuleEngineSetOriginTypeEnum:
      description: '* `set_origin` - set_origin'
      title: ApplicationRuleEngineSetOriginTypeEnum
      type: string
    ApplicationRuleEngineString:
      additionalProperties: true
      description: String behavior
      properties:
        type:
          description: |-
            * `redirect_to_301` - redirect_to_301
            * `redirect_to_302` - redirect_to_302
          title: ApplicationRuleEngineStringTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineStringAttributes"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineString
      type: object
    ApplicationRuleEngineStringAttributes:
      additionalProperties: true
      properties:
        value:
          $ref: "#/components/schemas/ApplicationRuleEngineStringAttributes_value"
      title: ApplicationRuleEngineStringAttributes
      type: object
    ApplicationRuleEngineStringAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 2000
          minLength: 1
          type: string
      required:
      - value
      title: ApplicationRuleEngineStringAttributesRequest
      type: object
    ApplicationRuleEngineStringRequest:
      additionalProperties: true
      description: String behavior
      properties:
        type:
          description: |-
            * `redirect_to_301` - redirect_to_301
            * `redirect_to_302` - redirect_to_302
          title: ApplicationRuleEngineStringTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/ApplicationRuleEngineStringAttributesRequest"
      required:
      - attributes
      - type
      title: ApplicationRuleEngineStringRequest
      type: object
    ApplicationRuleEngineStringTypeEnum:
      description: |-
        * `redirect_to_301` - redirect_to_301
        * `redirect_to_302` - redirect_to_302
      title: ApplicationRuleEngineStringTypeEnum
      type: string
    BehaviorA69Enum:
      description: |-
        * `ignore` - ignore
        * `all` - all
        * `allowlist` - allowlist
        * `denylist` - denylist
      title: BehaviorA69Enum
      type: string
    BlankEnum:
      title: BlankEnum
      type: string
    BrowserCacheModule:
      additionalProperties: false
      example:
        max_age: 19008185
        behavior: ""
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/BrowserCacheModuleBehaviorEnum"
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
      title: BrowserCacheModule
      type: object
    BrowserCacheModuleBehaviorEnum:
      description: |-
        * `override` - override
        * `honor` - honor
        * `no-cache` - no-cache
      title: BrowserCacheModuleBehaviorEnum
      type: string
    BrowserCacheModuleRequest:
      additionalProperties: false
      example:
        max_age: 2525491
        behavior: ""
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/BrowserCacheModuleBehaviorEnum"
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
      title: BrowserCacheModuleRequest
      type: object
    CacheModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: CacheModule
      type: object
    CacheModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: CacheModuleRequest
      type: object
    CacheSetting:
      additionalProperties: false
      example:
        browser_cache:
          max_age: 19008185
          behavior: ""
        name: name
        id: 0
        modules:
          edge_cache:
            max_age: 4622587
            large_file_cache:
              offset: 1024
              enabled: true
            behavior: ""
            stale_cache:
              enabled: true
          application_accelerator:
            cache_vary_by_querystring:
              behavior: ""
              fields:
              - fields
              - fields
              sort_enabled: true
            cache_vary_by_devices:
              device_group:
              - 5
              - 5
              behavior: ""
            cache_vary_by_method:
            - null
            - null
            cache_vary_by_cookies:
              cookie_names:
              - cookie_names
              - cookie_names
              behavior: ""
          tiered_cache: ""
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        browser_cache:
          $ref: "#/components/schemas/BrowserCacheModule"
        modules:
          $ref: "#/components/schemas/CacheSettingsModules"
      required:
      - id
      - name
      title: CacheSetting
      type: object
    CacheSettingRequest:
      additionalProperties: false
      example:
        browser_cache:
          max_age: 2525491
          behavior: ""
        name: name
        modules:
          edge_cache:
            max_age: 19008185
            large_file_cache:
              offset: 1024
              enabled: true
            behavior: ""
            stale_cache:
              enabled: true
          application_accelerator:
            cache_vary_by_querystring:
              behavior: ""
              fields:
              - fields
              - fields
              sort_enabled: true
            cache_vary_by_devices:
              device_group:
              - 5
              - 5
              behavior: ""
            cache_vary_by_method:
            - null
            - null
            cache_vary_by_cookies:
              cookie_names:
              - cookie_names
              - cookie_names
              behavior: ""
          tiered_cache: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        browser_cache:
          $ref: "#/components/schemas/BrowserCacheModuleRequest"
        modules:
          $ref: "#/components/schemas/CacheSettingsModulesRequest"
      required:
      - name
      title: CacheSettingRequest
      type: object
    CacheSettingsApplicationAcceleratorModule:
      additionalProperties: false
      example:
        cache_vary_by_querystring:
          behavior: ""
          fields:
          - fields
          - fields
          sort_enabled: true
        cache_vary_by_devices:
          device_group:
          - 5
          - 5
          behavior: ""
        cache_vary_by_method:
        - null
        - null
        cache_vary_by_cookies:
          cookie_names:
          - cookie_names
          - cookie_names
          behavior: ""
      properties:
        cache_vary_by_method:
          items:
            $ref: "#/components/schemas/CacheVaryByMethodEnum"
          maxItems: 2
          type: array
        cache_vary_by_querystring:
          $ref: "#/components/schemas/CacheVaryByQuerystringModule"
        cache_vary_by_cookies:
          $ref: "#/components/schemas/CacheVaryByCookiesModule"
        cache_vary_by_devices:
          $ref: "#/components/schemas/CacheVaryByDevicesModule"
      title: CacheSettingsApplicationAcceleratorModule
      type: object
    CacheSettingsApplicationAcceleratorModuleRequest:
      additionalProperties: false
      example:
        cache_vary_by_querystring:
          behavior: ""
          fields:
          - fields
          - fields
          sort_enabled: true
        cache_vary_by_devices:
          device_group:
          - 5
          - 5
          behavior: ""
        cache_vary_by_method:
        - null
        - null
        cache_vary_by_cookies:
          cookie_names:
          - cookie_names
          - cookie_names
          behavior: ""
      properties:
        cache_vary_by_method:
          items:
            $ref: "#/components/schemas/CacheVaryByMethodEnum"
          maxItems: 2
          type: array
        cache_vary_by_querystring:
          $ref: "#/components/schemas/CacheVaryByQuerystringModuleRequest"
        cache_vary_by_cookies:
          $ref: "#/components/schemas/CacheVaryByCookiesModuleRequest"
        cache_vary_by_devices:
          $ref: "#/components/schemas/CacheVaryByDevicesModuleRequest"
      title: CacheSettingsApplicationAcceleratorModuleRequest
      type: object
    CacheSettingsEdgeCacheModule:
      additionalProperties: false
      example:
        max_age: 4622587
        large_file_cache:
          offset: 1024
          enabled: true
        behavior: ""
        stale_cache:
          enabled: true
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/CacheSettingsEdgeCacheModuleBehaviorEnum"
        max_age:
          description: "To use a value lower than 60s, the Application Acceleration\
            \ module must be enabled on the Edge Application."
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        stale_cache:
          $ref: "#/components/schemas/StateCacheModule"
        large_file_cache:
          $ref: "#/components/schemas/LargeFileCacheModule"
      title: CacheSettingsEdgeCacheModule
      type: object
    CacheSettingsEdgeCacheModuleBehaviorEnum:
      description: |-
        * `honor` - Honor Origin Cache Settings
        * `override` - Override Cache Settings
      title: CacheSettingsEdgeCacheModuleBehaviorEnum
      type: string
    CacheSettingsEdgeCacheModuleRequest:
      additionalProperties: false
      example:
        max_age: 19008185
        large_file_cache:
          offset: 1024
          enabled: true
        behavior: ""
        stale_cache:
          enabled: true
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/CacheSettingsEdgeCacheModuleBehaviorEnum"
        max_age:
          description: "To use a value lower than 60s, the Application Acceleration\
            \ module must be enabled on the Edge Application."
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        stale_cache:
          $ref: "#/components/schemas/StateCacheModuleRequest"
        large_file_cache:
          $ref: "#/components/schemas/LargeFileCacheModuleRequest"
      title: CacheSettingsEdgeCacheModuleRequest
      type: object
    CacheSettingsModules:
      additionalProperties: false
      example:
        edge_cache:
          max_age: 4622587
          large_file_cache:
            offset: 1024
            enabled: true
          behavior: ""
          stale_cache:
            enabled: true
        application_accelerator:
          cache_vary_by_querystring:
            behavior: ""
            fields:
            - fields
            - fields
            sort_enabled: true
          cache_vary_by_devices:
            device_group:
            - 5
            - 5
            behavior: ""
          cache_vary_by_method:
          - null
          - null
          cache_vary_by_cookies:
            cookie_names:
            - cookie_names
            - cookie_names
            behavior: ""
        tiered_cache: ""
      properties:
        edge_cache:
          $ref: "#/components/schemas/CacheSettingsEdgeCacheModule"
        tiered_cache:
          allOf:
          - $ref: "#/components/schemas/CacheSettingsTieredCacheModule"
          nullable: true
        application_accelerator:
          $ref: "#/components/schemas/CacheSettingsApplicationAcceleratorModule"
      title: CacheSettingsModules
      type: object
    CacheSettingsModulesRequest:
      additionalProperties: false
      example:
        edge_cache:
          max_age: 19008185
          large_file_cache:
            offset: 1024
            enabled: true
          behavior: ""
          stale_cache:
            enabled: true
        application_accelerator:
          cache_vary_by_querystring:
            behavior: ""
            fields:
            - fields
            - fields
            sort_enabled: true
          cache_vary_by_devices:
            device_group:
            - 5
            - 5
            behavior: ""
          cache_vary_by_method:
          - null
          - null
          cache_vary_by_cookies:
            cookie_names:
            - cookie_names
            - cookie_names
            behavior: ""
        tiered_cache: ""
      properties:
        edge_cache:
          $ref: "#/components/schemas/CacheSettingsEdgeCacheModuleRequest"
        tiered_cache:
          allOf:
          - $ref: "#/components/schemas/CacheSettingsTieredCacheModuleRequest"
          nullable: true
        application_accelerator:
          $ref: "#/components/schemas/CacheSettingsApplicationAcceleratorModuleRequest"
      title: CacheSettingsModulesRequest
      type: object
    CacheSettingsTieredCacheModule:
      additionalProperties: false
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/CacheSettingsTieredCacheModuleBehaviorEnum"
        max_age:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        topology:
          description: |-
            * `near-edge` - near-edge
            * `br-east-1` - br-east-1
            * `us-east-1` - us-east-1
          title: TopologyEnum
          type: string
      required:
      - behavior
      - max_age
      title: CacheSettingsTieredCacheModule
      type: object
    CacheSettingsTieredCacheModuleBehaviorEnum:
      description: '* `override` - override'
      title: CacheSettingsTieredCacheModuleBehaviorEnum
      type: string
    CacheSettingsTieredCacheModuleRequest:
      additionalProperties: false
      properties:
        topology:
          description: |-
            * `near-edge` - near-edge
            * `br-east-1` - br-east-1
            * `us-east-1` - us-east-1
          title: TopologyEnum
          type: string
      title: CacheSettingsTieredCacheModuleRequest
      type: object
    CacheVaryByCookiesModule:
      additionalProperties: false
      example:
        cookie_names:
        - cookie_names
        - cookie_names
        behavior: ""
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/BehaviorA69Enum"
        cookie_names:
          items:
            type: string
          type: array
      title: CacheVaryByCookiesModule
      type: object
    CacheVaryByCookiesModuleRequest:
      additionalProperties: false
      example:
        cookie_names:
        - cookie_names
        - cookie_names
        behavior: ""
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/BehaviorA69Enum"
        cookie_names:
          items:
            type: string
          type: array
      title: CacheVaryByCookiesModuleRequest
      type: object
    CacheVaryByDevicesModule:
      additionalProperties: false
      example:
        device_group:
        - 5
        - 5
        behavior: ""
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/CacheVaryByDevicesModuleBehaviorEnum"
        device_group:
          items:
            format: int64
            type: integer
          type: array
      title: CacheVaryByDevicesModule
      type: object
    CacheVaryByDevicesModuleBehaviorEnum:
      description: |-
        * `ignore` - ignore
        * `allowlist` - allowlist
      title: CacheVaryByDevicesModuleBehaviorEnum
      type: string
    CacheVaryByDevicesModuleRequest:
      additionalProperties: false
      example:
        device_group:
        - 5
        - 5
        behavior: ""
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/CacheVaryByDevicesModuleBehaviorEnum"
        device_group:
          items:
            format: int64
            type: integer
          type: array
      title: CacheVaryByDevicesModuleRequest
      type: object
    CacheVaryByMethodEnum:
      description: |-
        * `options` - options
        * `post` - post
      title: CacheVaryByMethodEnum
      type: string
    CacheVaryByQuerystringModule:
      additionalProperties: false
      example:
        behavior: ""
        fields:
        - fields
        - fields
        sort_enabled: true
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/BehaviorA69Enum"
        fields:
          items:
            type: string
          type: array
        sort_enabled:
          type: boolean
      title: CacheVaryByQuerystringModule
      type: object
    CacheVaryByQuerystringModuleRequest:
      additionalProperties: false
      example:
        behavior: ""
        fields:
        - fields
        - fields
        sort_enabled: true
      properties:
        behavior:
          allOf:
          - $ref: "#/components/schemas/BehaviorA69Enum"
        fields:
          items:
            type: string
          type: array
        sort_enabled:
          type: boolean
      title: CacheVaryByQuerystringModuleRequest
      type: object
    CiphersEnum:
      description: |-
        * `1` - TLSv1.2_2018 - TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256
        * `2` - TLSv1.2_2019 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
        * `3` - TLSv1.3_2022 - ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
        * `4` - TLSv1.2_2021 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
        * `5` - Legacy_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA
        * `6` - Compatible_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
        * `7` - Modern_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305
        * `8` - Legacy_v2017Q1 - AES128-CCM:AES128-CCM8:AES128-GCM-SHA256:AES128-SHA:AES128-SHA256:AES256-CCM:AES256-CCM8:AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
      format: int64
      title: CiphersEnum
      type: integer
    CloneApplicationRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
      required:
      - name
      title: CloneApplicationRequest
      type: object
    CloneFirewallRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - name
      title: CloneFirewallRequest
      type: object
    CloneWAFRequest:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - name
      title: CloneWAFRequest
      type: object
    CodeEnum:
      description: |-
        * `default` - default
        * `400` - Bad Request
        * `401` - Unauthorized
        * `403` - Forbidden
        * `404` - Not Found
        * `405` - Method Not Allowed
        * `406` - Not Acceptable
        * `408` - Request Timeout
        * `409` - Conflict
        * `410` - Gone
        * `411` - Length Required
        * `414` - URI Too Long
        * `415` - Unsupported Media Type
        * `416` - Range Not Satisfiable
        * `426` - Upgrade Required
        * `429` - Too Many Requests
        * `431` - Request Header Fields Too Large
        * `500` - Internal Server Error
        * `501` - Not Implemented
        * `502` - Bad Gateway
        * `503` - Service Unavailable
        * `504` - Gateway Timeout
        * `505` - HTTP Version Not Supported
      title: CodeEnum
      type: string
    ConditionalEnum:
      description: |-
        * `if` - if
        * `or` - or
        * `and` - and
      title: ConditionalEnum
      type: string
    ConnectorHTTP:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        name: name
        active: true
        attributes:
          addresses:
          - https_port: 9607
            address: address
            active: true
            http_port: 39501
            modules: ""
          - https_port: 9607
            address: address
            active: true
            http_port: 39501
            modules: ""
          connection_options: ""
          modules: ""
        id: 0
        type: ""
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          type: string
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorHTTPAttributes"
      required:
      - attributes
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - type
      title: ConnectorHTTP
      type: object
    ConnectorHTTPAttributes:
      additionalProperties: false
      example:
        addresses:
        - https_port: 9607
          address: address
          active: true
          http_port: 39501
          modules: ""
        - https_port: 9607
          address: address
          active: true
          http_port: 39501
          modules: ""
        connection_options: ""
        modules: ""
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        connection_options:
          allOf:
          - $ref: "#/components/schemas/HTTPConnectionOptions"
        modules:
          allOf:
          - $ref: "#/components/schemas/HTTPModules"
      required:
      - addresses
      title: ConnectorHTTPAttributes
      type: object
    ConnectorHTTPAttributesRequest:
      additionalProperties: false
      example:
        addresses:
        - https_port: 39501
          address: address
          active: true
          http_port: 5249
          modules: ""
        - https_port: 39501
          address: address
          active: true
          http_port: 5249
          modules: ""
        connection_options: ""
        modules: ""
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/AddressRequest"
          type: array
        connection_options:
          allOf:
          - $ref: "#/components/schemas/HTTPConnectionOptionsRequest"
        modules:
          allOf:
          - $ref: "#/components/schemas/HTTPModulesRequest"
      required:
      - addresses
      title: ConnectorHTTPAttributesRequest
      type: object
    ConnectorHTTPRequest:
      additionalProperties: false
      example:
        name: name
        active: true
        attributes:
          addresses:
          - https_port: 39501
            address: address
            active: true
            http_port: 5249
            modules: ""
          - https_port: 39501
            address: address
            active: true
            http_port: 5249
            modules: ""
          connection_options: ""
          modules: ""
        type: ""
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorHTTPAttributesRequest"
      required:
      - attributes
      - name
      - type
      title: ConnectorHTTPRequest
      type: object
    ConnectorLiveIngest:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          type: string
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorLiveIngestAttributes"
      required:
      - attributes
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - type
      title: ConnectorLiveIngest
      type: object
    ConnectorLiveIngestAttributes:
      additionalProperties: false
      properties:
        region:
          description: |-
            * `us-east-1` - us-east-1
            * `us-east-2` - us-east-2
            * `br-east-1` - br-east-1
            * `br-east-2` - br-east-2
            * `br-east-3` - br-east-3
          title: RegionEnum
          type: string
      required:
      - region
      title: ConnectorLiveIngestAttributes
      type: object
    ConnectorLiveIngestAttributesRequest:
      additionalProperties: false
      properties:
        region:
          description: |-
            * `us-east-1` - us-east-1
            * `us-east-2` - us-east-2
            * `br-east-1` - br-east-1
            * `br-east-2` - br-east-2
            * `br-east-3` - br-east-3
          title: RegionEnum
          type: string
      required:
      - region
      title: ConnectorLiveIngestAttributesRequest
      type: object
    ConnectorLiveIngestRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorLiveIngestAttributesRequest"
      required:
      - attributes
      - name
      - type
      title: ConnectorLiveIngestRequest
      type: object
    ConnectorPolymorphic:
      additionalProperties: true
      discriminator:
        mapping:
          http: "#/components/schemas/ConnectorHTTP"
          storage: "#/components/schemas/ConnectorStorage"
          live_ingest: "#/components/schemas/ConnectorLiveIngest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/ConnectorHTTP"
      - $ref: "#/components/schemas/ConnectorStorage"
      - $ref: "#/components/schemas/ConnectorLiveIngest"
      title: ConnectorPolymorphic
    ConnectorPolymorphicRequest:
      additionalProperties: true
      discriminator:
        mapping:
          http: "#/components/schemas/ConnectorHTTPRequest"
          storage: "#/components/schemas/ConnectorStorageRequest"
          live_ingest: "#/components/schemas/ConnectorLiveIngestRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/ConnectorHTTPRequest"
      - $ref: "#/components/schemas/ConnectorStorageRequest"
      - $ref: "#/components/schemas/ConnectorLiveIngestRequest"
      title: ConnectorPolymorphicRequest
    ConnectorStorage:
      additionalProperties: false
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          type: string
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorStorageAttributes"
      required:
      - attributes
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - type
      title: ConnectorStorage
      type: object
    ConnectorStorageAttributes:
      additionalProperties: false
      properties:
        bucket:
          maxLength: 255
          minLength: 1
          type: string
        prefix:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - bucket
      title: ConnectorStorageAttributes
      type: object
    ConnectorStorageAttributesRequest:
      additionalProperties: false
      properties:
        bucket:
          maxLength: 255
          minLength: 1
          type: string
        prefix:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - bucket
      title: ConnectorStorageAttributesRequest
      type: object
    ConnectorStorageRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorStorageAttributesRequest"
      required:
      - attributes
      - name
      - type
      title: ConnectorStorageRequest
      type: object
    CustomPage:
      additionalProperties: false
      example:
        product_version: product_version
        pages:
        - code: code
          page:
            attributes:
              connector: 6
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            type: type
        - code: code
          page:
            attributes:
              connector: 6
              custom_status_code: 397
              ttl: 4622587
              uri: uri
            type: type
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        last_editor:
          maxLength: 255
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          type: string
        pages:
          items:
            $ref: "#/components/schemas/Page"
          type: array
      required:
      - id
      - last_editor
      - last_modified
      - name
      - pages
      - product_version
      title: CustomPage
      type: object
    CustomPageRequest:
      additionalProperties: false
      example:
        pages:
        - code: code
          page:
            attributes:
              connector: 0
              custom_status_code: 173
              ttl: 19008185
              uri: uri
            type: type
        - code: code
          page:
            attributes:
              connector: 0
              custom_status_code: 173
              ttl: 19008185
              uri: uri
            type: type
        name: name
        active: true
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        pages:
          items:
            $ref: "#/components/schemas/PageRequest"
          type: array
      required:
      - name
      - pages
      title: CustomPageRequest
      type: object
    DefaultDeploymentStrategy:
      additionalProperties: true
      properties:
        attributes:
          $ref: "#/components/schemas/DefaultDeploymentStrategyAttrs"
      required:
      - attributes
      title: DefaultDeploymentStrategy
      type: object
    DefaultDeploymentStrategyAttrs:
      additionalProperties: false
      example:
        application: 5559347081229897728
        firewall: 1
        custom_page: 1
      properties:
        application:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        firewall:
          format: int64
          nullable: true
          type: integer
        custom_page:
          format: int64
          minimum: 1
          nullable: true
          type: integer
      required:
      - application
      title: DefaultDeploymentStrategyAttrs
      type: object
    DefaultDeploymentStrategyAttrsRequest:
      additionalProperties: false
      example:
        application: 738633633822310400
        firewall: 6
        custom_page: 1
      properties:
        application:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        firewall:
          format: int64
          nullable: true
          type: integer
        custom_page:
          format: int64
          minimum: 1
          nullable: true
          type: integer
      required:
      - application
      title: DefaultDeploymentStrategyAttrsRequest
      type: object
    DefaultDeploymentStrategyRequest:
      additionalProperties: true
      properties:
        attributes:
          $ref: "#/components/schemas/DefaultDeploymentStrategyAttrsRequest"
      required:
      - attributes
      title: DefaultDeploymentStrategyRequest
      type: object
    DefaultErrorResponse:
      additionalProperties: false
      example:
        detail: detail
      properties:
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: DefaultErrorResponse
      type: object
    DeploymentStrategy:
      $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategy"
    DeploymentStrategyDefaultDeploymentStrategy:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/DeploymentStrategyShared"
      - $ref: "#/components/schemas/DefaultDeploymentStrategy"
      example:
        attributes:
          application: 5559347081229897728
          firewall: 1
          custom_page: 1
        type: type
      title: DeploymentStrategyDefaultDeploymentStrategy
    DeploymentStrategyDefaultDeploymentStrategyRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/DeploymentStrategyShared"
      - $ref: "#/components/schemas/DefaultDeploymentStrategyRequest"
      example:
        attributes:
          application: 738633633822310400
          firewall: 6
          custom_page: 1
        type: type
      title: DeploymentStrategyDefaultDeploymentStrategyRequest
    DeploymentStrategyRequest:
      $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyRequest"
    DeploymentStrategyShared:
      additionalProperties: true
      description: Deployment strategy.
      properties:
        type:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - type
      title: DeploymentStrategyShared
      type: object
    DnsResolutionEnum:
      description: |-
        * `preserve` - Preserve
        * `force_ipv4` - Force IPv4
        * `force_ipv6` - Force IPv6
      title: DnsResolutionEnum
      type: string
    EdgeApplicationCriterionField:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Phase | Operators | Argument |
        | -------- | ----------- | ----- | --------- | ---------|
        | ${arg_&lt;name&gt;} | Use this variable to match a query param. Replace &lt;name&gt; with the specific query param you want to match, replacing any '-' with '_'. Examples: ${arg_search}, ${arg_next}. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${args} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${cookie_&lt;name&gt;} | Use this variable to match cookies sent by the browser Cookie headers.Replace &lt;name&gt; with the specific cookie name you want to match, replacing any '-' with '_'. Examples: cookie_session_id, cookie_user_pref. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${device_group} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${host} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${domain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${http_&lt;header_name&gt;} | Use this variable to match HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_user} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_uri} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${scheme} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${sent_http_&lt;header_name&gt;} | Use this variable to match HTTP headers sent to origin server. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_addr} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_cookie_&lt;name&gt;} | Use this variable to match cookies sent by the origin server in Set-Cookie headers.Replace &lt;name&gt; with the specific cookie you want to match, replacing any '-' with '_'. Examples: ${upstream_cookie_mycookie}, ${upstream_cookie_user_info}. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_http_&lt;header_name&gt;} | Use this variable to match origin HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. If many origins are consulted while the request is processed, only headers from the last origin are stored. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${uri} | The normalized (urldecoded) URI of the request. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_escaped_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_fingerprint} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_i_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn_parsed} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_serial} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_end} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_remain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_start} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_verify} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${tcpinfo_rtt} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_body} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        variable:
          description: |-
            * `${arg_<name>}` - ${arg_<name>}
            * `${args}` - ${args}
            * `${cookie_<name>}` - ${cookie_<name>}
            * `${device_group}` - ${device_group}
            * `${geoip_city_continent_code}` - ${geoip_city_continent_code}
            * `${geoip_city_country_code}` - ${geoip_city_country_code}
            * `${geoip_city_country_name}` - ${geoip_city_country_name}
            * `${geoip_city}` - ${geoip_city}
            * `${geoip_continent_code}` - ${geoip_continent_code}
            * `${geoip_country_code}` - ${geoip_country_code}
            * `${geoip_country_name}` - ${geoip_country_name}
            * `${geoip_region_name}` - ${geoip_region_name}
            * `${geoip_region}` - ${geoip_region}
            * `${host}` - ${host}
            * `${domain}` - ${domain}
            * `${http_<header_name>}` - ${http_<header_name>}
            * `${remote_addr}` - ${remote_addr}
            * `${remote_user}` - ${remote_user}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${request}` - ${request}
            * `${scheme}` - ${scheme}
            * `${sent_http_<header_name>}` - ${sent_http_<header_name>}
            * `${status}` - ${status}
            * `${upstream_addr}` - ${upstream_addr}
            * `${upstream_cookie_<name>}` - ${upstream_cookie_<name>}
            * `${upstream_http_<header_name>}` - ${upstream_http_<header_name>}
            * `${upstream_status}` - ${upstream_status}
            * `${uri}` - ${uri}
            * `${server_addr}` - ${server_addr}
            * `${server_port}` - ${server_port}
            * `${ssl_client_cert}` - ${ssl_client_cert}
            * `${ssl_client_escaped_cert}` - ${ssl_client_escaped_cert}
            * `${ssl_client_fingerprint}` - ${ssl_client_fingerprint}
            * `${ssl_client_i_dn}` - ${ssl_client_i_dn}
            * `${ssl_client_s_dn_parsed}` - ${ssl_client_s_dn_parsed}
            * `${ssl_client_s_dn}` - ${ssl_client_s_dn}
            * `${ssl_client_serial}` - ${ssl_client_serial}
            * `${ssl_client_v_end}` - ${ssl_client_v_end}
            * `${ssl_client_v_remain}` - ${ssl_client_v_remain}
            * `${ssl_client_v_start}` - ${ssl_client_v_start}
            * `${ssl_client_verify}` - ${ssl_client_verify}
            * `${tcpinfo_rtt}` - ${tcpinfo_rtt}
            * `${remote_port}` - ${remote_port}
            * `${request_body}` - ${request_body}
          title: EdgeApplicationCriterionFieldVariableEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeApplicationCriterionPolymorphicArgument"
          nullable: true
      required:
      - conditional
      - operator
      - variable
      title: EdgeApplicationCriterionField
      type: object
    EdgeApplicationCriterionFieldRequest:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Phase | Operators | Argument |
        | -------- | ----------- | ----- | --------- | ---------|
        | ${arg_&lt;name&gt;} | Use this variable to match a query param. Replace &lt;name&gt; with the specific query param you want to match, replacing any '-' with '_'. Examples: ${arg_search}, ${arg_next}. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${args} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${cookie_&lt;name&gt;} | Use this variable to match cookies sent by the browser Cookie headers.Replace &lt;name&gt; with the specific cookie name you want to match, replacing any '-' with '_'. Examples: cookie_session_id, cookie_user_pref. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${device_group} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_city} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_continent_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_code} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_country_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region_name} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${geoip_region} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${host} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${domain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${http_&lt;header_name&gt;} | Use this variable to match HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_user} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_uri} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${scheme} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${sent_http_&lt;header_name&gt;} | Use this variable to match HTTP headers sent to origin server. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_addr} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_cookie_&lt;name&gt;} | Use this variable to match cookies sent by the origin server in Set-Cookie headers.Replace &lt;name&gt; with the specific cookie you want to match, replacing any '-' with '_'. Examples: ${upstream_cookie_mycookie}, ${upstream_cookie_user_info}. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_http_&lt;header_name&gt;} | Use this variable to match origin HTTP headers. Replace &lt;header_name&gt; with the specific header you want to match, replacing any '-' with '_'. If many origins are consulted while the request is processed, only headers from the last origin are stored. Examples: http_authorization, http_accept, http_x_debug. | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${upstream_status} |  | response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${uri} | The normalized (urldecoded) URI of the request. | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_addr} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${server_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_escaped_cert} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_fingerprint} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_i_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn_parsed} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_s_dn} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_serial} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_end} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_remain} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_v_start} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${ssl_client_verify} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${tcpinfo_rtt} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${remote_port} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |
        | ${request_body} |  | default, request, response | is_equal, is_not_equal, starts_with, does_not_start_with, matches, does_not_match, exists, does_not_exist | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        variable:
          description: |-
            * `${arg_<name>}` - ${arg_<name>}
            * `${args}` - ${args}
            * `${cookie_<name>}` - ${cookie_<name>}
            * `${device_group}` - ${device_group}
            * `${geoip_city_continent_code}` - ${geoip_city_continent_code}
            * `${geoip_city_country_code}` - ${geoip_city_country_code}
            * `${geoip_city_country_name}` - ${geoip_city_country_name}
            * `${geoip_city}` - ${geoip_city}
            * `${geoip_continent_code}` - ${geoip_continent_code}
            * `${geoip_country_code}` - ${geoip_country_code}
            * `${geoip_country_name}` - ${geoip_country_name}
            * `${geoip_region_name}` - ${geoip_region_name}
            * `${geoip_region}` - ${geoip_region}
            * `${host}` - ${host}
            * `${domain}` - ${domain}
            * `${http_<header_name>}` - ${http_<header_name>}
            * `${remote_addr}` - ${remote_addr}
            * `${remote_user}` - ${remote_user}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${request}` - ${request}
            * `${scheme}` - ${scheme}
            * `${sent_http_<header_name>}` - ${sent_http_<header_name>}
            * `${status}` - ${status}
            * `${upstream_addr}` - ${upstream_addr}
            * `${upstream_cookie_<name>}` - ${upstream_cookie_<name>}
            * `${upstream_http_<header_name>}` - ${upstream_http_<header_name>}
            * `${upstream_status}` - ${upstream_status}
            * `${uri}` - ${uri}
            * `${server_addr}` - ${server_addr}
            * `${server_port}` - ${server_port}
            * `${ssl_client_cert}` - ${ssl_client_cert}
            * `${ssl_client_escaped_cert}` - ${ssl_client_escaped_cert}
            * `${ssl_client_fingerprint}` - ${ssl_client_fingerprint}
            * `${ssl_client_i_dn}` - ${ssl_client_i_dn}
            * `${ssl_client_s_dn_parsed}` - ${ssl_client_s_dn_parsed}
            * `${ssl_client_s_dn}` - ${ssl_client_s_dn}
            * `${ssl_client_serial}` - ${ssl_client_serial}
            * `${ssl_client_v_end}` - ${ssl_client_v_end}
            * `${ssl_client_v_remain}` - ${ssl_client_v_remain}
            * `${ssl_client_v_start}` - ${ssl_client_v_start}
            * `${ssl_client_verify}` - ${ssl_client_verify}
            * `${tcpinfo_rtt}` - ${tcpinfo_rtt}
            * `${remote_port}` - ${remote_port}
            * `${request_body}` - ${request_body}
          title: EdgeApplicationCriterionFieldVariableEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeApplicationCriterionPolymorphicArgumentRequest"
          nullable: true
      required:
      - conditional
      - operator
      - variable
      title: EdgeApplicationCriterionFieldRequest
      type: object
    EdgeApplicationCriterionFieldVariableEnum:
      description: |-
        * `${arg_<name>}` - ${arg_<name>}
        * `${args}` - ${args}
        * `${cookie_<name>}` - ${cookie_<name>}
        * `${device_group}` - ${device_group}
        * `${geoip_city_continent_code}` - ${geoip_city_continent_code}
        * `${geoip_city_country_code}` - ${geoip_city_country_code}
        * `${geoip_city_country_name}` - ${geoip_city_country_name}
        * `${geoip_city}` - ${geoip_city}
        * `${geoip_continent_code}` - ${geoip_continent_code}
        * `${geoip_country_code}` - ${geoip_country_code}
        * `${geoip_country_name}` - ${geoip_country_name}
        * `${geoip_region_name}` - ${geoip_region_name}
        * `${geoip_region}` - ${geoip_region}
        * `${host}` - ${host}
        * `${domain}` - ${domain}
        * `${http_<header_name>}` - ${http_<header_name>}
        * `${remote_addr}` - ${remote_addr}
        * `${remote_user}` - ${remote_user}
        * `${request_method}` - ${request_method}
        * `${request_uri}` - ${request_uri}
        * `${request}` - ${request}
        * `${scheme}` - ${scheme}
        * `${sent_http_<header_name>}` - ${sent_http_<header_name>}
        * `${status}` - ${status}
        * `${upstream_addr}` - ${upstream_addr}
        * `${upstream_cookie_<name>}` - ${upstream_cookie_<name>}
        * `${upstream_http_<header_name>}` - ${upstream_http_<header_name>}
        * `${upstream_status}` - ${upstream_status}
        * `${uri}` - ${uri}
        * `${server_addr}` - ${server_addr}
        * `${server_port}` - ${server_port}
        * `${ssl_client_cert}` - ${ssl_client_cert}
        * `${ssl_client_escaped_cert}` - ${ssl_client_escaped_cert}
        * `${ssl_client_fingerprint}` - ${ssl_client_fingerprint}
        * `${ssl_client_i_dn}` - ${ssl_client_i_dn}
        * `${ssl_client_s_dn_parsed}` - ${ssl_client_s_dn_parsed}
        * `${ssl_client_s_dn}` - ${ssl_client_s_dn}
        * `${ssl_client_serial}` - ${ssl_client_serial}
        * `${ssl_client_v_end}` - ${ssl_client_v_end}
        * `${ssl_client_v_remain}` - ${ssl_client_v_remain}
        * `${ssl_client_v_start}` - ${ssl_client_v_start}
        * `${ssl_client_verify}` - ${ssl_client_verify}
        * `${tcpinfo_rtt}` - ${tcpinfo_rtt}
        * `${remote_port}` - ${remote_port}
        * `${request_body}` - ${request_body}
      title: EdgeApplicationCriterionFieldVariableEnum
      type: string
    EdgeApplicationCriterionPolymorphicArgument:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      title: EdgeApplicationCriterionPolymorphicArgument
    EdgeApplicationCriterionPolymorphicArgumentRequest:
      additionalProperties: false
      nullable: true
      oneOf:
      - format: int64
        type: integer
      - type: string
      title: EdgeApplicationCriterionPolymorphicArgumentRequest
    EdgeFirewallCriterionField:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Operators | Argument |
        | -------- | ----------- | --------- | ---------|
        | ${header_accept} |  | matches, does_not_match | string |
        | ${header_accept_encoding} |  | matches, does_not_match | string |
        | ${header_accept_language} |  | matches, does_not_match | string |
        | ${header_cookie} |  | matches, does_not_match | string |
        | ${header_origin} |  | matches, does_not_match | string |
        | ${header_referer} |  | matches, does_not_match | string |
        | ${header_user_agent} |  | matches, does_not_match | string |
        | ${host} |  | is_equal, is_not_equal, matches, does_not_match | string |
        | ${network} |  | is_in_list, is_not_in_list | string |
        | ${request_args} |  | is_equal, is_not_equal, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | is_equal, is_not_equal | string |
        | ${request_uri} |  | starts_with, does_not_starts_with, is_equal, is_not_equal, matches, does_not_match | string |
        | ${scheme} |  | is_equal, is_not_equal | string |
        | ${ssl_verification_status} |  | is_equal, is_not_equal | SUCCESS, CERTIFICATE_VERIFICATION_ERROR, MISSING_CLIENT_CERTIFICATE |
        | ${client_certificate_validation} |  | is_equal, is_not_equal | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        variable:
          description: |-
            * `${header_accept}` - ${header_accept}
            * `${header_accept_encoding}` - ${header_accept_encoding}
            * `${header_accept_language}` - ${header_accept_language}
            * `${header_cookie}` - ${header_cookie}
            * `${header_origin}` - ${header_origin}
            * `${header_referer}` - ${header_referer}
            * `${header_user_agent}` - ${header_user_agent}
            * `${host}` - ${host}
            * `${network}` - ${network}
            * `${request_args}` - ${request_args}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${scheme}` - ${scheme}
            * `${ssl_verification_status}` - ${ssl_verification_status}
            * `${client_certificate_validation}` - ${client_certificate_validation}
          title: EdgeFirewallCriterionFieldVariableEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallCriterionPolymorphicArgument"
          nullable: true
      required:
      - conditional
      - operator
      - variable
      title: EdgeFirewallCriterionField
      type: object
    EdgeFirewallCriterionFieldRequest:
      additionalProperties: false
      description: |-
        The criterion which will be evaluated to define if the configured behaviors for this rule can be executed.

        | Variable | Description | Operators | Argument |
        | -------- | ----------- | --------- | ---------|
        | ${header_accept} |  | matches, does_not_match | string |
        | ${header_accept_encoding} |  | matches, does_not_match | string |
        | ${header_accept_language} |  | matches, does_not_match | string |
        | ${header_cookie} |  | matches, does_not_match | string |
        | ${header_origin} |  | matches, does_not_match | string |
        | ${header_referer} |  | matches, does_not_match | string |
        | ${header_user_agent} |  | matches, does_not_match | string |
        | ${host} |  | is_equal, is_not_equal, matches, does_not_match | string |
        | ${network} |  | is_in_list, is_not_in_list | string |
        | ${request_args} |  | is_equal, is_not_equal, matches, does_not_match, exists, does_not_exist | string |
        | ${request_method} |  | is_equal, is_not_equal | string |
        | ${request_uri} |  | starts_with, does_not_starts_with, is_equal, is_not_equal, matches, does_not_match | string |
        | ${scheme} |  | is_equal, is_not_equal | string |
        | ${ssl_verification_status} |  | is_equal, is_not_equal | SUCCESS, CERTIFICATE_VERIFICATION_ERROR, MISSING_CLIENT_CERTIFICATE |
        | ${client_certificate_validation} |  | is_equal, is_not_equal | string |


        About `operator` field: it's the operator to be used to evaluate the current criterion. When used in the first criterion of a block it should be always the `if` operator.
      example:
        argument: ""
        conditional: conditional
        variable: variable
        operator: operator
      properties:
        conditional:
          description: |-
            * `if` - if
            * `or` - or
            * `and` - and
          title: ConditionalEnum
          type: string
        variable:
          description: |-
            * `${header_accept}` - ${header_accept}
            * `${header_accept_encoding}` - ${header_accept_encoding}
            * `${header_accept_language}` - ${header_accept_language}
            * `${header_cookie}` - ${header_cookie}
            * `${header_origin}` - ${header_origin}
            * `${header_referer}` - ${header_referer}
            * `${header_user_agent}` - ${header_user_agent}
            * `${host}` - ${host}
            * `${network}` - ${network}
            * `${request_args}` - ${request_args}
            * `${request_method}` - ${request_method}
            * `${request_uri}` - ${request_uri}
            * `${scheme}` - ${scheme}
            * `${ssl_verification_status}` - ${ssl_verification_status}
            * `${client_certificate_validation}` - ${client_certificate_validation}
          title: EdgeFirewallCriterionFieldVariableEnum
          type: string
        operator:
          description: |-
            * `does_not_exist` - does_not_exist
            * `does_not_match` - does_not_match
            * `does_not_start_with` - does_not_start_with
            * `exists` - exists
            * `is_equal` - is_equal
            * `is_in_list` - is_in_list
            * `is_not_equal` - is_not_equal
            * `is_not_in_list` - is_not_in_list
            * `matches` - matches
            * `starts_with` - starts_with
          title: Operator565Enum
          type: string
        argument:
          allOf:
          - $ref: "#/components/schemas/EdgeFirewallCriterionPolymorphicArgumentRequest"
          nullable: true
      required:
      - conditional
      - operator
      - variable
      title: EdgeFirewallCriterionFieldRequest
      type: object
    EdgeFirewallCriterionFieldVariableEnum:
      description: |-
        * `${header_accept}` - ${header_accept}
        * `${header_accept_encoding}` - ${header_accept_encoding}
        * `${header_accept_language}` - ${header_accept_language}
        * `${header_cookie}` - ${header_cookie}
        * `${header_origin}` - ${header_origin}
        * `${header_referer}` - ${header_referer}
        * `${header_user_agent}` - ${header_user_agent}
        * `${host}` - ${host}
        * `${network}` - ${network}
        * `${request_args}` - ${request_args}
        * `${request_method}` - ${request_method}
        * `${request_uri}` - ${request_uri}
        * `${scheme}` - ${scheme}
        * `${ssl_verification_status}` - ${ssl_verification_status}
        * `${client_certificate_validation}` - ${client_certificate_validation}
      title: EdgeFirewallCriterionFieldVariableEnum
      type: string
    EdgeFirewallCriterionPolymorphicArgument:
      additionalProperties: false
      nullable: true
      oneOf:
      - description: "These values are only valid when using ${ssl_verification_status}\
          \ variable."
        type: string
      - format: int64
        type: integer
      - type: string
      title: EdgeFirewallCriterionPolymorphicArgument
    EdgeFirewallCriterionPolymorphicArgumentRequest:
      additionalProperties: false
      nullable: true
      oneOf:
      - description: "These values are only valid when using ${ssl_verification_status}\
          \ variable."
        type: string
      - format: int64
        type: integer
      - type: string
      title: EdgeFirewallCriterionPolymorphicArgumentRequest
    EdgeFunctionModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: EdgeFunctionModule
      type: object
    EdgeFunctionModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: EdgeFunctionModuleRequest
      type: object
    EdgeFunctions:
      additionalProperties: false
      example:
        product_version: product_version
        code: code
        last_editor: last_editor
        active: true
        runtime: ""
        azion_form:
          type: object
          properties:
            domain:
              type: string
              title: Domain
              description: Domain where the cookie will be valid (use '.' at the beginning
                for subdomains)
            max_age:
              type: integer
              title: Max Age (seconds)
              description: Cookie lifetime in seconds
              minimum: 1
              maximum: 31536000
              format: int64
            path:
              type: string
              title: Path
              description: Path where the cookie will be valid
            values:
              type: array
              title: Test Variations
              description: List of A/B test variations with their respective weights
              minItems: 2
              maxItems: 10
              items:
                type: object
                properties:
                  value:
                    type: string
                    title: Variation Value
                    description: Unique variation identifier
                    minLength: 1
                    maxLength: 50
                  weight:
                    type: integer
                    title: Weight
                    description: Variance weight (higher weight = higher probability)
                    minimum: 1
                    maximum: 100
                    format: int64
                required:
                - value
                - weight
                additionalProperties: false
          required:
          - domain
          - max_age
          - path
          - values
          additionalProperties: false
        version: version
        default_args: ""
        vendor: vendor
        name: name
        execution_environment: ""
        id: 0
        reference_count: 6
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        last_editor:
          maxLength: 250
          type: string
        last_modified:
          format: date-time
          type: string
        product_version:
          maxLength: 50
          type: string
        active:
          type: boolean
        runtime:
          allOf:
          - $ref: "#/components/schemas/RuntimeEnum"
        execution_environment:
          allOf:
          - $ref: "#/components/schemas/ExecutionEnvironmentEnum"
        code:
          description: "String containing the function code. Maximum size: 20MB."
          maxLength: 52428800
          minLength: 1
          type: string
        default_args: {}
        azion_form:
          $ref: "#/components/schemas/EdgeFunctions_azion_form"
        reference_count:
          format: int64
          type: integer
        version:
          description: "Installed version, which may not be the latest if the vendor\
            \ has released updates since installation."
          type: string
        vendor:
          type: string
      required:
      - code
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - reference_count
      - vendor
      - version
      title: EdgeFunctions
      type: object
    EdgeFunctionsRequest:
      additionalProperties: false
      example:
        code: code
        name: name
        active: true
        runtime: ""
        execution_environment: ""
        azion_form:
          type: object
          properties:
            domain:
              type: string
              title: Domain
              description: Domain where the cookie will be valid (use '.' at the beginning
                for subdomains)
            max_age:
              type: integer
              title: Max Age (seconds)
              description: Cookie lifetime in seconds
              minimum: 1
              maximum: 31536000
              format: int64
            path:
              type: string
              title: Path
              description: Path where the cookie will be valid
            values:
              type: array
              title: Test Variations
              description: List of A/B test variations with their respective weights
              minItems: 2
              maxItems: 10
              items:
                type: object
                properties:
                  value:
                    type: string
                    title: Variation Value
                    description: Unique variation identifier
                    minLength: 1
                    maxLength: 50
                  weight:
                    type: integer
                    title: Weight
                    description: Variance weight (higher weight = higher probability)
                    minimum: 1
                    maximum: 100
                    format: int64
                required:
                - value
                - weight
                additionalProperties: false
          required:
          - domain
          - max_age
          - path
          - values
          additionalProperties: false
        default_args: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        runtime:
          allOf:
          - $ref: "#/components/schemas/RuntimeEnum"
        execution_environment:
          allOf:
          - $ref: "#/components/schemas/ExecutionEnvironmentEnum"
        code:
          description: "String containing the function code. Maximum size: 20MB."
          maxLength: 52428800
          minLength: 1
          type: string
        default_args: {}
        azion_form:
          $ref: "#/components/schemas/EdgeFunctions_azion_form"
      required:
      - code
      - name
      title: EdgeFunctionsRequest
      type: object
    EngineVersionEnum:
      description: '* `2021-Q3` - 2021-Q3'
      title: EngineVersionEnum
      type: string
    ExecutionEnvironmentEnum:
      description: |-
        * `firewall` - Firewall
        * `application` - Application
      title: ExecutionEnvironmentEnum
      type: string
    Firewall:
      additionalProperties: false
      example:
        product_version: product_version
        debug: true
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        modules:
          ddos_protection: ""
          functions: ""
          network_protection: ""
          waf: ""
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        modules:
          $ref: "#/components/schemas/FirewallModules"
        debug:
          type: boolean
        active:
          type: boolean
        last_editor:
          maxLength: 250
          type: string
        last_modified:
          format: date-time
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: Firewall
      type: object
    FirewallBehaviorNoArguments:
      additionalProperties: true
      description: Behaviors without arguments
      properties:
        type:
          description: |-
            * `deny` - deny
            * `drop` - drop
          title: FirewallBehaviorNoArgumentsTypeEnum
          type: string
      required:
      - type
      title: FirewallBehaviorNoArguments
      type: object
    FirewallBehaviorNoArgumentsRequest:
      additionalProperties: true
      description: Behaviors without arguments
      properties:
        type:
          description: |-
            * `deny` - deny
            * `drop` - drop
          title: FirewallBehaviorNoArgumentsTypeEnum
          type: string
      required:
      - type
      title: FirewallBehaviorNoArgumentsRequest
      type: object
    FirewallBehaviorNoArgumentsTypeEnum:
      description: |-
        * `deny` - deny
        * `drop` - drop
      title: FirewallBehaviorNoArgumentsTypeEnum
      type: string
    FirewallBehaviorRunFunction:
      additionalProperties: true
      description: Run a function
      properties:
        type:
          description: '* `run_function` - run_function'
          title: Type689Enum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorRunFunctionAttributes"
      required:
      - attributes
      - type
      title: FirewallBehaviorRunFunction
      type: object
    FirewallBehaviorRunFunctionAttributes:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: FirewallBehaviorRunFunctionAttributes
      type: object
    FirewallBehaviorRunFunctionAttributesRequest:
      additionalProperties: true
      properties:
        value:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
      required:
      - value
      title: FirewallBehaviorRunFunctionAttributesRequest
      type: object
    FirewallBehaviorRunFunctionRequest:
      additionalProperties: true
      description: Run a function
      properties:
        type:
          description: '* `run_function` - run_function'
          title: Type689Enum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorRunFunctionAttributesRequest"
      required:
      - attributes
      - type
      title: FirewallBehaviorRunFunctionRequest
      type: object
    FirewallBehaviorSetCustomResponse:
      additionalProperties: true
      description: Set a custom response
      properties:
        type:
          description: '* `set_custom_response` - set_custom_response'
          title: FirewallBehaviorSetCustomResponseTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorSetCustomResponseAttributes"
      required:
      - attributes
      - type
      title: FirewallBehaviorSetCustomResponse
      type: object
    FirewallBehaviorSetCustomResponseAttributes:
      additionalProperties: true
      properties:
        status_code:
          format: int64
          maximum: 499
          minimum: 200
          type: integer
        content_type:
          maxLength: 255
          minLength: 0
          type: string
        content_body:
          maxLength: 500
          minLength: 0
          type: string
      required:
      - status_code
      title: FirewallBehaviorSetCustomResponseAttributes
      type: object
    FirewallBehaviorSetCustomResponseAttributesRequest:
      additionalProperties: true
      properties:
        status_code:
          format: int64
          maximum: 499
          minimum: 200
          type: integer
        content_type:
          maxLength: 255
          minLength: 0
          type: string
        content_body:
          maxLength: 500
          minLength: 0
          type: string
      required:
      - status_code
      title: FirewallBehaviorSetCustomResponseAttributesRequest
      type: object
    FirewallBehaviorSetCustomResponseRequest:
      additionalProperties: true
      description: Set a custom response
      properties:
        type:
          description: '* `set_custom_response` - set_custom_response'
          title: FirewallBehaviorSetCustomResponseTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorSetCustomResponseAttributesRequest"
      required:
      - attributes
      - type
      title: FirewallBehaviorSetCustomResponseRequest
      type: object
    FirewallBehaviorSetCustomResponseTypeEnum:
      description: '* `set_custom_response` - set_custom_response'
      title: FirewallBehaviorSetCustomResponseTypeEnum
      type: string
    FirewallBehaviorSetRateLimit:
      additionalProperties: true
      description: Set a rate limit
      properties:
        type:
          description: '* `set_rate_limit` - set_rate_limit'
          title: FirewallBehaviorSetRateLimitTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorSetRateLimitAttributes"
      required:
      - attributes
      - type
      title: FirewallBehaviorSetRateLimit
      type: object
    FirewallBehaviorSetRateLimitAttributes:
      additionalProperties: true
      properties:
        type:
          allOf:
          - $ref: "#/components/schemas/FirewallBehaviorSetRateLimitAttributesTypeEnum"
        limit_by:
          description: |-
            * `client_ip` - client_ip
            * `global` - global
          title: LimitByEnum
          type: string
        average_rate_limit:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
        maximum_burst_size:
          format: int64
          maximum: 2147483647
          minimum: 1
          nullable: true
          type: integer
      required:
      - average_rate_limit
      - limit_by
      title: FirewallBehaviorSetRateLimitAttributes
      type: object
    FirewallBehaviorSetRateLimitAttributesRequest:
      additionalProperties: true
      properties:
        type:
          allOf:
          - $ref: "#/components/schemas/FirewallBehaviorSetRateLimitAttributesTypeEnum"
        limit_by:
          description: |-
            * `client_ip` - client_ip
            * `global` - global
          title: LimitByEnum
          type: string
        average_rate_limit:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
        maximum_burst_size:
          format: int64
          maximum: 2147483647
          minimum: 1
          nullable: true
          type: integer
      required:
      - average_rate_limit
      - limit_by
      title: FirewallBehaviorSetRateLimitAttributesRequest
      type: object
    FirewallBehaviorSetRateLimitAttributesTypeEnum:
      description: |-
        * `second` - second
        * `minute` - minute
      title: FirewallBehaviorSetRateLimitAttributesTypeEnum
      type: string
    FirewallBehaviorSetRateLimitRequest:
      additionalProperties: true
      description: Set a rate limit
      properties:
        type:
          description: '* `set_rate_limit` - set_rate_limit'
          title: FirewallBehaviorSetRateLimitTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorSetRateLimitAttributesRequest"
      required:
      - attributes
      - type
      title: FirewallBehaviorSetRateLimitRequest
      type: object
    FirewallBehaviorSetRateLimitTypeEnum:
      description: '* `set_rate_limit` - set_rate_limit'
      title: FirewallBehaviorSetRateLimitTypeEnum
      type: string
    FirewallBehaviorSetWaf:
      additionalProperties: true
      description: Set a WAF
      properties:
        type:
          description: '* `set_waf` - set_waf'
          title: FirewallBehaviorSetWafTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorSetWafAttributes"
      required:
      - attributes
      - type
      title: FirewallBehaviorSetWaf
      type: object
    FirewallBehaviorSetWafAttributes:
      additionalProperties: true
      properties:
        waf_id:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        mode:
          description: |-
            * `logging` - logging
            * `blocking` - blocking
          title: ModeEnum
          type: string
      required:
      - mode
      - waf_id
      title: FirewallBehaviorSetWafAttributes
      type: object
    FirewallBehaviorSetWafAttributesRequest:
      additionalProperties: true
      properties:
        waf_id:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        mode:
          description: |-
            * `logging` - logging
            * `blocking` - blocking
          title: ModeEnum
          type: string
      required:
      - mode
      - waf_id
      title: FirewallBehaviorSetWafAttributesRequest
      type: object
    FirewallBehaviorSetWafRequest:
      additionalProperties: true
      description: Set a WAF
      properties:
        type:
          description: '* `set_waf` - set_waf'
          title: FirewallBehaviorSetWafTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorSetWafAttributesRequest"
      required:
      - attributes
      - type
      title: FirewallBehaviorSetWafRequest
      type: object
    FirewallBehaviorSetWafTypeEnum:
      description: '* `set_waf` - set_waf'
      title: FirewallBehaviorSetWafTypeEnum
      type: string
    FirewallBehaviorTagEvent:
      additionalProperties: true
      description: Tag event
      properties:
        type:
          description: '* `tag_event` - tag_event'
          title: FirewallBehaviorTagEventTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorTagEventAttributes"
      required:
      - attributes
      - type
      title: FirewallBehaviorTagEvent
      type: object
    FirewallBehaviorTagEventAttributes:
      additionalProperties: true
      properties:
        value:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - value
      title: FirewallBehaviorTagEventAttributes
      type: object
    FirewallBehaviorTagEventAttributesRequest:
      additionalProperties: true
      properties:
        value:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - value
      title: FirewallBehaviorTagEventAttributesRequest
      type: object
    FirewallBehaviorTagEventRequest:
      additionalProperties: true
      description: Tag event
      properties:
        type:
          description: '* `tag_event` - tag_event'
          title: FirewallBehaviorTagEventTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/FirewallBehaviorTagEventAttributesRequest"
      required:
      - attributes
      - type
      title: FirewallBehaviorTagEventRequest
      type: object
    FirewallBehaviorTagEventTypeEnum:
      description: '* `tag_event` - tag_event'
      title: FirewallBehaviorTagEventTypeEnum
      type: string
    FirewallBehaviors:
      additionalProperties: true
      discriminator:
        mapping:
          deny: "#/components/schemas/FirewallBehaviorsFirewallBehaviorNoArguments"
          drop: "#/components/schemas/FirewallBehaviorsFirewallBehaviorNoArguments"
          set_custom_response: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetCustomResponse"
          set_rate_limit: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetRateLimit"
          tag_event: "#/components/schemas/FirewallBehaviorsFirewallBehaviorTagEvent"
          set_waf: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetWaf"
          run_function: "#/components/schemas/FirewallBehaviorsFirewallBehaviorRunFunction"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorNoArguments"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetCustomResponse"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetRateLimit"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorTagEvent"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetWaf"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorRunFunction"
      title: FirewallBehaviors
    FirewallBehaviorsFirewallBehaviorNoArguments:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorNoArguments"
      example:
        type: type
      title: FirewallBehaviorsFirewallBehaviorNoArguments
    FirewallBehaviorsFirewallBehaviorNoArgumentsRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorNoArgumentsRequest"
      example:
        type: type
      title: FirewallBehaviorsFirewallBehaviorNoArgumentsRequest
    FirewallBehaviorsFirewallBehaviorRunFunction:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorRunFunction"
      title: FirewallBehaviorsFirewallBehaviorRunFunction
    FirewallBehaviorsFirewallBehaviorRunFunctionRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorRunFunctionRequest"
      title: FirewallBehaviorsFirewallBehaviorRunFunctionRequest
    FirewallBehaviorsFirewallBehaviorSetCustomResponse:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorSetCustomResponse"
      title: FirewallBehaviorsFirewallBehaviorSetCustomResponse
    FirewallBehaviorsFirewallBehaviorSetCustomResponseRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorSetCustomResponseRequest"
      title: FirewallBehaviorsFirewallBehaviorSetCustomResponseRequest
    FirewallBehaviorsFirewallBehaviorSetRateLimit:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorSetRateLimit"
      title: FirewallBehaviorsFirewallBehaviorSetRateLimit
    FirewallBehaviorsFirewallBehaviorSetRateLimitRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorSetRateLimitRequest"
      title: FirewallBehaviorsFirewallBehaviorSetRateLimitRequest
    FirewallBehaviorsFirewallBehaviorSetWaf:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorSetWaf"
      title: FirewallBehaviorsFirewallBehaviorSetWaf
    FirewallBehaviorsFirewallBehaviorSetWafRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorSetWafRequest"
      title: FirewallBehaviorsFirewallBehaviorSetWafRequest
    FirewallBehaviorsFirewallBehaviorTagEvent:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorTagEvent"
      title: FirewallBehaviorsFirewallBehaviorTagEvent
    FirewallBehaviorsFirewallBehaviorTagEventRequest:
      additionalProperties: true
      allOf:
      - $ref: "#/components/schemas/FirewallBehaviorsShared"
      - $ref: "#/components/schemas/FirewallBehaviorTagEventRequest"
      title: FirewallBehaviorsFirewallBehaviorTagEventRequest
    FirewallBehaviorsRequest:
      additionalProperties: true
      discriminator:
        mapping:
          deny: "#/components/schemas/FirewallBehaviorsFirewallBehaviorNoArgumentsRequest"
          drop: "#/components/schemas/FirewallBehaviorsFirewallBehaviorNoArgumentsRequest"
          set_custom_response: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetCustomResponseRequest"
          set_rate_limit: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetRateLimitRequest"
          tag_event: "#/components/schemas/FirewallBehaviorsFirewallBehaviorTagEventRequest"
          set_waf: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetWafRequest"
          run_function: "#/components/schemas/FirewallBehaviorsFirewallBehaviorRunFunctionRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorNoArgumentsRequest"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetCustomResponseRequest"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetRateLimitRequest"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorTagEventRequest"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorSetWafRequest"
      - $ref: "#/components/schemas/FirewallBehaviorsFirewallBehaviorRunFunctionRequest"
      title: FirewallBehaviorsRequest
    FirewallBehaviorsShared:
      additionalProperties: true
      description: |-
        Polymorphic serializer base class.

        Note that the discriminator field must exist at the same depth as the mapped
        serializer fields for the OpenAPI introspection. See
        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for
        more information. As such, it's not possible to define something like:

        {
            "object_type": "foo",
            "polymorphic_context": {
                <foo-specific fields>
            }
        }

        without explicitly wrapping this in a parent serializer, i.e. -
        ``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires
        access to the ``object_type`` in the parent scope.
      properties:
        type:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - type
      title: FirewallBehaviorsShared
      type: object
    FirewallFunctionInstance:
      additionalProperties: false
      description: Serializer for Firewall Function Instances
      example:
        args: ""
        function: 5559347081229897728
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 100
          minLength: 1
          type: string
        args: {}
        function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
        last_editor:
          maxLength: 250
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - function
      - id
      - last_editor
      - last_modified
      - name
      title: FirewallFunctionInstance
      type: object
    FirewallFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Firewall Function Instances
      example:
        args: ""
        function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        args: {}
        function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      required:
      - function
      - name
      title: FirewallFunctionInstanceRequest
      type: object
    FirewallModule:
      additionalProperties: false
      description: |-
        Serializer for individual modules in Firewall.

        Handles serialization and deserialization of module settings with an enabled flag.
      properties:
        enabled:
          type: boolean
      title: FirewallModule
      type: object
    FirewallModuleRequest:
      additionalProperties: false
      description: |-
        Serializer for individual modules in Firewall.

        Handles serialization and deserialization of module settings with an enabled flag.
      properties:
        enabled:
          type: boolean
      title: FirewallModuleRequest
      type: object
    FirewallModules:
      additionalProperties: false
      example:
        ddos_protection: ""
        functions: ""
        network_protection: ""
        waf: ""
      properties:
        ddos_protection:
          allOf:
          - $ref: "#/components/schemas/FirewallModule"
        functions:
          allOf:
          - $ref: "#/components/schemas/FirewallModule"
        network_protection:
          allOf:
          - $ref: "#/components/schemas/FirewallModule"
        waf:
          allOf:
          - $ref: "#/components/schemas/FirewallModule"
      required:
      - ddos_protection
      title: FirewallModules
      type: object
    FirewallModulesRequest:
      additionalProperties: false
      example:
        functions: ""
        network_protection: ""
        waf: ""
      properties:
        functions:
          allOf:
          - $ref: "#/components/schemas/FirewallModuleRequest"
        network_protection:
          allOf:
          - $ref: "#/components/schemas/FirewallModuleRequest"
        waf:
          allOf:
          - $ref: "#/components/schemas/FirewallModuleRequest"
      title: FirewallModulesRequest
      type: object
    FirewallRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          functions: ""
          network_protection: ""
          waf: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        modules:
          $ref: "#/components/schemas/FirewallModulesRequest"
        debug:
          type: boolean
        active:
          type: boolean
      required:
      - name
      title: FirewallRequest
      type: object
    FirewallRuleEngine:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        last_editor: last_editor
        name: name
        active: true
        description: description
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        order: 119
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        last_editor:
          maxLength: 255
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeFirewallCriterionField"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/FirewallBehaviors"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
        order:
          format: int64
          maximum: 199
          minimum: 0
          type: integer
      required:
      - behaviors
      - criteria
      - id
      - last_editor
      - last_modified
      - name
      - order
      title: FirewallRuleEngine
      type: object
    FirewallRuleEngineOrderRequest:
      additionalProperties: false
      example:
        order:
        - 738633633822310400
        - 738633633822310400
      properties:
        order:
          items:
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          type: array
      required:
      - order
      title: FirewallRuleEngineOrderRequest
      type: object
    FirewallRuleEngineRequest:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeFirewallCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/FirewallBehaviorsRequest"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
      required:
      - behaviors
      - criteria
      - name
      title: FirewallRuleEngineRequest
      type: object
    HMAC:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
        config:
          allOf:
          - $ref: "#/components/schemas/HMACPolymorphic"
          nullable: true
      title: HMAC
      type: object
    HMACPolymorphic:
      $ref: "#/components/schemas/AWS4HMAC"
    HMACPolymorphicRequest:
      $ref: "#/components/schemas/AWS4HMACRequest"
    HMACRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
        config:
          allOf:
          - $ref: "#/components/schemas/HMACPolymorphicRequest"
          nullable: true
      title: HMACRequest
      type: object
    HTTPConnectionOptions:
      additionalProperties: false
      properties:
        dns_resolution:
          allOf:
          - $ref: "#/components/schemas/DnsResolutionEnum"
          description: |-
            DNS resolution policy: preserve, force IPv4, or force IPv6 usage when connecting.

            * `preserve` - Preserve
            * `force_ipv4` - Force IPv4
            * `force_ipv6` - Force IPv6
        transport_policy:
          allOf:
          - $ref: "#/components/schemas/TransportPolicyEnum"
          description: |-
            Transport protocol policy: preserve current scheme, force HTTP, or force HTTPS.

            * `preserve` - Preserve
            * `force_https` - Force HTTPS
            * `force_http` - Force HTTP
        http_version_policy:
          allOf:
          - $ref: "#/components/schemas/HttpVersionPolicyEnum"
          description: |-
            Defines the HTTP version preference for outbound connections (e.g., HTTP/1.1).

            * `http1_1` - HTTP/1.1
        host:
          description: Optional custom host used to override the default target hostname
            during connection.
          maxLength: 255
          minLength: 1
          type: string
        path_prefix:
          description: "Optional prefix to add to all request paths (e.g., '/v1')."
          maxLength: 255
          minLength: 0
          type: string
        following_redirect:
          description: "If true, automatically follows HTTP redirects from the target\
            \ server."
          type: boolean
        real_ip_header:
          description: Header name used to forward the original client IP address.
          maxLength: 100
          minLength: 1
          type: string
        real_port_header:
          description: Header name used to forward the original client port.
          maxLength: 100
          minLength: 1
          type: string
      title: HTTPConnectionOptions
      type: object
    HTTPConnectionOptionsRequest:
      additionalProperties: false
      properties:
        dns_resolution:
          allOf:
          - $ref: "#/components/schemas/DnsResolutionEnum"
          description: |-
            DNS resolution policy: preserve, force IPv4, or force IPv6 usage when connecting.

            * `preserve` - Preserve
            * `force_ipv4` - Force IPv4
            * `force_ipv6` - Force IPv6
        transport_policy:
          allOf:
          - $ref: "#/components/schemas/TransportPolicyEnum"
          description: |-
            Transport protocol policy: preserve current scheme, force HTTP, or force HTTPS.

            * `preserve` - Preserve
            * `force_https` - Force HTTPS
            * `force_http` - Force HTTP
        http_version_policy:
          allOf:
          - $ref: "#/components/schemas/HttpVersionPolicyEnum"
          description: |-
            Defines the HTTP version preference for outbound connections (e.g., HTTP/1.1).

            * `http1_1` - HTTP/1.1
        host:
          description: Optional custom host used to override the default target hostname
            during connection.
          maxLength: 255
          minLength: 1
          type: string
        path_prefix:
          description: "Optional prefix to add to all request paths (e.g., '/v1')."
          maxLength: 255
          minLength: 0
          type: string
        following_redirect:
          description: "If true, automatically follows HTTP redirects from the target\
            \ server."
          type: boolean
        real_ip_header:
          description: Header name used to forward the original client IP address.
          maxLength: 100
          minLength: 1
          type: string
        real_port_header:
          description: Header name used to forward the original client port.
          maxLength: 100
          minLength: 1
          type: string
      title: HTTPConnectionOptionsRequest
      type: object
    HTTPModules:
      additionalProperties: false
      properties:
        load_balancer:
          allOf:
          - $ref: "#/components/schemas/LoadBalancerModule"
        origin_shield:
          allOf:
          - $ref: "#/components/schemas/OriginShieldModule"
      title: HTTPModules
      type: object
    HTTPModulesRequest:
      additionalProperties: false
      properties:
        load_balancer:
          allOf:
          - $ref: "#/components/schemas/LoadBalancerModuleRequest"
        origin_shield:
          allOf:
          - $ref: "#/components/schemas/OriginShieldModuleRequest"
      title: HTTPModulesRequest
      type: object
    HttpProtocol:
      additionalProperties: false
      properties:
        versions:
          items:
            maxLength: 30
            type: string
          maxItems: 3
          type: array
        http_ports:
          items:
            format: int64
            type: integer
          maxItems: 4
          minItems: 1
          type: array
        https_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          minItems: 1
          nullable: true
          type: array
        quic_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          nullable: true
          type: array
      title: HttpProtocol
      type: object
    HttpProtocolRequest:
      additionalProperties: false
      properties:
        versions:
          items:
            maxLength: 30
            minLength: 1
            type: string
          maxItems: 3
          type: array
        http_ports:
          items:
            format: int64
            type: integer
          maxItems: 4
          minItems: 1
          type: array
        https_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          minItems: 1
          nullable: true
          type: array
        quic_ports:
          items:
            format: int64
            type: integer
          maxItems: 12
          nullable: true
          type: array
      title: HttpProtocolRequest
      type: object
    HttpVersionPolicyEnum:
      description: '* `http1_1` - HTTP/1.1'
      title: HttpVersionPolicyEnum
      type: string
    ImageProcessorModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: ImageProcessorModule
      type: object
    ImageProcessorModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: ImageProcessorModuleRequest
      type: object
    InfrastructureEnum:
      description: |-
        * `1` - Production Infrastructure (All Edge Locations)
        * `2` - Staging Infrastructure
      format: int64
      title: InfrastructureEnum
      type: integer
    JSONAPIErrorObject:
      additionalProperties: false
      description: Serializer for a single JSON:API error object.
      example:
        code: code
        meta:
          key: ""
        detail: detail
        source: ""
        title: title
        status: status
      properties:
        status:
          description: The HTTP status code applicable to this problem
          maxLength: 3
          minLength: 3
          type: string
        code:
          description: An application-specific error code
          maxLength: 5
          minLength: 5
          type: string
        title:
          description: "A short, human-readable summary of the problem"
          maxLength: 4096
          minLength: 1
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          maxLength: 4096
          minLength: 1
          type: string
        source:
          allOf:
          - $ref: "#/components/schemas/JSONAPIErrorSource"
          description: References to the primary source of the error
        meta:
          additionalProperties: {}
          description: Non-standard meta-information about the error
          type: object
      title: JSONAPIErrorObject
      type: object
    JSONAPIErrorResponse:
      additionalProperties: false
      description: Serializer for a JSON:API error response.
      example:
        errors:
        - code: code
          meta:
            key: ""
          detail: detail
          source: ""
          title: title
          status: status
        - code: code
          meta:
            key: ""
          detail: detail
          source: ""
          title: title
          status: status
      properties:
        errors:
          description: Array of error objects
          items:
            $ref: "#/components/schemas/JSONAPIErrorObject"
          type: array
      required:
      - errors
      title: JSONAPIErrorResponse
      type: object
    JSONAPIErrorSource:
      additionalProperties: false
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          description: JSON Pointer to the value in the request document that caused
            the error
          maxLength: 4096
          minLength: 1
          type: string
        parameter:
          description: URI query parameter that caused the error
          maxLength: 4096
          minLength: 1
          type: string
        header:
          description: Request header name that caused the error
          maxLength: 4096
          minLength: 1
          type: string
      title: JSONAPIErrorSource
      type: object
    LargeFileCacheModule:
      additionalProperties: false
      example:
        offset: 1024
        enabled: true
      properties:
        enabled:
          type: boolean
        offset:
          format: int64
          maximum: 1024
          minimum: 1024
          type: integer
      title: LargeFileCacheModule
      type: object
    LargeFileCacheModuleRequest:
      additionalProperties: false
      example:
        offset: 1024
        enabled: true
      properties:
        enabled:
          type: boolean
        offset:
          format: int64
          maximum: 1024
          minimum: 1024
          type: integer
      title: LargeFileCacheModuleRequest
      type: object
    LayerEnum:
      description: |-
        * `edge_cache` - Edge Cache
        * `tiered_cache` - Tiered Cache
      title: LayerEnum
      type: string
    LimitByEnum:
      description: |-
        * `client_ip` - client_ip
        * `global` - global
      title: LimitByEnum
      type: string
    LoadBalancerModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
        config:
          allOf:
          - $ref: "#/components/schemas/LoadBalancerModuleConfig"
          nullable: true
      title: LoadBalancerModule
      type: object
    LoadBalancerModuleConfig:
      additionalProperties: false
      properties:
        method:
          allOf:
          - $ref: "#/components/schemas/MethodEnum"
          description: |-
            Load balancing method to use (e.g., round-robin, least_conn).

            * `round_robin` - Round Robin
            * `least_conn` - Least Connections
            * `ip_hash` - IP Hash
        max_retries:
          description: Maximum number of retry attempts on connection failure.
          format: int64
          maximum: 20
          minimum: 0
          type: integer
        connection_timeout:
          description: Maximum time (in seconds) to wait for a connection to be established.
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          description: Maximum time (in seconds) to wait for data read/write after
            connection.
          format: int64
          maximum: 600
          minimum: 1
          type: integer
      title: LoadBalancerModuleConfig
      type: object
    LoadBalancerModuleConfigRequest:
      additionalProperties: false
      properties:
        method:
          allOf:
          - $ref: "#/components/schemas/MethodEnum"
          description: |-
            Load balancing method to use (e.g., round-robin, least_conn).

            * `round_robin` - Round Robin
            * `least_conn` - Least Connections
            * `ip_hash` - IP Hash
        max_retries:
          description: Maximum number of retry attempts on connection failure.
          format: int64
          maximum: 20
          minimum: 0
          type: integer
        connection_timeout:
          description: Maximum time (in seconds) to wait for a connection to be established.
          format: int64
          maximum: 300
          minimum: 1
          type: integer
        read_write_timeout:
          description: Maximum time (in seconds) to wait for data read/write after
            connection.
          format: int64
          maximum: 600
          minimum: 1
          type: integer
      title: LoadBalancerModuleConfigRequest
      type: object
    LoadBalancerModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
        config:
          allOf:
          - $ref: "#/components/schemas/LoadBalancerModuleConfigRequest"
          nullable: true
      title: LoadBalancerModuleRequest
      type: object
    MTLS:
      additionalProperties: false
      example:
        certificate: 1
        crl:
        - 1
        - 1
        - 1
        - 1
        - 1
        verification: null
      properties:
        verification:
          $ref: "#/components/schemas/MTLS_verification"
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        crl:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 100
          nullable: true
          type: array
      title: MTLS
      type: object
    MTLSRequest:
      additionalProperties: false
      example:
        certificate: 1
        crl:
        - 1
        - 1
        - 1
        - 1
        - 1
        verification: null
      properties:
        verification:
          $ref: "#/components/schemas/MTLS_verification"
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        crl:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 100
          nullable: true
          type: array
      title: MTLSRequest
      type: object
    MethodEnum:
      description: |-
        * `round_robin` - Round Robin
        * `least_conn` - Least Connections
        * `ip_hash` - IP Hash
      title: MethodEnum
      type: string
    MinimumVersionEnum:
      description: |-
        * `` - None
        * `tls_1_0` - TLS 1.0
        * `tls_1_1` - TLS 1.1
        * `tls_1_2` - TLS 1.2
        * `tls_1_3` - TLS 1.3
      title: MinimumVersionEnum
      type: string
    ModeEnum:
      description: |-
        * `logging` - logging
        * `blocking` - blocking
      title: ModeEnum
      type: string
    NetworkList:
      additionalProperties: false
      example:
        last_editor: last_editor
        name: name
        active: true
        id: 0
        type: type
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        last_editor:
          maxLength: 250
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
      required:
      - id
      - last_editor
      - last_modified
      - name
      - type
      title: NetworkList
      type: object
    NetworkListDetail:
      additionalProperties: false
      description: |-
        A Network List item can be one of the following formats:


        1. IP Addresses (IPv4/IPv6):

            - Simple IPv4: 192.168.0.1

            - IPv4 with CIDR: 192.168.0.1/24

            - Simple IPv6: 2001:db8:3333:4444:5555:6666:7777:8888

            - IPv6 with CIDR: 2001:db8::/32

            - IP with expiration date: 192.168.0.1 --LT2025-05-29T12:25:23Z

                (The expiration date format is --LT followed by ISO8601 date in UTC timezone)


        2. Country Codes:

            - Two-character uppercase alphanumeric country code (ISO 3166-1 alpha-2)

            - Examples: BR, US, DE, JP


        3. Autonomous System Numbers (ASN):

            - Number composed of digits only

            - Examples: 1234, 5678, 13335
      example:
        last_editor: last_editor
        name: name
        active: true
        id: 0
        type: type
        items:
        - items
        - items
        - items
        - items
        - items
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        items:
          items:
            maxLength: 250
            minLength: 0
            type: string
          maxItems: 20000
          minItems: 1
          type: array
        last_editor:
          maxLength: 250
          type: string
        last_modified:
          format: date-time
          type: string
        active:
          type: boolean
      required:
      - id
      - items
      - last_editor
      - last_modified
      - name
      - type
      title: NetworkListDetail
      type: object
    NetworkListDetailRequest:
      additionalProperties: false
      description: |-
        A Network List item can be one of the following formats:


        1. IP Addresses (IPv4/IPv6):

            - Simple IPv4: 192.168.0.1

            - IPv4 with CIDR: 192.168.0.1/24

            - Simple IPv6: 2001:db8:3333:4444:5555:6666:7777:8888

            - IPv6 with CIDR: 2001:db8::/32

            - IP with expiration date: 192.168.0.1 --LT2025-05-29T12:25:23Z

                (The expiration date format is --LT followed by ISO8601 date in UTC timezone)


        2. Country Codes:

            - Two-character uppercase alphanumeric country code (ISO 3166-1 alpha-2)

            - Examples: BR, US, DE, JP


        3. Autonomous System Numbers (ASN):

            - Number composed of digits only

            - Examples: 1234, 5678, 13335
      example:
        name: name
        active: true
        type: type
        items:
        - items
        - items
        - items
        - items
        - items
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        items:
          items:
            maxLength: 250
            minLength: 1
            type: string
          maxItems: 20000
          minItems: 1
          type: array
        active:
          type: boolean
      required:
      - items
      - name
      - type
      title: NetworkListDetailRequest
      type: object
    NullEnum:
      additionalProperties: false
      title: NullEnum
      type: object
    Operator565Enum:
      description: |-
        * `does_not_exist` - does_not_exist
        * `does_not_match` - does_not_match
        * `does_not_start_with` - does_not_start_with
        * `exists` - exists
        * `is_equal` - is_equal
        * `is_in_list` - is_in_list
        * `is_not_equal` - is_not_equal
        * `is_not_in_list` - is_not_in_list
        * `matches` - matches
        * `starts_with` - starts_with
      title: Operator565Enum
      type: string
    OriginIPACL:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: OriginIPACL
      type: object
    OriginIPACLRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: OriginIPACLRequest
      type: object
    OriginShieldConfig:
      additionalProperties: false
      properties:
        origin_ip_acl:
          $ref: "#/components/schemas/OriginIPACL"
        hmac:
          $ref: "#/components/schemas/HMAC"
      title: OriginShieldConfig
      type: object
    OriginShieldConfigRequest:
      additionalProperties: false
      properties:
        origin_ip_acl:
          $ref: "#/components/schemas/OriginIPACLRequest"
        hmac:
          $ref: "#/components/schemas/HMACRequest"
      title: OriginShieldConfigRequest
      type: object
    OriginShieldModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
        config:
          allOf:
          - $ref: "#/components/schemas/OriginShieldConfig"
          nullable: true
      title: OriginShieldModule
      type: object
    OriginShieldModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
        config:
          allOf:
          - $ref: "#/components/schemas/OriginShieldConfigRequest"
          nullable: true
      title: OriginShieldModuleRequest
      type: object
    Page:
      additionalProperties: false
      example:
        code: code
        page:
          attributes:
            connector: 6
            custom_status_code: 397
            ttl: 4622587
            uri: uri
          type: type
      properties:
        code:
          description: |-
            * `default` - default
            * `400` - Bad Request
            * `401` - Unauthorized
            * `403` - Forbidden
            * `404` - Not Found
            * `405` - Method Not Allowed
            * `406` - Not Acceptable
            * `408` - Request Timeout
            * `409` - Conflict
            * `410` - Gone
            * `411` - Length Required
            * `414` - URI Too Long
            * `415` - Unsupported Media Type
            * `416` - Range Not Satisfiable
            * `426` - Upgrade Required
            * `429` - Too Many Requests
            * `431` - Request Header Fields Too Large
            * `500` - Internal Server Error
            * `501` - Not Implemented
            * `502` - Bad Gateway
            * `503` - Service Unavailable
            * `504` - Gateway Timeout
            * `505` - HTTP Version Not Supported
          title: CodeEnum
          type: string
        page:
          $ref: "#/components/schemas/PageConnector"
      required:
      - code
      - page
      title: Page
      type: object
    PageConnector:
      additionalProperties: false
      example:
        attributes:
          connector: 6
          custom_status_code: 397
          ttl: 4622587
          uri: uri
        type: type
      properties:
        type:
          maxLength: 255
          minLength: 1
          type: string
        attributes:
          $ref: "#/components/schemas/PageConnectorAttributes"
      required:
      - attributes
      title: PageConnector
      type: object
    PageConnectorAttributes:
      additionalProperties: false
      example:
        connector: 6
        custom_status_code: 397
        ttl: 4622587
        uri: uri
      properties:
        connector:
          format: int64
          type: integer
        ttl:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        uri:
          maxLength: 250
          minLength: 1
          nullable: true
          type: string
        custom_status_code:
          format: int64
          maximum: 599
          minimum: 100
          nullable: true
          type: integer
      required:
      - connector
      title: PageConnectorAttributes
      type: object
    PageConnectorAttributesRequest:
      additionalProperties: false
      example:
        connector: 0
        custom_status_code: 173
        ttl: 19008185
        uri: uri
      properties:
        connector:
          format: int64
          type: integer
        ttl:
          format: int64
          maximum: 31536000
          minimum: 0
          type: integer
        uri:
          maxLength: 250
          minLength: 1
          nullable: true
          type: string
        custom_status_code:
          format: int64
          maximum: 599
          minimum: 100
          nullable: true
          type: integer
      required:
      - connector
      title: PageConnectorAttributesRequest
      type: object
    PageConnectorRequest:
      additionalProperties: false
      example:
        attributes:
          connector: 0
          custom_status_code: 173
          ttl: 19008185
          uri: uri
        type: type
      properties:
        type:
          maxLength: 255
          minLength: 1
          type: string
        attributes:
          $ref: "#/components/schemas/PageConnectorAttributesRequest"
      required:
      - attributes
      title: PageConnectorRequest
      type: object
    PagePolymorphic:
      $ref: "#/components/schemas/PageConnector"
    PagePolymorphicRequest:
      $ref: "#/components/schemas/PageConnectorRequest"
    PageRequest:
      additionalProperties: false
      example:
        code: code
        page:
          attributes:
            connector: 0
            custom_status_code: 173
            ttl: 19008185
            uri: uri
          type: type
      properties:
        code:
          description: |-
            * `default` - default
            * `400` - Bad Request
            * `401` - Unauthorized
            * `403` - Forbidden
            * `404` - Not Found
            * `405` - Method Not Allowed
            * `406` - Not Acceptable
            * `408` - Request Timeout
            * `409` - Conflict
            * `410` - Gone
            * `411` - Length Required
            * `414` - URI Too Long
            * `415` - Unsupported Media Type
            * `416` - Range Not Satisfiable
            * `426` - Upgrade Required
            * `429` - Too Many Requests
            * `431` - Request Header Fields Too Large
            * `500` - Internal Server Error
            * `501` - Not Implemented
            * `502` - Bad Gateway
            * `503` - Service Unavailable
            * `504` - Gateway Timeout
            * `505` - HTTP Version Not Supported
          title: CodeEnum
          type: string
        page:
          $ref: "#/components/schemas/PageConnectorRequest"
      required:
      - code
      - page
      title: PageRequest
      type: object
    PaginatedApplicationDeviceGroupsList:
      additionalProperties: false
      example:
        count: 123
        results:
        - name: name
          id: 0
          user_agent: user_agent
        - name: name
          id: 0
          user_agent: user_agent
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ApplicationDeviceGroups"
          type: array
      title: PaginatedApplicationDeviceGroupsList
      type: object
    PaginatedApplicationFunctionInstanceList:
      additionalProperties: false
      example:
        count: 123
        results:
        - args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ApplicationFunctionInstance"
          type: array
      title: PaginatedApplicationFunctionInstanceList
      type: object
    PaginatedApplicationList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache: ""
            application_accelerator: ""
            functions: ""
            tiered_cache: ""
            image_processor: ""
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache: ""
            application_accelerator: ""
            functions: ""
            tiered_cache: ""
            image_processor: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/Application"
          type: array
      title: PaginatedApplicationList
      type: object
    PaginatedApplicationRequestPhaseRuleEngineList:
      additionalProperties: false
      example:
        count: 123
        results:
        - criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        - criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngine"
          type: array
      title: PaginatedApplicationRequestPhaseRuleEngineList
      type: object
    PaginatedApplicationResponsePhaseRuleEngineList:
      additionalProperties: false
      example:
        count: 123
        results:
        - criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        - criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ApplicationResponsePhaseRuleEngine"
          type: array
      title: PaginatedApplicationResponsePhaseRuleEngineList
      type: object
    PaginatedConnectorPolymorphicList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          attributes:
            addresses:
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            connection_options: ""
            modules: ""
          id: 0
          type: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          attributes:
            addresses:
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            connection_options: ""
            modules: ""
          id: 0
          type: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ConnectorPolymorphic"
          type: array
      title: PaginatedConnectorPolymorphicList
      type: object
    PaginatedCustomPageList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          pages:
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          pages:
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/CustomPage"
          type: array
      title: PaginatedCustomPageList
      type: object
    PaginatedEdgeFunctionsList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          runtime: ""
          azion_form:
            type: object
            properties:
              domain:
                type: string
                title: Domain
                description: Domain where the cookie will be valid (use '.' at the
                  beginning for subdomains)
              max_age:
                type: integer
                title: Max Age (seconds)
                description: Cookie lifetime in seconds
                minimum: 1
                maximum: 31536000
                format: int64
              path:
                type: string
                title: Path
                description: Path where the cookie will be valid
              values:
                type: array
                title: Test Variations
                description: List of A/B test variations with their respective weights
                minItems: 2
                maxItems: 10
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      title: Variation Value
                      description: Unique variation identifier
                      minLength: 1
                      maxLength: 50
                    weight:
                      type: integer
                      title: Weight
                      description: Variance weight (higher weight = higher probability)
                      minimum: 1
                      maximum: 100
                      format: int64
                  required:
                  - value
                  - weight
                  additionalProperties: false
            required:
            - domain
            - max_age
            - path
            - values
            additionalProperties: false
          version: version
          default_args: ""
          vendor: vendor
          name: name
          execution_environment: ""
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          runtime: ""
          azion_form:
            type: object
            properties:
              domain:
                type: string
                title: Domain
                description: Domain where the cookie will be valid (use '.' at the
                  beginning for subdomains)
              max_age:
                type: integer
                title: Max Age (seconds)
                description: Cookie lifetime in seconds
                minimum: 1
                maximum: 31536000
                format: int64
              path:
                type: string
                title: Path
                description: Path where the cookie will be valid
              values:
                type: array
                title: Test Variations
                description: List of A/B test variations with their respective weights
                minItems: 2
                maxItems: 10
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      title: Variation Value
                      description: Unique variation identifier
                      minLength: 1
                      maxLength: 50
                    weight:
                      type: integer
                      title: Weight
                      description: Variance weight (higher weight = higher probability)
                      minimum: 1
                      maximum: 100
                      format: int64
                  required:
                  - value
                  - weight
                  additionalProperties: false
            required:
            - domain
            - max_age
            - path
            - values
            additionalProperties: false
          version: version
          default_args: ""
          vendor: vendor
          name: name
          execution_environment: ""
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/EdgeFunctions"
          type: array
      title: PaginatedEdgeFunctionsList
      type: object
    PaginatedFirewallFunctionInstanceList:
      additionalProperties: false
      example:
        count: 123
        results:
        - args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/FirewallFunctionInstance"
          type: array
      title: PaginatedFirewallFunctionInstanceList
      type: object
    PaginatedFirewallList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            functions: ""
            network_protection: ""
            waf: ""
        - product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            functions: ""
            network_protection: ""
            waf: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/Firewall"
          type: array
      title: PaginatedFirewallList
      type: object
    PaginatedFirewallRuleEngineList:
      additionalProperties: false
      example:
        count: 123
        results:
        - criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        - criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/FirewallRuleEngine"
          type: array
      title: PaginatedFirewallRuleEngineList
      type: object
    PaginatedNetworkListList:
      additionalProperties: false
      example:
        count: 123
        results:
        - last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
        - last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/NetworkList"
          type: array
      title: PaginatedNetworkListList
      type: object
    PaginatedResponseListCacheSettingList:
      additionalProperties: false
      example:
        count: 123
        results:
        - browser_cache:
            max_age: 19008185
            behavior: ""
          name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              large_file_cache:
                offset: 1024
                enabled: true
              behavior: ""
              stale_cache:
                enabled: true
            application_accelerator:
              cache_vary_by_querystring:
                behavior: ""
                fields:
                - fields
                - fields
                sort_enabled: true
              cache_vary_by_devices:
                device_group:
                - 5
                - 5
                behavior: ""
              cache_vary_by_method:
              - null
              - null
              cache_vary_by_cookies:
                cookie_names:
                - cookie_names
                - cookie_names
                behavior: ""
            tiered_cache: ""
        - browser_cache:
            max_age: 19008185
            behavior: ""
          name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              large_file_cache:
                offset: 1024
                enabled: true
              behavior: ""
              stale_cache:
                enabled: true
            application_accelerator:
              cache_vary_by_querystring:
                behavior: ""
                fields:
                - fields
                - fields
                sort_enabled: true
              cache_vary_by_devices:
                device_group:
                - 5
                - 5
                behavior: ""
              cache_vary_by_method:
              - null
              - null
              cache_vary_by_cookies:
                cookie_names:
                - cookie_names
                - cookie_names
                behavior: ""
            tiered_cache: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ResponseListCacheSetting"
          type: array
      title: PaginatedResponseListCacheSettingList
      type: object
    PaginatedWAFList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/WAF"
          type: array
      title: PaginatedWAFList
      type: object
    PaginatedWAFRuleList:
      additionalProperties: false
      example:
        count: 123
        results:
        - rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
        - rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/WAFRule"
          type: array
      title: PaginatedWAFRuleList
      type: object
    PaginatedWorkloadDeploymentList:
      additionalProperties: false
      example:
        count: 123
        results:
        - current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            attributes:
              application: 5559347081229897728
              firewall: 1
              custom_page: 1
            type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
        - current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            attributes:
              application: 5559347081229897728
              firewall: 1
              custom_page: 1
            type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/WorkloadDeployment"
          type: array
      title: PaginatedWorkloadDeploymentList
      type: object
    PaginatedWorkloadList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
        - product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/Workload"
          type: array
      title: PaginatedWorkloadList
      type: object
    PatchedApplicationDeviceGroupsRequest:
      additionalProperties: false
      example:
        name: name
        user_agent: user_agent
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        user_agent:
          description: Enter a valid regular expression pattern to identify user agents.
          maxLength: 512
          minLength: 1
          type: string
      title: PatchedApplicationDeviceGroupsRequest
      type: object
    PatchedApplicationFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Application Function Instances
      example:
        args: ""
        function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        args: {}
        function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      title: PatchedApplicationFunctionInstanceRequest
      type: object
    PatchedApplicationRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          edge_cache: ""
          application_accelerator: ""
          functions: ""
          tiered_cache: ""
          image_processor: ""
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        modules:
          $ref: "#/components/schemas/ApplicationModulesRequest"
        active:
          type: boolean
        debug:
          type: boolean
      title: PatchedApplicationRequest
      type: object
    PatchedApplicationRequestPhaseRuleEngineRequest:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/ApplicationRuleEngineRequestPhaseBehaviorsRequest"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
      title: PatchedApplicationRequestPhaseRuleEngineRequest
      type: object
    PatchedApplicationResponsePhaseRuleEngineRequest:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeApplicationCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/ApplicationRuleEngineResponsePhaseBehaviorsRequest"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
      title: PatchedApplicationResponsePhaseRuleEngineRequest
      type: object
    PatchedCacheSettingRequest:
      additionalProperties: false
      example:
        browser_cache:
          max_age: 2525491
          behavior: ""
        name: name
        modules:
          edge_cache:
            max_age: 19008185
            large_file_cache:
              offset: 1024
              enabled: true
            behavior: ""
            stale_cache:
              enabled: true
          application_accelerator:
            cache_vary_by_querystring:
              behavior: ""
              fields:
              - fields
              - fields
              sort_enabled: true
            cache_vary_by_devices:
              device_group:
              - 5
              - 5
              behavior: ""
            cache_vary_by_method:
            - null
            - null
            cache_vary_by_cookies:
              cookie_names:
              - cookie_names
              - cookie_names
              behavior: ""
          tiered_cache: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        browser_cache:
          $ref: "#/components/schemas/BrowserCacheModuleRequest"
        modules:
          $ref: "#/components/schemas/CacheSettingsModulesRequest"
      title: PatchedCacheSettingRequest
      type: object
    PatchedConnectorHTTPRequest:
      additionalProperties: false
      example:
        name: name
        active: true
        attributes:
          addresses:
          - https_port: 39501
            address: address
            active: true
            http_port: 5249
            modules: ""
          - https_port: 39501
            address: address
            active: true
            http_port: 5249
            modules: ""
          connection_options: ""
          modules: ""
        type: ""
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorHTTPAttributesRequest"
      title: PatchedConnectorHTTPRequest
      type: object
    PatchedConnectorLiveIngestRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorLiveIngestAttributesRequest"
      title: PatchedConnectorLiveIngestRequest
      type: object
    PatchedConnectorPolymorphicRequest:
      additionalProperties: true
      discriminator:
        mapping:
          http: "#/components/schemas/PatchedConnectorHTTPRequest"
          storage: "#/components/schemas/PatchedConnectorStorageRequest"
          live_ingest: "#/components/schemas/PatchedConnectorLiveIngestRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/PatchedConnectorHTTPRequest"
      - $ref: "#/components/schemas/PatchedConnectorStorageRequest"
      - $ref: "#/components/schemas/PatchedConnectorLiveIngestRequest"
      title: PatchedConnectorPolymorphicRequest
    PatchedConnectorStorageRequest:
      additionalProperties: false
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        type:
          allOf:
          - $ref: "#/components/schemas/Type15cEnum"
          description: |-
            Type of the connector

            * `http` - HTTP
            * `storage` - Storage
            * `live_ingest` - Live Ingest
        attributes:
          $ref: "#/components/schemas/ConnectorStorageAttributesRequest"
      title: PatchedConnectorStorageRequest
      type: object
    PatchedCustomPageRequest:
      additionalProperties: false
      example:
        pages:
        - code: code
          page:
            attributes:
              connector: 0
              custom_status_code: 173
              ttl: 19008185
              uri: uri
            type: type
        - code: code
          page:
            attributes:
              connector: 0
              custom_status_code: 173
              ttl: 19008185
              uri: uri
            type: type
        name: name
        active: true
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        active:
          type: boolean
        pages:
          items:
            $ref: "#/components/schemas/PageRequest"
          type: array
      title: PatchedCustomPageRequest
      type: object
    PatchedEdgeFunctionsRequest:
      additionalProperties: false
      example:
        code: code
        name: name
        active: true
        runtime: ""
        execution_environment: ""
        azion_form:
          type: object
          properties:
            domain:
              type: string
              title: Domain
              description: Domain where the cookie will be valid (use '.' at the beginning
                for subdomains)
            max_age:
              type: integer
              title: Max Age (seconds)
              description: Cookie lifetime in seconds
              minimum: 1
              maximum: 31536000
              format: int64
            path:
              type: string
              title: Path
              description: Path where the cookie will be valid
            values:
              type: array
              title: Test Variations
              description: List of A/B test variations with their respective weights
              minItems: 2
              maxItems: 10
              items:
                type: object
                properties:
                  value:
                    type: string
                    title: Variation Value
                    description: Unique variation identifier
                    minLength: 1
                    maxLength: 50
                  weight:
                    type: integer
                    title: Weight
                    description: Variance weight (higher weight = higher probability)
                    minimum: 1
                    maximum: 100
                    format: int64
                required:
                - value
                - weight
                additionalProperties: false
          required:
          - domain
          - max_age
          - path
          - values
          additionalProperties: false
        default_args: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        runtime:
          allOf:
          - $ref: "#/components/schemas/RuntimeEnum"
        execution_environment:
          allOf:
          - $ref: "#/components/schemas/ExecutionEnvironmentEnum"
        code:
          description: "String containing the function code. Maximum size: 20MB."
          maxLength: 52428800
          minLength: 1
          type: string
        default_args: {}
        azion_form:
          $ref: "#/components/schemas/EdgeFunctions_azion_form"
      title: PatchedEdgeFunctionsRequest
      type: object
    PatchedFirewallFunctionInstanceRequest:
      additionalProperties: false
      description: Serializer for Firewall Function Instances
      example:
        args: ""
        function: 738633633822310400
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        args: {}
        function:
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          type: integer
        active:
          type: boolean
      title: PatchedFirewallFunctionInstanceRequest
      type: object
    PatchedFirewallRequest:
      additionalProperties: false
      example:
        debug: true
        name: name
        active: true
        modules:
          functions: ""
          network_protection: ""
          waf: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        modules:
          $ref: "#/components/schemas/FirewallModulesRequest"
        debug:
          type: boolean
        active:
          type: boolean
      title: PatchedFirewallRequest
      type: object
    PatchedFirewallRuleEngineRequest:
      additionalProperties: false
      example:
        criteria:
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        - - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
          - argument: ""
            conditional: conditional
            variable: variable
            operator: operator
        behaviors:
        - type: type
        - type: type
        - type: type
        - type: type
        - type: type
        name: name
        active: true
        description: description
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        active:
          type: boolean
        criteria:
          items:
            items:
              $ref: "#/components/schemas/EdgeFirewallCriterionFieldRequest"
            maxItems: 10
            minItems: 1
            type: array
          maxItems: 5
          minItems: 1
          type: array
        behaviors:
          items:
            $ref: "#/components/schemas/FirewallBehaviorsRequest"
          maxItems: 10
          minItems: 1
          type: array
        description:
          maxLength: 1000
          minLength: 0
          type: string
      title: PatchedFirewallRuleEngineRequest
      type: object
    PatchedNetworkListDetailRequest:
      additionalProperties: false
      description: |-
        A Network List item can be one of the following formats:


        1. IP Addresses (IPv4/IPv6):

            - Simple IPv4: 192.168.0.1

            - IPv4 with CIDR: 192.168.0.1/24

            - Simple IPv6: 2001:db8:3333:4444:5555:6666:7777:8888

            - IPv6 with CIDR: 2001:db8::/32

            - IP with expiration date: 192.168.0.1 --LT2025-05-29T12:25:23Z

                (The expiration date format is --LT followed by ISO8601 date in UTC timezone)


        2. Country Codes:

            - Two-character uppercase alphanumeric country code (ISO 3166-1 alpha-2)

            - Examples: BR, US, DE, JP


        3. Autonomous System Numbers (ASN):

            - Number composed of digits only

            - Examples: 1234, 5678, 13335
      example:
        name: name
        active: true
        type: type
        items:
        - items
        - items
        - items
        - items
        - items
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
        type:
          description: |-
            * `asn` - ASN
            * `countries` - Countries
            * `ip_cidr` - IP/CIDR
          title: Type528Enum
          type: string
        items:
          items:
            maxLength: 250
            minLength: 1
            type: string
          maxItems: 20000
          minItems: 1
          type: array
        active:
          type: boolean
      title: PatchedNetworkListDetailRequest
      type: object
    PatchedWAFRequest:
      additionalProperties: false
      example:
        product_version: product_version
        name: name
        engine_settings:
          attributes:
            rulesets:
            - null
            - null
            thresholds:
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
          engine_version: ""
          type: ""
        active: true
      properties:
        active:
          type: boolean
        name:
          maxLength: 250
          minLength: 1
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          nullable: true
          type: string
        engine_settings:
          $ref: "#/components/schemas/WAFEngineSettingsFieldRequest"
      title: PatchedWAFRequest
      type: object
    PatchedWAFRuleRequest:
      additionalProperties: false
      example:
        rule_id: ""
        path: path
        name: name
        active: true
        conditions:
        - match: match
        - match: match
        operator: ""
      properties:
        rule_id:
          allOf:
          - $ref: "#/components/schemas/RuleIdEnum"
          description: |-
            0 - All Rules<br>
            1 - Validation of protocol compliance: weird request, unable to parse<br>
            2 - Request too big, stored on disk and not parsed<br>
            10 - Validation of protocol compliance: invalid HEX encoding (null bytes)<br>
            11 - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)<br>
            12 - Validation of protocol compliance: invalid formatted URL<br>
            13 - Validation of protocol compliance: invalid POST format<br>
            14 - Validation of protocol compliance: invalid POST boundary<br>
            15 - Validation of protocol compliance: invalid JSON<br>
            16 - Validation of protocol compliance: POST with no body<br>
            17 - Possible SQL Injection attack: validation with libinjection_sql<br>
            18 - Possible XSS attack: validation with libinjection_xss<br>
            1000 - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies<br>
            1001 - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies<br>
            1002 - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies<br>
            1003 - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies<br>
            1004 - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies<br>
            1005 - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies<br>
            1006 - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies<br>
            1007 - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies<br>
            1008 - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String<br>
            1009 - Possible SQL Injection attack: equal sign (=) found in Body or Query String<br>
            1010 - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies<br>
            1011 - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies<br>
            1013 - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies<br>
            1015 - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies<br>
            1016 - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies<br>
            1017 - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies<br>
            1100 - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies<br>
            1101 - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies<br>
            1102 - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies<br>
            1103 - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies<br>
            1104 - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies<br>
            1105 - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies<br>
            1106 - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies<br>
            1107 - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies<br>
            1108 - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies<br>
            1109 - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies<br>
            1110 - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies<br>
            1198 - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR<br>
            1199 - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies<br>
            1200 - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies<br>
            1202 - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies<br>
            1203 - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies<br>
            1204 - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies<br>
            1205 - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies<br>
            1206 - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies<br>
            1207 - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies<br>
            1208 - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies<br>
            1209 - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies<br>
            1210 - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies<br>
            1302 - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies<br>
            1303 - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies<br>
            1310 - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies<br>
            1311 - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies<br>
            1312 - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies<br>
            1314 - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies<br>
            1315 - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies<br>
            1400 - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies<br>
            1401 - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies<br>
            1402 - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies<br>
            1500 - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file<br>
            2001 - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering

            * `0` - All Rules
            * `1` - Validation of protocol compliance: weird request, unable to parse
            * `2` - Request too big, stored on disk and not parsed
            * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
            * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
            * `12` - Validation of protocol compliance: invalid formatted URL
            * `13` - Validation of protocol compliance: invalid POST format
            * `14` - Validation of protocol compliance: invalid POST boundary
            * `15` - Validation of protocol compliance: invalid JSON
            * `16` - Validation of protocol compliance: POST with no body
            * `17` - Possible SQL Injection attack: validation with libinjection_sql
            * `18` - Possible XSS attack: validation with libinjection_xss
            * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
            * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
            * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
            * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
            * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
            * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
            * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
            * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
            * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
            * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
            * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
            * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
            * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
            * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
            * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
            * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
            * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
            * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
            * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
            * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
            * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
            * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
            * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
            * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
            * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
            * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
            * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
            * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
            * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
            * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
            * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
            * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
            * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
            * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
            * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
            * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
            * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
            * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
            * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
            * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
            * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
            * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
            * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
            * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
            * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
            * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
            * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
            * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
            * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
            * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
            * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
        name:
          maxLength: 255
          minLength: 1
          type: string
        path:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/WAFExceptionPolymorphicConditionRequest"
          minItems: 1
          type: array
        operator:
          allOf:
          - $ref: "#/components/schemas/WAFRuleOperatorEnum"
        active:
          type: boolean
      title: PatchedWAFRuleRequest
      type: object
    PatchedWorkloadDeploymentRequest:
      additionalProperties: false
      example:
        current: true
        name: name
        active: true
        strategy:
          attributes:
            application: 738633633822310400
            firewall: 6
            custom_page: 1
          type: type
      properties:
        name:
          maxLength: 254
          minLength: 1
          type: string
        current:
          type: boolean
        active:
          type: boolean
        strategy:
          $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyRequest"
      title: PatchedWorkloadDeploymentRequest
      type: object
    PatchedWorkloadRequest:
      additionalProperties: false
      example:
        infrastructure: ""
        name: name
        active: true
        domains:
        - domains
        - domains
        workload_domain_allow_access: true
        tls: ""
        protocols: ""
        mtls:
          certificate: 1
          crl:
          - 1
          - 1
          - 1
          - 1
          - 1
          verification: null
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        active:
          type: boolean
        infrastructure:
          allOf:
          - $ref: "#/components/schemas/InfrastructureEnum"
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSWorkloadRequest"
        protocols:
          allOf:
          - $ref: "#/components/schemas/ProtocolsRequest"
        mtls:
          $ref: "#/components/schemas/MTLSRequest"
        domains:
          items:
            minLength: 1
            type: string
          type: array
        workload_domain_allow_access:
          type: boolean
      title: PatchedWorkloadRequest
      type: object
    Protocols:
      additionalProperties: false
      properties:
        http:
          allOf:
          - $ref: "#/components/schemas/HttpProtocol"
      title: Protocols
      type: object
    ProtocolsRequest:
      additionalProperties: false
      properties:
        http:
          allOf:
          - $ref: "#/components/schemas/HttpProtocolRequest"
      title: ProtocolsRequest
      type: object
    PurgeInput:
      additionalProperties: false
      description: Serialize the incoming purge request.
      example:
        items:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        layer: ""
      properties:
        items:
          items:
            format: uri
            minLength: 1
            type: string
          minItems: 1
          type: array
        layer:
          allOf:
          - $ref: "#/components/schemas/LayerEnum"
      required:
      - items
      title: PurgeInput
      type: object
    PurgeInputRequest:
      additionalProperties: false
      description: Serialize the incoming purge request.
      example:
        items:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        layer: ""
      properties:
        items:
          items:
            format: uri
            minLength: 1
            type: string
          minItems: 1
          type: array
        layer:
          allOf:
          - $ref: "#/components/schemas/LayerEnum"
      required:
      - items
      title: PurgeInputRequest
      type: object
    RegionEnum:
      description: |-
        * `us-east-1` - us-east-1
        * `us-east-2` - us-east-2
        * `br-east-1` - br-east-1
        * `br-east-2` - br-east-2
        * `br-east-3` - br-east-3
      title: RegionEnum
      type: string
    ResponseApplication:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache: ""
            application_accelerator: ""
            functions: ""
            tiered_cache: ""
            image_processor: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Application"
      required:
      - data
      title: ResponseApplication
      type: object
    ResponseApplicationDeviceGroups:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          user_agent: user_agent
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationDeviceGroups"
      required:
      - data
      title: ResponseApplicationDeviceGroups
      type: object
    ResponseApplicationFunctionInstance:
      additionalProperties: false
      example:
        data:
          args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationFunctionInstance"
      required:
      - data
      title: ResponseApplicationFunctionInstance
      type: object
    ResponseApplicationRequestPhaseRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngine"
      required:
      - data
      title: ResponseApplicationRequestPhaseRuleEngine
      type: object
    ResponseApplicationResponsePhaseRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationResponsePhaseRuleEngine"
      required:
      - data
      title: ResponseApplicationResponsePhaseRuleEngine
      type: object
    ResponseAsyncApplication:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache: ""
            application_accelerator: ""
            functions: ""
            tiered_cache: ""
            image_processor: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Application"
      required:
      - data
      title: ResponseAsyncApplication
      type: object
    ResponseAsyncApplicationDeviceGroups:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          user_agent: user_agent
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationDeviceGroups"
      required:
      - data
      title: ResponseAsyncApplicationDeviceGroups
      type: object
    ResponseAsyncApplicationFunctionInstance:
      additionalProperties: false
      example:
        data:
          args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationFunctionInstance"
      required:
      - data
      title: ResponseAsyncApplicationFunctionInstance
      type: object
    ResponseAsyncApplicationRequestPhaseRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngine"
      required:
      - data
      title: ResponseAsyncApplicationRequestPhaseRuleEngine
      type: object
    ResponseAsyncApplicationResponsePhaseRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ApplicationResponsePhaseRuleEngine"
      required:
      - data
      title: ResponseAsyncApplicationResponsePhaseRuleEngine
      type: object
    ResponseAsyncCacheSetting:
      additionalProperties: false
      example:
        data:
          browser_cache:
            max_age: 19008185
            behavior: ""
          name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              large_file_cache:
                offset: 1024
                enabled: true
              behavior: ""
              stale_cache:
                enabled: true
            application_accelerator:
              cache_vary_by_querystring:
                behavior: ""
                fields:
                - fields
                - fields
                sort_enabled: true
              cache_vary_by_devices:
                device_group:
                - 5
                - 5
                behavior: ""
              cache_vary_by_method:
              - null
              - null
              cache_vary_by_cookies:
                cookie_names:
                - cookie_names
                - cookie_names
                behavior: ""
            tiered_cache: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/CacheSetting"
      required:
      - data
      title: ResponseAsyncCacheSetting
      type: object
    ResponseAsyncConnectorPolymorphic:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          attributes:
            addresses:
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            connection_options: ""
            modules: ""
          id: 0
          type: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ConnectorPolymorphic"
      required:
      - data
      title: ResponseAsyncConnectorPolymorphic
      type: object
    ResponseAsyncCustomPage:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          pages:
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/CustomPage"
      required:
      - data
      title: ResponseAsyncCustomPage
      type: object
    ResponseAsyncDeleteApplication:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteApplication
      type: object
    ResponseAsyncDeleteApplicationDeviceGroups:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteApplicationDeviceGroups
      type: object
    ResponseAsyncDeleteApplicationFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteApplicationFunctionInstance
      type: object
    ResponseAsyncDeleteApplicationRequestPhaseRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteApplicationRequestPhaseRuleEngine
      type: object
    ResponseAsyncDeleteApplicationResponsePhaseRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteApplicationResponsePhaseRuleEngine
      type: object
    ResponseAsyncDeleteCacheSetting:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteCacheSetting
      type: object
    ResponseAsyncDeleteConnectorPolymorphic:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteConnectorPolymorphic
      type: object
    ResponseAsyncDeleteCustomPage:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteCustomPage
      type: object
    ResponseAsyncDeleteFirewall:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteFirewall
      type: object
    ResponseAsyncDeleteFirewallFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteFirewallFunctionInstance
      type: object
    ResponseAsyncDeleteFirewallRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteFirewallRuleEngine
      type: object
    ResponseAsyncDeleteFunctionsDoc:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteFunctionsDoc
      type: object
    ResponseAsyncDeleteNetworkListDetail:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteNetworkListDetail
      type: object
    ResponseAsyncDeleteWAF:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteWAF
      type: object
    ResponseAsyncDeleteWAFRule:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteWAFRule
      type: object
    ResponseAsyncDeleteWorkload:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteWorkload
      type: object
    ResponseAsyncDeleteWorkloadDeployment:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteWorkloadDeployment
      type: object
    ResponseAsyncFirewall:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            functions: ""
            network_protection: ""
            waf: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Firewall"
      required:
      - data
      title: ResponseAsyncFirewall
      type: object
    ResponseAsyncFirewallFunctionInstance:
      additionalProperties: false
      example:
        data:
          args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/FirewallFunctionInstance"
      required:
      - data
      title: ResponseAsyncFirewallFunctionInstance
      type: object
    ResponseAsyncFirewallRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/FirewallRuleEngine"
      required:
      - data
      title: ResponseAsyncFirewallRuleEngine
      type: object
    ResponseAsyncFunctionsDoc:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          runtime: ""
          azion_form:
            type: object
            properties:
              domain:
                type: string
                title: Domain
                description: Domain where the cookie will be valid (use '.' at the
                  beginning for subdomains)
              max_age:
                type: integer
                title: Max Age (seconds)
                description: Cookie lifetime in seconds
                minimum: 1
                maximum: 31536000
                format: int64
              path:
                type: string
                title: Path
                description: Path where the cookie will be valid
              values:
                type: array
                title: Test Variations
                description: List of A/B test variations with their respective weights
                minItems: 2
                maxItems: 10
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      title: Variation Value
                      description: Unique variation identifier
                      minLength: 1
                      maxLength: 50
                    weight:
                      type: integer
                      title: Weight
                      description: Variance weight (higher weight = higher probability)
                      minimum: 1
                      maximum: 100
                      format: int64
                  required:
                  - value
                  - weight
                  additionalProperties: false
            required:
            - domain
            - max_age
            - path
            - values
            additionalProperties: false
          version: version
          default_args: ""
          vendor: vendor
          name: name
          execution_environment: ""
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/EdgeFunctions"
      required:
      - data
      title: ResponseAsyncFunctionsDoc
      type: object
    ResponseAsyncNetworkListDetail:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          items:
          - items
          - items
          - items
          - items
          - items
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/NetworkListDetail"
      required:
      - data
      title: ResponseAsyncNetworkListDetail
      type: object
    ResponseAsyncPurgeInput:
      additionalProperties: false
      example:
        data:
          items:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          layer: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/PurgeInput"
      required:
      - data
      title: ResponseAsyncPurgeInput
      type: object
    ResponseAsyncWAF:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/WAF"
      required:
      - data
      title: ResponseAsyncWAF
      type: object
    ResponseAsyncWAFRule:
      additionalProperties: false
      example:
        data:
          rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/WAFRule"
      required:
      - data
      title: ResponseAsyncWAFRule
      type: object
    ResponseAsyncWorkload:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Workload"
      required:
      - data
      title: ResponseAsyncWorkload
      type: object
    ResponseAsyncWorkloadDeployment:
      additionalProperties: false
      example:
        data:
          current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            attributes:
              application: 5559347081229897728
              firewall: 1
              custom_page: 1
            type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/WorkloadDeployment"
      required:
      - data
      title: ResponseAsyncWorkloadDeployment
      type: object
    ResponseBadRequestApplication:
      additionalProperties: false
      example:
        product_version:
        - product_version
        - product_version
        debug:
        - debug
        - debug
        last_editor:
        - last_editor
        - last_editor
        name:
        - name
        - name
        active:
        - active
        - active
        id:
        - id
        - id
        detail: detail
        last_modified:
        - last_modified
        - last_modified
        modules:
          edge_cache:
            max_age:
            - max_age
            - max_age
            large_file_cache:
              offset:
              - offset
              - offset
              enabled:
              - enabled
              - enabled
            behavior:
            - behavior
            - behavior
            stale_cache:
              enabled:
              - enabled
              - enabled
          application_accelerator:
            cache_vary_by_querystring:
              behavior:
              - behavior
              - behavior
              fields: null
              sort_enabled:
              - sort_enabled
              - sort_enabled
            cache_vary_by_devices:
              device_group: null
              behavior:
              - behavior
              - behavior
            cache_vary_by_method:
            - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
            - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
            cache_vary_by_cookies:
              cookie_names: null
              behavior:
              - behavior
              - behavior
          tiered_cache:
            max_age:
            - max_age
            - max_age
            topology:
            - topology
            - topology
            behavior:
            - behavior
            - behavior
            tiered_cache_enabled:
            - tiered_cache_enabled
            - tiered_cache_enabled
      properties:
        name:
          items:
            type: string
          type: array
        id:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        modules:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassModulesField"
        active:
          items:
            type: string
          type: array
        debug:
          items:
            type: string
          type: array
        product_version:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: ResponseBadRequestApplication
      type: object
    ResponseBadRequestCacheSetting:
      additionalProperties: false
      example:
        browser_cache:
          max_age:
          - max_age
          - max_age
          behavior:
          - behavior
          - behavior
        name:
        - name
        - name
        id:
        - id
        - id
        detail: detail
        modules:
          edge_cache:
            max_age:
            - max_age
            - max_age
            large_file_cache:
              offset:
              - offset
              - offset
              enabled:
              - enabled
              - enabled
            behavior:
            - behavior
            - behavior
            stale_cache:
              enabled:
              - enabled
              - enabled
          application_accelerator:
            cache_vary_by_querystring:
              behavior:
              - behavior
              - behavior
              fields: null
              sort_enabled:
              - sort_enabled
              - sort_enabled
            cache_vary_by_devices:
              device_group: null
              behavior:
              - behavior
              - behavior
            cache_vary_by_method:
            - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
            - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
            cache_vary_by_cookies:
              cookie_names: null
              behavior:
              - behavior
              - behavior
          tiered_cache:
            max_age:
            - max_age
            - max_age
            topology:
            - topology
            - topology
            behavior:
            - behavior
            - behavior
            tiered_cache_enabled:
            - tiered_cache_enabled
            - tiered_cache_enabled
      properties:
        id:
          items:
            type: string
          type: array
        name:
          items:
            type: string
          type: array
        browser_cache:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassBrowser_cacheField"
        modules:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassModulesField"
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: ResponseBadRequestCacheSetting
      type: object
    ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField:
      additionalProperties: false
      example:
        cookie_names: null
        behavior:
        - behavior
        - behavior
      properties:
        behavior:
          items:
            type: string
          type: array
        cookie_names:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names"
      title: ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField
      type: object
    ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField:
      additionalProperties: false
      example:
        device_group: null
        behavior:
        - behavior
        - behavior
      properties:
        behavior:
          items:
            type: string
          type: array
        device_group:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names"
      title: ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField
      type: object
    ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField:
      additionalProperties: false
      example:
        behavior:
        - behavior
        - behavior
        fields: null
        sort_enabled:
        - sort_enabled
        - sort_enabled
      properties:
        behavior:
          items:
            type: string
          type: array
        fields:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names"
        sort_enabled:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField
      type: object
    ResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField:
      additionalProperties: false
      example:
        offset:
        - offset
        - offset
        enabled:
        - enabled
        - enabled
      properties:
        enabled:
          items:
            type: string
          type: array
        offset:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField
      type: object
    ResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField:
      additionalProperties: false
      example:
        enabled:
        - enabled
        - enabled
      properties:
        enabled:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField
      type: object
    ResponseBadRequestCacheSettingsModulesApplication_acceleratorField:
      additionalProperties: false
      example:
        cache_vary_by_querystring:
          behavior:
          - behavior
          - behavior
          fields: null
          sort_enabled:
          - sort_enabled
          - sort_enabled
        cache_vary_by_devices:
          device_group: null
          behavior:
          - behavior
          - behavior
        cache_vary_by_method:
        - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
        - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
        cache_vary_by_cookies:
          cookie_names: null
          behavior:
          - behavior
          - behavior
      properties:
        cache_vary_by_method:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names"
        cache_vary_by_querystring:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField"
        cache_vary_by_cookies:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField"
        cache_vary_by_devices:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField"
      title: ResponseBadRequestCacheSettingsModulesApplication_acceleratorField
      type: object
    ResponseBadRequestCacheSettingsModulesEdge_cacheField:
      additionalProperties: false
      example:
        max_age:
        - max_age
        - max_age
        large_file_cache:
          offset:
          - offset
          - offset
          enabled:
          - enabled
          - enabled
        behavior:
        - behavior
        - behavior
        stale_cache:
          enabled:
          - enabled
          - enabled
      properties:
        behavior:
          items:
            type: string
          type: array
        max_age:
          items:
            type: string
          type: array
        stale_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField"
        large_file_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField"
      title: ResponseBadRequestCacheSettingsModulesEdge_cacheField
      type: object
    ResponseBadRequestCacheSettingsModulesTiered_cacheField:
      additionalProperties: false
      example:
        max_age:
        - max_age
        - max_age
        topology:
        - topology
        - topology
        behavior:
        - behavior
        - behavior
        tiered_cache_enabled:
        - tiered_cache_enabled
        - tiered_cache_enabled
      properties:
        behavior:
          items:
            type: string
          type: array
        max_age:
          items:
            type: string
          type: array
        topology:
          items:
            type: string
          type: array
        tiered_cache_enabled:
          items:
            type: string
          type: array
      title: ResponseBadRequestCacheSettingsModulesTiered_cacheField
      type: object
    ResponseBadRequestSerializerMetaclassBrowser_cacheField:
      additionalProperties: false
      example:
        max_age:
        - max_age
        - max_age
        behavior:
        - behavior
        - behavior
      properties:
        behavior:
          items:
            type: string
          type: array
        max_age:
          items:
            type: string
          type: array
      title: ResponseBadRequestSerializerMetaclassBrowser_cacheField
      type: object
    ResponseBadRequestSerializerMetaclassModulesField:
      additionalProperties: false
      example:
        edge_cache:
          max_age:
          - max_age
          - max_age
          large_file_cache:
            offset:
            - offset
            - offset
            enabled:
            - enabled
            - enabled
          behavior:
          - behavior
          - behavior
          stale_cache:
            enabled:
            - enabled
            - enabled
        application_accelerator:
          cache_vary_by_querystring:
            behavior:
            - behavior
            - behavior
            fields: null
            sort_enabled:
            - sort_enabled
            - sort_enabled
          cache_vary_by_devices:
            device_group: null
            behavior:
            - behavior
            - behavior
          cache_vary_by_method:
          - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
          - ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names
          cache_vary_by_cookies:
            cookie_names: null
            behavior:
            - behavior
            - behavior
        tiered_cache:
          max_age:
          - max_age
          - max_age
          topology:
          - topology
          - topology
          behavior:
          - behavior
          - behavior
          tiered_cache_enabled:
          - tiered_cache_enabled
          - tiered_cache_enabled
      properties:
        edge_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsModulesEdge_cacheField"
        tiered_cache:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsModulesTiered_cacheField"
        application_accelerator:
          $ref: "#/components/schemas/ResponseBadRequestCacheSettingsModulesApplication_acceleratorField"
      title: ResponseBadRequestSerializerMetaclassModulesField
      type: object
    ResponseBadRequestSerializerMetaclassStrategyField:
      additionalProperties: false
      example:
        type:
        - type
        - type
      properties:
        type:
          items:
            type: string
          type: array
      title: ResponseBadRequestSerializerMetaclassStrategyField
      type: object
    ResponseBadRequestWorkloadDeployment:
      additionalProperties: false
      example:
        current:
        - current
        - current
        last_editor:
        - last_editor
        - last_editor
        name:
        - name
        - name
        active:
        - active
        - active
        id:
        - id
        - id
        detail: detail
        strategy:
          type:
          - type
          - type
        last_modified:
        - last_modified
        - last_modified
      properties:
        id:
          items:
            type: string
          type: array
        name:
          items:
            type: string
          type: array
        active:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        strategy:
          $ref: "#/components/schemas/ResponseBadRequestSerializerMetaclassStrategyField"
        current:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          type: string
      title: ResponseBadRequestWorkloadDeployment
      type: object
    ResponseConnectorPolymorphic:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          attributes:
            addresses:
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            connection_options: ""
            modules: ""
          id: 0
          type: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/ConnectorPolymorphic"
      required:
      - data
      title: ResponseConnectorPolymorphic
      type: object
    ResponseCustomPage:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          pages:
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/CustomPage"
      required:
      - data
      title: ResponseCustomPage
      type: object
    ResponseDeleteApplication:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteApplication
      type: object
    ResponseDeleteApplicationFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteApplicationFunctionInstance
      type: object
    ResponseDeleteApplicationRequestPhaseRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteApplicationRequestPhaseRuleEngine
      type: object
    ResponseDeleteApplicationResponsePhaseRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteApplicationResponsePhaseRuleEngine
      type: object
    ResponseDeleteConnectorPolymorphic:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteConnectorPolymorphic
      type: object
    ResponseDeleteCustomPage:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteCustomPage
      type: object
    ResponseDeleteFirewall:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteFirewall
      type: object
    ResponseDeleteFirewallFunctionInstance:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteFirewallFunctionInstance
      type: object
    ResponseDeleteFirewallRuleEngine:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteFirewallRuleEngine
      type: object
    ResponseDeleteFunctionsDoc:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteFunctionsDoc
      type: object
    ResponseDeleteNetworkListDetail:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteNetworkListDetail
      type: object
    ResponseDeleteWAF:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteWAF
      type: object
    ResponseDeleteWAFRule:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteWAFRule
      type: object
    ResponseFirewall:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            functions: ""
            network_protection: ""
            waf: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Firewall"
      required:
      - data
      title: ResponseFirewall
      type: object
    ResponseFirewallFunctionInstance:
      additionalProperties: false
      example:
        data:
          args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/FirewallFunctionInstance"
      required:
      - data
      title: ResponseFirewallFunctionInstance
      type: object
    ResponseFirewallRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/FirewallRuleEngine"
      required:
      - data
      title: ResponseFirewallRuleEngine
      type: object
    ResponseFunctionsDoc:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          runtime: ""
          azion_form:
            type: object
            properties:
              domain:
                type: string
                title: Domain
                description: Domain where the cookie will be valid (use '.' at the
                  beginning for subdomains)
              max_age:
                type: integer
                title: Max Age (seconds)
                description: Cookie lifetime in seconds
                minimum: 1
                maximum: 31536000
                format: int64
              path:
                type: string
                title: Path
                description: Path where the cookie will be valid
              values:
                type: array
                title: Test Variations
                description: List of A/B test variations with their respective weights
                minItems: 2
                maxItems: 10
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      title: Variation Value
                      description: Unique variation identifier
                      minLength: 1
                      maxLength: 50
                    weight:
                      type: integer
                      title: Weight
                      description: Variance weight (higher weight = higher probability)
                      minimum: 1
                      maximum: 100
                      format: int64
                  required:
                  - value
                  - weight
                  additionalProperties: false
            required:
            - domain
            - max_age
            - path
            - values
            additionalProperties: false
          version: version
          default_args: ""
          vendor: vendor
          name: name
          execution_environment: ""
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/EdgeFunctions"
      required:
      - data
      title: ResponseFunctionsDoc
      type: object
    ResponseListCacheSetting:
      additionalProperties: false
      example:
        browser_cache:
          max_age: 19008185
          behavior: ""
        name: name
        id: 0
        modules:
          edge_cache:
            max_age: 4622587
            large_file_cache:
              offset: 1024
              enabled: true
            behavior: ""
            stale_cache:
              enabled: true
          application_accelerator:
            cache_vary_by_querystring:
              behavior: ""
              fields:
              - fields
              - fields
              sort_enabled: true
            cache_vary_by_devices:
              device_group:
              - 5
              - 5
              behavior: ""
            cache_vary_by_method:
            - null
            - null
            cache_vary_by_cookies:
              cookie_names:
              - cookie_names
              - cookie_names
              behavior: ""
          tiered_cache: ""
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 250
          minLength: 1
          type: string
        browser_cache:
          $ref: "#/components/schemas/BrowserCacheModule"
        modules:
          $ref: "#/components/schemas/CacheSettingsModules"
      required:
      - id
      - name
      title: ResponseListCacheSetting
      type: object
    ResponseNetworkListDetail:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          items:
          - items
          - items
          - items
          - items
          - items
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/NetworkListDetail"
      required:
      - data
      title: ResponseNetworkListDetail
      type: object
    ResponsePurgeInput:
      additionalProperties: false
      example:
        data:
          items:
          - https://openapi-generator.tech
          - https://openapi-generator.tech
          layer: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/PurgeInput"
      required:
      - data
      title: ResponsePurgeInput
      type: object
    ResponseRetrieveApplication:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            edge_cache: ""
            application_accelerator: ""
            functions: ""
            tiered_cache: ""
            image_processor: ""
      properties:
        data:
          $ref: "#/components/schemas/Application"
      required:
      - data
      title: ResponseRetrieveApplication
      type: object
    ResponseRetrieveApplicationDeviceGroups:
      additionalProperties: false
      example:
        data:
          name: name
          id: 0
          user_agent: user_agent
      properties:
        data:
          $ref: "#/components/schemas/ApplicationDeviceGroups"
      required:
      - data
      title: ResponseRetrieveApplicationDeviceGroups
      type: object
    ResponseRetrieveApplicationFunctionInstance:
      additionalProperties: false
      example:
        data:
          args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/ApplicationFunctionInstance"
      required:
      - data
      title: ResponseRetrieveApplicationFunctionInstance
      type: object
    ResponseRetrieveApplicationRequestPhaseRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        data:
          $ref: "#/components/schemas/ApplicationRequestPhaseRuleEngine"
      required:
      - data
      title: ResponseRetrieveApplicationRequestPhaseRuleEngine
      type: object
    ResponseRetrieveCacheSetting:
      additionalProperties: false
      example:
        data:
          browser_cache:
            max_age: 19008185
            behavior: ""
          name: name
          id: 0
          modules:
            edge_cache:
              max_age: 4622587
              large_file_cache:
                offset: 1024
                enabled: true
              behavior: ""
              stale_cache:
                enabled: true
            application_accelerator:
              cache_vary_by_querystring:
                behavior: ""
                fields:
                - fields
                - fields
                sort_enabled: true
              cache_vary_by_devices:
                device_group:
                - 5
                - 5
                behavior: ""
              cache_vary_by_method:
              - null
              - null
              cache_vary_by_cookies:
                cookie_names:
                - cookie_names
                - cookie_names
                behavior: ""
            tiered_cache: ""
      properties:
        data:
          $ref: "#/components/schemas/CacheSetting"
      required:
      - data
      title: ResponseRetrieveCacheSetting
      type: object
    ResponseRetrieveConnectorPolymorphic:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          attributes:
            addresses:
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            - https_port: 9607
              address: address
              active: true
              http_port: 39501
              modules: ""
            connection_options: ""
            modules: ""
          id: 0
          type: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/ConnectorPolymorphic"
      required:
      - data
      title: ResponseRetrieveConnectorPolymorphic
      type: object
    ResponseRetrieveCustomPage:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          pages:
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          - code: code
            page:
              attributes:
                connector: 6
                custom_status_code: 397
                ttl: 4622587
                uri: uri
              type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/CustomPage"
      required:
      - data
      title: ResponseRetrieveCustomPage
      type: object
    ResponseRetrieveFirewall:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          debug: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          modules:
            ddos_protection: ""
            functions: ""
            network_protection: ""
            waf: ""
      properties:
        data:
          $ref: "#/components/schemas/Firewall"
      required:
      - data
      title: ResponseRetrieveFirewall
      type: object
    ResponseRetrieveFirewallFunctionInstance:
      additionalProperties: false
      example:
        data:
          args: ""
          function: 5559347081229897728
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/FirewallFunctionInstance"
      required:
      - data
      title: ResponseRetrieveFirewallFunctionInstance
      type: object
    ResponseRetrieveFirewallRuleEngine:
      additionalProperties: false
      example:
        data:
          criteria:
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          - - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
            - argument: ""
              conditional: conditional
              variable: variable
              operator: operator
          behaviors:
          - type: type
          - type: type
          - type: type
          - type: type
          - type: type
          last_editor: last_editor
          name: name
          active: true
          description: description
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          order: 119
      properties:
        data:
          $ref: "#/components/schemas/FirewallRuleEngine"
      required:
      - data
      title: ResponseRetrieveFirewallRuleEngine
      type: object
    ResponseRetrieveFunctionsDoc:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          code: code
          last_editor: last_editor
          active: true
          runtime: ""
          azion_form:
            type: object
            properties:
              domain:
                type: string
                title: Domain
                description: Domain where the cookie will be valid (use '.' at the
                  beginning for subdomains)
              max_age:
                type: integer
                title: Max Age (seconds)
                description: Cookie lifetime in seconds
                minimum: 1
                maximum: 31536000
                format: int64
              path:
                type: string
                title: Path
                description: Path where the cookie will be valid
              values:
                type: array
                title: Test Variations
                description: List of A/B test variations with their respective weights
                minItems: 2
                maxItems: 10
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      title: Variation Value
                      description: Unique variation identifier
                      minLength: 1
                      maxLength: 50
                    weight:
                      type: integer
                      title: Weight
                      description: Variance weight (higher weight = higher probability)
                      minimum: 1
                      maximum: 100
                      format: int64
                  required:
                  - value
                  - weight
                  additionalProperties: false
            required:
            - domain
            - max_age
            - path
            - values
            additionalProperties: false
          version: version
          default_args: ""
          vendor: vendor
          name: name
          execution_environment: ""
          id: 0
          reference_count: 6
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/EdgeFunctions"
      required:
      - data
      title: ResponseRetrieveFunctionsDoc
      type: object
    ResponseRetrieveNetworkListDetail:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          name: name
          active: true
          id: 0
          type: type
          items:
          - items
          - items
          - items
          - items
          - items
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/NetworkListDetail"
      required:
      - data
      title: ResponseRetrieveNetworkListDetail
      type: object
    ResponseRetrieveWAF:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/WAF"
      required:
      - data
      title: ResponseRetrieveWAF
      type: object
    ResponseRetrieveWAFRule:
      additionalProperties: false
      example:
        data:
          rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
      properties:
        data:
          $ref: "#/components/schemas/WAFRule"
      required:
      - data
      title: ResponseRetrieveWAFRule
      type: object
    ResponseRetrieveWorkload:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
      properties:
        data:
          $ref: "#/components/schemas/Workload"
      required:
      - data
      title: ResponseRetrieveWorkload
      type: object
    ResponseRetrieveWorkloadDeployment:
      additionalProperties: false
      example:
        data:
          current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            attributes:
              application: 5559347081229897728
              firewall: 1
              custom_page: 1
            type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/WorkloadDeployment"
      required:
      - data
      title: ResponseRetrieveWorkloadDeployment
      type: object
    ResponseWAF:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          engine_settings:
            attributes:
              rulesets:
              - null
              - null
              thresholds:
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
              - threat: threat
                sensitivity: ""
            engine_version: ""
            type: ""
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/WAF"
      required:
      - data
      title: ResponseWAF
      type: object
    ResponseWAFRule:
      additionalProperties: false
      example:
        data:
          rule_id: ""
          path: path
          last_editor: last_editor
          name: name
          active: true
          id: 0
          conditions:
          - match: match
          - match: match
          last_modified: 2000-01-23T04:56:07.000+00:00
          operator: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/WAFRule"
      required:
      - data
      title: ResponseWAFRule
      type: object
    ResponseWorkload:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          active: true
          domains:
          - domains
          - domains
          workload_domain: workload_domain
          infrastructure: ""
          name: name
          workload_domain_allow_access: true
          tls: ""
          id: 0
          protocols: ""
          last_modified: 2000-01-23T04:56:07.000+00:00
          mtls:
            certificate: 1
            crl:
            - 1
            - 1
            - 1
            - 1
            - 1
            verification: null
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/Workload"
      required:
      - data
      title: ResponseWorkload
      type: object
    ResponseWorkloadDeployment:
      additionalProperties: false
      example:
        data:
          current: true
          last_editor: last_editor
          name: name
          active: true
          id: 0
          strategy:
            attributes:
              application: 5559347081229897728
              firewall: 1
              custom_page: 1
            type: type
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/WorkloadDeployment"
      required:
      - data
      title: ResponseWorkloadDeployment
      type: object
    RuleIdEnum:
      description: |-
        * `0` - All Rules
        * `1` - Validation of protocol compliance: weird request, unable to parse
        * `2` - Request too big, stored on disk and not parsed
        * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
        * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
        * `12` - Validation of protocol compliance: invalid formatted URL
        * `13` - Validation of protocol compliance: invalid POST format
        * `14` - Validation of protocol compliance: invalid POST boundary
        * `15` - Validation of protocol compliance: invalid JSON
        * `16` - Validation of protocol compliance: POST with no body
        * `17` - Possible SQL Injection attack: validation with libinjection_sql
        * `18` - Possible XSS attack: validation with libinjection_xss
        * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
        * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
        * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
        * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
        * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
        * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
        * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
        * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
        * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
        * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
        * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
        * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
        * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
        * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
        * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
        * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
        * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
        * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
        * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
        * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
        * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
        * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
        * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
        * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
        * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
        * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
        * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
        * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
        * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
        * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
        * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
        * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
        * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
        * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
        * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
        * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
        * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
        * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
        * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
        * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
        * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
        * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
        * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
        * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
        * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
        * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
        * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
        * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
        * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
        * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
        * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
      format: int64
      title: RuleIdEnum
      type: integer
    RulesetsEnum:
      description: '* `1` - Azion WAF Score Ruleset'
      format: int64
      title: RulesetsEnum
      type: integer
    RuntimeEnum:
      description: '* `azion_js` - Azion JavaScript'
      title: RuntimeEnum
      type: string
    SensitivityEnum:
      description: |-
        * `highest` - Highest
        * `high` - High
        * `medium` - Medium
        * `low` - Low
        * `lowest` - Lowest
      title: SensitivityEnum
      type: string
    ServerRoleEnum:
      description: |-
        * `primary` - Primary
        * `backup` - Backup
      title: ServerRoleEnum
      type: string
    StateCacheModule:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: StateCacheModule
      type: object
    StateCacheModuleRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      title: StateCacheModuleRequest
      type: object
    TLSWorkload:
      additionalProperties: false
      properties:
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        ciphers:
          allOf:
          - $ref: "#/components/schemas/CiphersEnum"
          description: |-
            Allow to configure which set of ciphers will be used when TLS ciphers negotiation.

            * `1` - TLSv1.2_2018 - TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256
            * `2` - TLSv1.2_2019 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `3` - TLSv1.3_2022 - ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
            * `4` - TLSv1.2_2021 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `5` - Legacy_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA
            * `6` - Compatible_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
            * `7` - Modern_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305
            * `8` - Legacy_v2017Q1 - AES128-CCM:AES128-CCM8:AES128-GCM-SHA256:AES128-SHA:AES128-SHA256:AES256-CCM:AES256-CCM8:AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        minimum_version:
          $ref: "#/components/schemas/TLSWorkload_minimum_version"
      title: TLSWorkload
      type: object
    TLSWorkloadRequest:
      additionalProperties: false
      properties:
        certificate:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        ciphers:
          allOf:
          - $ref: "#/components/schemas/CiphersEnum"
          description: |-
            Allow to configure which set of ciphers will be used when TLS ciphers negotiation.

            * `1` - TLSv1.2_2018 - TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256
            * `2` - TLSv1.2_2019 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `3` - TLSv1.3_2022 - ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
            * `4` - TLSv1.2_2021 - ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256
            * `5` - Legacy_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA
            * `6` - Compatible_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
            * `7` - Modern_v2025Q1 - TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305
            * `8` - Legacy_v2017Q1 - AES128-CCM:AES128-CCM8:AES128-GCM-SHA256:AES128-SHA:AES128-SHA256:AES256-CCM:AES256-CCM8:AES256-GCM-SHA384:AES256-SHA:AES256-SHA256:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES256-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        minimum_version:
          $ref: "#/components/schemas/TLSWorkload_minimum_version"
      title: TLSWorkloadRequest
      type: object
    ThreatEnum:
      description: |-
        * `cross_site_scripting` - cross_site_scripting
        * `directory_traversal` - directory_traversal
        * `evading_tricks` - evading_tricks
        * `file_upload` - file_upload
        * `identified_attack` - identified_attack
        * `remote_file_inclusion` - remote_file_inclusion
        * `sql_injection` - sql_injection
        * `unwanted_access` - unwanted_access
      title: ThreatEnum
      type: string
    ThresholdsConfigField:
      additionalProperties: false
      example:
        threat: threat
        sensitivity: ""
      properties:
        threat:
          description: |-
            * `cross_site_scripting` - cross_site_scripting
            * `directory_traversal` - directory_traversal
            * `evading_tricks` - evading_tricks
            * `file_upload` - file_upload
            * `identified_attack` - identified_attack
            * `remote_file_inclusion` - remote_file_inclusion
            * `sql_injection` - sql_injection
            * `unwanted_access` - unwanted_access
          title: ThreatEnum
          type: string
        sensitivity:
          allOf:
          - $ref: "#/components/schemas/SensitivityEnum"
      required:
      - threat
      title: ThresholdsConfigField
      type: object
    ThresholdsConfigFieldRequest:
      additionalProperties: false
      example:
        threat: threat
        sensitivity: ""
      properties:
        threat:
          description: |-
            * `cross_site_scripting` - cross_site_scripting
            * `directory_traversal` - directory_traversal
            * `evading_tricks` - evading_tricks
            * `file_upload` - file_upload
            * `identified_attack` - identified_attack
            * `remote_file_inclusion` - remote_file_inclusion
            * `sql_injection` - sql_injection
            * `unwanted_access` - unwanted_access
          title: ThreatEnum
          type: string
        sensitivity:
          allOf:
          - $ref: "#/components/schemas/SensitivityEnum"
      required:
      - threat
      title: ThresholdsConfigFieldRequest
      type: object
    TieredCacheModule:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: TieredCacheModule
      type: object
    TieredCacheModuleRequest:
      additionalProperties: false
      properties:
        enabled:
          type: boolean
      title: TieredCacheModuleRequest
      type: object
    TopologyEnum:
      description: |-
        * `near-edge` - near-edge
        * `br-east-1` - br-east-1
        * `us-east-1` - us-east-1
      title: TopologyEnum
      type: string
    TransportPolicyEnum:
      description: |-
        * `preserve` - Preserve
        * `force_https` - Force HTTPS
        * `force_http` - Force HTTP
      title: TransportPolicyEnum
      type: string
    Type15cEnum:
      description: |-
        * `http` - HTTP
        * `storage` - Storage
        * `live_ingest` - Live Ingest
      title: Type15cEnum
      type: string
    Type528Enum:
      description: |-
        * `asn` - ASN
        * `countries` - Countries
        * `ip_cidr` - IP/CIDR
      title: Type528Enum
      type: string
    Type689Enum:
      description: '* `run_function` - run_function'
      title: Type689Enum
      type: string
    TypeF11Enum:
      description: '* `rewrite_request` - rewrite_request'
      title: TypeF11Enum
      type: string
    VerificationEnum:
      description: |-
        * `enforce` - Enforce
        * `permissive` - Permissive
      title: VerificationEnum
      type: string
    WAF:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        name: name
        engine_settings:
          attributes:
            rulesets:
            - null
            - null
            thresholds:
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
          engine_version: ""
          type: ""
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        active:
          type: boolean
        name:
          maxLength: 250
          minLength: 1
          type: string
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          nullable: true
          type: string
        engine_settings:
          $ref: "#/components/schemas/WAFEngineSettingsField"
      required:
      - id
      - last_editor
      - last_modified
      - name
      title: WAF
      type: object
    WAFEngineSettingsAttributesField:
      additionalProperties: false
      example:
        rulesets:
        - null
        - null
        thresholds:
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
      properties:
        rulesets:
          items:
            $ref: "#/components/schemas/RulesetsEnum"
          type: array
        thresholds:
          items:
            $ref: "#/components/schemas/ThresholdsConfigField"
          maxItems: 8
          type: array
      title: WAFEngineSettingsAttributesField
      type: object
    WAFEngineSettingsAttributesFieldRequest:
      additionalProperties: false
      example:
        rulesets:
        - null
        - null
        thresholds:
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
        - threat: threat
          sensitivity: ""
      properties:
        rulesets:
          items:
            $ref: "#/components/schemas/RulesetsEnum"
          type: array
        thresholds:
          items:
            $ref: "#/components/schemas/ThresholdsConfigFieldRequest"
          maxItems: 8
          type: array
      title: WAFEngineSettingsAttributesFieldRequest
      type: object
    WAFEngineSettingsField:
      additionalProperties: false
      example:
        attributes:
          rulesets:
          - null
          - null
          thresholds:
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
        engine_version: ""
        type: ""
      properties:
        engine_version:
          allOf:
          - $ref: "#/components/schemas/EngineVersionEnum"
        type:
          allOf:
          - $ref: "#/components/schemas/WAFEngineSettingsFieldTypeEnum"
        attributes:
          $ref: "#/components/schemas/WAFEngineSettingsAttributesField"
      title: WAFEngineSettingsField
      type: object
    WAFEngineSettingsFieldRequest:
      additionalProperties: false
      example:
        attributes:
          rulesets:
          - null
          - null
          thresholds:
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
          - threat: threat
            sensitivity: ""
        engine_version: ""
        type: ""
      properties:
        engine_version:
          allOf:
          - $ref: "#/components/schemas/EngineVersionEnum"
        type:
          allOf:
          - $ref: "#/components/schemas/WAFEngineSettingsFieldTypeEnum"
        attributes:
          $ref: "#/components/schemas/WAFEngineSettingsAttributesFieldRequest"
      title: WAFEngineSettingsFieldRequest
      type: object
    WAFEngineSettingsFieldTypeEnum:
      description: '* `score` - score'
      title: WAFEngineSettingsFieldTypeEnum
      type: string
    WAFExceptionGenericCondition:
      additionalProperties: false
      example:
        match: match
      properties:
        match:
          description: |-
            * `any_http_header_name` - any_http_header_name
            * `any_http_header_value` - any_http_header_value
            * `any_query_string_name` - any_query_string_name
            * `any_query_string_value` - any_query_string_value
            * `any_url` - any_url
            * `body_form_field_name` - body_form_field_name
            * `body_form_field_value` - body_form_field_value
            * `file_extension` - file_extension
            * `raw_body` - raw_body
          title: WAFExceptionGenericConditionMatchEnum
          type: string
      required:
      - match
      title: WAFExceptionGenericCondition
      type: object
    WAFExceptionGenericConditionMatchEnum:
      description: |-
        * `any_http_header_name` - any_http_header_name
        * `any_http_header_value` - any_http_header_value
        * `any_query_string_name` - any_query_string_name
        * `any_query_string_value` - any_query_string_value
        * `any_url` - any_url
        * `body_form_field_name` - body_form_field_name
        * `body_form_field_value` - body_form_field_value
        * `file_extension` - file_extension
        * `raw_body` - raw_body
      title: WAFExceptionGenericConditionMatchEnum
      type: string
    WAFExceptionGenericConditionRequest:
      additionalProperties: false
      example:
        match: match
      properties:
        match:
          description: |-
            * `any_http_header_name` - any_http_header_name
            * `any_http_header_value` - any_http_header_value
            * `any_query_string_name` - any_query_string_name
            * `any_query_string_value` - any_query_string_value
            * `any_url` - any_url
            * `body_form_field_name` - body_form_field_name
            * `body_form_field_value` - body_form_field_value
            * `file_extension` - file_extension
            * `raw_body` - raw_body
          title: WAFExceptionGenericConditionMatchEnum
          type: string
      required:
      - match
      title: WAFExceptionGenericConditionRequest
      type: object
    WAFExceptionPolymorphicCondition:
      additionalProperties: true
      discriminator:
        mapping:
          any_http_header_name: "#/components/schemas/WAFExceptionGenericCondition"
          any_http_header_value: "#/components/schemas/WAFExceptionGenericCondition"
          any_query_string_name: "#/components/schemas/WAFExceptionGenericCondition"
          any_query_string_value: "#/components/schemas/WAFExceptionGenericCondition"
          any_url: "#/components/schemas/WAFExceptionGenericCondition"
          body_form_field_name: "#/components/schemas/WAFExceptionGenericCondition"
          body_form_field_value: "#/components/schemas/WAFExceptionGenericCondition"
          file_extension: "#/components/schemas/WAFExceptionGenericCondition"
          raw_body: "#/components/schemas/WAFExceptionGenericCondition"
          specific_body_form_field_name: "#/components/schemas/WAFExceptionSpecificConditionOnName"
          specific_body_form_field_value: "#/components/schemas/WAFExceptionSpecificConditionOnValue"
          specific_http_header_name: "#/components/schemas/WAFExceptionSpecificConditionOnName"
          specific_http_header_value: "#/components/schemas/WAFExceptionSpecificConditionOnValue"
          specific_query_string_name: "#/components/schemas/WAFExceptionSpecificConditionOnName"
          specific_query_string_value: "#/components/schemas/WAFExceptionSpecificConditionOnValue"
        propertyName: match
      oneOf:
      - $ref: "#/components/schemas/WAFExceptionGenericCondition"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnName"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnValue"
      title: WAFExceptionPolymorphicCondition
    WAFExceptionPolymorphicConditionRequest:
      additionalProperties: true
      discriminator:
        mapping:
          any_http_header_name: "#/components/schemas/WAFExceptionGenericConditionRequest"
          any_http_header_value: "#/components/schemas/WAFExceptionGenericConditionRequest"
          any_query_string_name: "#/components/schemas/WAFExceptionGenericConditionRequest"
          any_query_string_value: "#/components/schemas/WAFExceptionGenericConditionRequest"
          any_url: "#/components/schemas/WAFExceptionGenericConditionRequest"
          body_form_field_name: "#/components/schemas/WAFExceptionGenericConditionRequest"
          body_form_field_value: "#/components/schemas/WAFExceptionGenericConditionRequest"
          file_extension: "#/components/schemas/WAFExceptionGenericConditionRequest"
          raw_body: "#/components/schemas/WAFExceptionGenericConditionRequest"
          specific_body_form_field_name: "#/components/schemas/WAFExceptionSpecificConditionOnNameRequest"
          specific_body_form_field_value: "#/components/schemas/WAFExceptionSpecificConditionOnValueRequest"
          specific_http_header_name: "#/components/schemas/WAFExceptionSpecificConditionOnNameRequest"
          specific_http_header_value: "#/components/schemas/WAFExceptionSpecificConditionOnValueRequest"
          specific_query_string_name: "#/components/schemas/WAFExceptionSpecificConditionOnNameRequest"
          specific_query_string_value: "#/components/schemas/WAFExceptionSpecificConditionOnValueRequest"
        propertyName: match
      oneOf:
      - $ref: "#/components/schemas/WAFExceptionGenericConditionRequest"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnNameRequest"
      - $ref: "#/components/schemas/WAFExceptionSpecificConditionOnValueRequest"
      title: WAFExceptionPolymorphicConditionRequest
    WAFExceptionSpecificConditionOnName:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_name` - specific_body_form_field_name
            * `specific_http_header_name` - specific_http_header_name
            * `specific_query_string_name` - specific_query_string_name
          title: WAFExceptionSpecificConditionOnNameMatchEnum
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - match
      - name
      title: WAFExceptionSpecificConditionOnName
      type: object
    WAFExceptionSpecificConditionOnNameMatchEnum:
      description: |-
        * `specific_body_form_field_name` - specific_body_form_field_name
        * `specific_http_header_name` - specific_http_header_name
        * `specific_query_string_name` - specific_query_string_name
      title: WAFExceptionSpecificConditionOnNameMatchEnum
      type: string
    WAFExceptionSpecificConditionOnNameRequest:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_name` - specific_body_form_field_name
            * `specific_http_header_name` - specific_http_header_name
            * `specific_query_string_name` - specific_query_string_name
          title: WAFExceptionSpecificConditionOnNameMatchEnum
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - match
      - name
      title: WAFExceptionSpecificConditionOnNameRequest
      type: object
    WAFExceptionSpecificConditionOnValue:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_value` - specific_body_form_field_value
            * `specific_http_header_value` - specific_http_header_value
            * `specific_query_string_value` - specific_query_string_value
          title: WAFExceptionSpecificConditionOnValueMatchEnum
          type: string
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - match
      - value
      title: WAFExceptionSpecificConditionOnValue
      type: object
    WAFExceptionSpecificConditionOnValueMatchEnum:
      description: |-
        * `specific_body_form_field_value` - specific_body_form_field_value
        * `specific_http_header_value` - specific_http_header_value
        * `specific_query_string_value` - specific_query_string_value
      title: WAFExceptionSpecificConditionOnValueMatchEnum
      type: string
    WAFExceptionSpecificConditionOnValueRequest:
      additionalProperties: false
      properties:
        match:
          description: |-
            * `specific_body_form_field_value` - specific_body_form_field_value
            * `specific_http_header_value` - specific_http_header_value
            * `specific_query_string_value` - specific_query_string_value
          title: WAFExceptionSpecificConditionOnValueMatchEnum
          type: string
        value:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - match
      - value
      title: WAFExceptionSpecificConditionOnValueRequest
      type: object
    WAFRequest:
      additionalProperties: false
      example:
        product_version: product_version
        name: name
        engine_settings:
          attributes:
            rulesets:
            - null
            - null
            thresholds:
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
            - threat: threat
              sensitivity: ""
          engine_version: ""
          type: ""
        active: true
      properties:
        active:
          type: boolean
        name:
          maxLength: 250
          minLength: 1
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          nullable: true
          type: string
        engine_settings:
          $ref: "#/components/schemas/WAFEngineSettingsFieldRequest"
      required:
      - name
      title: WAFRequest
      type: object
    WAFRule:
      additionalProperties: false
      example:
        rule_id: ""
        path: path
        last_editor: last_editor
        name: name
        active: true
        id: 0
        conditions:
        - match: match
        - match: match
        last_modified: 2000-01-23T04:56:07.000+00:00
        operator: ""
      properties:
        id:
          format: int64
          type: integer
        rule_id:
          allOf:
          - $ref: "#/components/schemas/RuleIdEnum"
          description: |-
            0 - All Rules<br>
            1 - Validation of protocol compliance: weird request, unable to parse<br>
            2 - Request too big, stored on disk and not parsed<br>
            10 - Validation of protocol compliance: invalid HEX encoding (null bytes)<br>
            11 - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)<br>
            12 - Validation of protocol compliance: invalid formatted URL<br>
            13 - Validation of protocol compliance: invalid POST format<br>
            14 - Validation of protocol compliance: invalid POST boundary<br>
            15 - Validation of protocol compliance: invalid JSON<br>
            16 - Validation of protocol compliance: POST with no body<br>
            17 - Possible SQL Injection attack: validation with libinjection_sql<br>
            18 - Possible XSS attack: validation with libinjection_xss<br>
            1000 - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies<br>
            1001 - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies<br>
            1002 - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies<br>
            1003 - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies<br>
            1004 - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies<br>
            1005 - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies<br>
            1006 - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies<br>
            1007 - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies<br>
            1008 - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String<br>
            1009 - Possible SQL Injection attack: equal sign (=) found in Body or Query String<br>
            1010 - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies<br>
            1011 - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies<br>
            1013 - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies<br>
            1015 - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies<br>
            1016 - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies<br>
            1017 - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies<br>
            1100 - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies<br>
            1101 - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies<br>
            1102 - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies<br>
            1103 - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies<br>
            1104 - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies<br>
            1105 - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies<br>
            1106 - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies<br>
            1107 - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies<br>
            1108 - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies<br>
            1109 - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies<br>
            1110 - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies<br>
            1198 - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR<br>
            1199 - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies<br>
            1200 - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies<br>
            1202 - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies<br>
            1203 - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies<br>
            1204 - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies<br>
            1205 - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies<br>
            1206 - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies<br>
            1207 - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies<br>
            1208 - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies<br>
            1209 - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies<br>
            1210 - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies<br>
            1302 - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies<br>
            1303 - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies<br>
            1310 - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies<br>
            1311 - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies<br>
            1312 - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies<br>
            1314 - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies<br>
            1315 - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies<br>
            1400 - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies<br>
            1401 - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies<br>
            1402 - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies<br>
            1500 - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file<br>
            2001 - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering

            * `0` - All Rules
            * `1` - Validation of protocol compliance: weird request, unable to parse
            * `2` - Request too big, stored on disk and not parsed
            * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
            * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
            * `12` - Validation of protocol compliance: invalid formatted URL
            * `13` - Validation of protocol compliance: invalid POST format
            * `14` - Validation of protocol compliance: invalid POST boundary
            * `15` - Validation of protocol compliance: invalid JSON
            * `16` - Validation of protocol compliance: POST with no body
            * `17` - Possible SQL Injection attack: validation with libinjection_sql
            * `18` - Possible XSS attack: validation with libinjection_xss
            * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
            * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
            * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
            * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
            * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
            * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
            * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
            * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
            * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
            * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
            * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
            * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
            * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
            * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
            * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
            * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
            * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
            * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
            * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
            * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
            * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
            * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
            * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
            * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
            * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
            * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
            * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
            * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
            * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
            * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
            * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
            * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
            * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
            * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
            * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
            * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
            * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
            * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
            * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
            * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
            * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
            * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
            * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
            * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
            * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
            * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
            * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
            * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
            * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
            * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
            * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
        name:
          maxLength: 255
          minLength: 0
          type: string
        path:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/WAFExceptionPolymorphicCondition"
          minItems: 1
          type: array
        operator:
          allOf:
          - $ref: "#/components/schemas/WAFRuleOperatorEnum"
        active:
          type: boolean
        last_editor:
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - conditions
      - id
      - last_editor
      - last_modified
      - name
      title: WAFRule
      type: object
    WAFRuleOperatorEnum:
      description: |-
        * `regex` - regex
        * `contains` - contains
      title: WAFRuleOperatorEnum
      type: string
    WAFRuleRequest:
      additionalProperties: false
      example:
        rule_id: ""
        path: path
        name: name
        active: true
        conditions:
        - match: match
        - match: match
        operator: ""
      properties:
        rule_id:
          allOf:
          - $ref: "#/components/schemas/RuleIdEnum"
          description: |-
            0 - All Rules<br>
            1 - Validation of protocol compliance: weird request, unable to parse<br>
            2 - Request too big, stored on disk and not parsed<br>
            10 - Validation of protocol compliance: invalid HEX encoding (null bytes)<br>
            11 - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)<br>
            12 - Validation of protocol compliance: invalid formatted URL<br>
            13 - Validation of protocol compliance: invalid POST format<br>
            14 - Validation of protocol compliance: invalid POST boundary<br>
            15 - Validation of protocol compliance: invalid JSON<br>
            16 - Validation of protocol compliance: POST with no body<br>
            17 - Possible SQL Injection attack: validation with libinjection_sql<br>
            18 - Possible XSS attack: validation with libinjection_xss<br>
            1000 - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies<br>
            1001 - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies<br>
            1002 - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies<br>
            1003 - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies<br>
            1004 - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies<br>
            1005 - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies<br>
            1006 - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies<br>
            1007 - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies<br>
            1008 - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String<br>
            1009 - Possible SQL Injection attack: equal sign (=) found in Body or Query String<br>
            1010 - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies<br>
            1011 - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies<br>
            1013 - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies<br>
            1015 - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies<br>
            1016 - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies<br>
            1017 - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies<br>
            1100 - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies<br>
            1101 - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies<br>
            1102 - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies<br>
            1103 - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies<br>
            1104 - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies<br>
            1105 - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies<br>
            1106 - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies<br>
            1107 - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies<br>
            1108 - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies<br>
            1109 - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies<br>
            1110 - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies<br>
            1198 - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR<br>
            1199 - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies<br>
            1200 - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies<br>
            1202 - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies<br>
            1203 - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies<br>
            1204 - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies<br>
            1205 - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies<br>
            1206 - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies<br>
            1207 - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies<br>
            1208 - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies<br>
            1209 - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies<br>
            1210 - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies<br>
            1302 - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies<br>
            1303 - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies<br>
            1310 - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies<br>
            1311 - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies<br>
            1312 - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies<br>
            1314 - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies<br>
            1315 - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies<br>
            1400 - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies<br>
            1401 - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies<br>
            1402 - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies<br>
            1500 - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file<br>
            2001 - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering

            * `0` - All Rules
            * `1` - Validation of protocol compliance: weird request, unable to parse
            * `2` - Request too big, stored on disk and not parsed
            * `10` - Validation of protocol compliance: invalid HEX encoding (null bytes)
            * `11` - Validation of protocol compliance: missing or unknown Content-Type header in a POST (this rule applies only to Request Body match zone)
            * `12` - Validation of protocol compliance: invalid formatted URL
            * `13` - Validation of protocol compliance: invalid POST format
            * `14` - Validation of protocol compliance: invalid POST boundary
            * `15` - Validation of protocol compliance: invalid JSON
            * `16` - Validation of protocol compliance: POST with no body
            * `17` - Possible SQL Injection attack: validation with libinjection_sql
            * `18` - Possible XSS attack: validation with libinjection_xss
            * `1000` - Possible SQL Injection attack: SQL keywords found in Body, Path, Query String or Cookies
            * `1001` - Possible SQL Injection or XSS attack: double quote (") found in Body, Path, Query String or Cookies
            * `1002` - Possible SQL Injection attack: possible hex encoding (0x) found in Body, Path, Query String or Cookies
            * `1003` - Possible SQL Injection attack: MySQL comment (/*) found in Body, Path, Query String or Cookies
            * `1004` - Possible SQL Injection attack: MySQL comment (*/) found in Body, Path, Query String or Cookies
            * `1005` - Possible SQL Injection attack: MySQL keyword (|) found in Body, Path, Query String or Cookies
            * `1006` - Possible SQL Injection attack: MySQL keyword (&&) found in Body, Path, Query String or Cookies
            * `1007` - Possible SQL Injection attack: MySQL comment (--) found in Body, Path, Query String or Cookies
            * `1008` - Possible SQL Injection or XSS attack: semicolon (;) found in Body, Path or Query String
            * `1009` - Possible SQL Injection attack: equal sign (=) found in Body or Query String
            * `1010` - Possible SQL Injection or XSS attack: open parenthesis [(] found in Body, Path, Query String or Cookies
            * `1011` - Possible SQL Injection or XSS attack: close parenthesis [)] found in Body, Path, Query String or Cookies
            * `1013` - Possible SQL Injection or XSS attack: apostrophe (') found in Body, Path, Query String or Cookies
            * `1015` - Possible SQL Injection attack: comma (,) found in Body, Path, Query String or Cookies
            * `1016` - Possible SQL Injection attack: MySQL comment (#) found in Body, Path, Query String or Cookies
            * `1017` - Possible SQL Injection attack: double at sign (@@) found in Body, Path, Query String or Cookies
            * `1100` - Possible RFI attack: scheme "http://" found in Body, Query String or Cookies
            * `1101` - Possible RFI attack: scheme "https://" found in Body, Query String or Cookies
            * `1102` - Possible RFI attack: scheme "ftp://" found in Body, Query String or Cookies
            * `1103` - Possible RFI attack: scheme "php://" found in Body, Query String or Cookies
            * `1104` - Possible RFI attack: scheme "sftp://" found in Body, Query String or Cookies
            * `1105` - Possible RFI attack: scheme "zlib://" found in Body, Query String or Cookies
            * `1106` - Possible RFI attack: scheme "data://" found in Body, Query String or Cookies
            * `1107` - Possible RFI attack: scheme "glob://" found in Body, Query String or Cookies
            * `1108` - Possible RFI attack: scheme "phar://" found in Body, Query String or Cookies
            * `1109` - Possible RFI attack: scheme "file://" found in Body, Query String or Cookies
            * `1110` - Possible RFI attack: scheme "gopher://" found in Body, Query String or Cookies
            * `1198` - Possible RCE attack: validation with log4j (Log4Shell) in HEADERS_VAR
            * `1199` - Possible RCE attack: validation with log4j (Log4Shell) in Body, Path, Query String, Headers or Cookies
            * `1200` - Possible Directory Traversal attack: double dot (..) found in Body, Path, Query String or Cookies
            * `1202` - Possible Directory Traversal attack: obvious probe (/etc/passwd) found in Body, Path, Query String or Cookies
            * `1203` - Possible Directory Traversal attack: obvious windows path (c:\) found in Body, Path, Query String or Cookies
            * `1204` - Possible Directory Traversal attack: obvious probe (cmd.exe) found in Body, Path, Query String or Cookies
            * `1205` - Possible Directory Traversal attack: backslash (\) found in Body, Path, Query String or Cookies
            * `1206` - Possible Directory Traversal attack: slash (/) found in Body, Query String or Cookies
            * `1207` - Possible Directory Traversal attack: obvious path probe (/..;/) found in Body, Query String or Cookies
            * `1208` - Possible Directory Traversal attack: obvious path probe (/.;/) found in Body, Query String or Cookies
            * `1209` - Possible Directory Traversal attack: obvious path probe (/.%2e/) found in Body, Query String or Cookies
            * `1210` - Possible Directory Traversal attack: obvious path probe (/%2e./) found in Body, Query String or Cookies
            * `1302` - Possible XSS attack: html open tag (<) found in Body, Path, Query String or Cookies
            * `1303` - Possible XSS attack: html close tag (>) found in Body, Path, Query String or Cookies
            * `1310` - Possible XSS attack: open square bracket ([) found in Body, Path, Query String or Cookies
            * `1311` - Possible XSS attack: close square bracket (]) found in Body, Path, Query String or Cookies
            * `1312` - Possible XSS attack: tilde character (~) found in Body, Path, Query String or Cookies
            * `1314` - Possible XSS attack: back quote ( `) found in Body, Path, Query String or Cookies
            * `1315` - Possible XSS attack: double encoding (%[2|3]) found in Body, Path, Query String or Cookies
            * `1400` - Possible trick to evade protection: UTF7/8 encoding (&#) found in Body, Path, Query String or Cookies
            * `1401` - Possible trick to evade protection: MS encoding (%U) found in Body, Path, Query String or Cookies
            * `1402` - Possible trick to evade protection: encoded chars (%20-%3F) found in Body, Query String or Cookies
            * `1500` - Possible File Upload attempt: asp/php (.ph, .asp or .ht) found in filename in a multipart POST containing a file
            * `2001` - Possible CVE-2022-22965 attack: Tomcat Pipeline Context tampering
        name:
          maxLength: 255
          minLength: 1
          type: string
        path:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/WAFExceptionPolymorphicConditionRequest"
          minItems: 1
          type: array
        operator:
          allOf:
          - $ref: "#/components/schemas/WAFRuleOperatorEnum"
        active:
          type: boolean
      required:
      - conditions
      - name
      title: WAFRuleRequest
      type: object
    Workload:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        active: true
        domains:
        - domains
        - domains
        workload_domain: workload_domain
        infrastructure: ""
        name: name
        workload_domain_allow_access: true
        tls: ""
        id: 0
        protocols: ""
        last_modified: 2000-01-23T04:56:07.000+00:00
        mtls:
          certificate: 1
          crl:
          - 1
          - 1
          - 1
          - 1
          - 1
          verification: null
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 100
          minLength: 1
          type: string
        active:
          type: boolean
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
        infrastructure:
          allOf:
          - $ref: "#/components/schemas/InfrastructureEnum"
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSWorkload"
        protocols:
          allOf:
          - $ref: "#/components/schemas/Protocols"
        mtls:
          $ref: "#/components/schemas/MTLS"
        domains:
          items:
            type: string
          type: array
        workload_domain_allow_access:
          type: boolean
        workload_domain:
          type: string
        product_version:
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - workload_domain
      title: Workload
      type: object
    WorkloadDeployment:
      additionalProperties: false
      example:
        current: true
        last_editor: last_editor
        name: name
        active: true
        id: 0
        strategy:
          attributes:
            application: 5559347081229897728
            firewall: 1
            custom_page: 1
          type: type
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 254
          minLength: 1
          type: string
        current:
          type: boolean
        active:
          type: boolean
        strategy:
          $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategy"
        last_editor:
          maxLength: 250
          minLength: 1
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - strategy
      title: WorkloadDeployment
      type: object
    WorkloadDeploymentRequest:
      additionalProperties: false
      example:
        current: true
        name: name
        active: true
        strategy:
          attributes:
            application: 738633633822310400
            firewall: 6
            custom_page: 1
          type: type
      properties:
        name:
          maxLength: 254
          minLength: 1
          type: string
        current:
          type: boolean
        active:
          type: boolean
        strategy:
          $ref: "#/components/schemas/DeploymentStrategyDefaultDeploymentStrategyRequest"
      required:
      - name
      - strategy
      title: WorkloadDeploymentRequest
      type: object
    WorkloadRequest:
      additionalProperties: false
      example:
        infrastructure: ""
        name: name
        active: true
        domains:
        - domains
        - domains
        workload_domain_allow_access: true
        tls: ""
        protocols: ""
        mtls:
          certificate: 1
          crl:
          - 1
          - 1
          - 1
          - 1
          - 1
          verification: null
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        active:
          type: boolean
        infrastructure:
          allOf:
          - $ref: "#/components/schemas/InfrastructureEnum"
        tls:
          allOf:
          - $ref: "#/components/schemas/TLSWorkloadRequest"
        protocols:
          allOf:
          - $ref: "#/components/schemas/ProtocolsRequest"
        mtls:
          $ref: "#/components/schemas/MTLSRequest"
        domains:
          items:
            minLength: 1
            type: string
          type: array
        workload_domain_allow_access:
          type: boolean
      required:
      - name
      title: WorkloadRequest
      type: object
    ApplicationRuleEngineStringAttributes_value:
      oneOf:
      - type: string
      - format: int64
        type: integer
    EdgeFunctions_azion_form:
      description: |
        JSON schema to be rendered as a json args form.
        - azion_form must be a JSON schema.
        - If there are no schema being informed, an empty JSON object will be used.
      example:
        type: object
        properties:
          domain:
            type: string
            title: Domain
            description: Domain where the cookie will be valid (use '.' at the beginning
              for subdomains)
          max_age:
            type: integer
            title: Max Age (seconds)
            description: Cookie lifetime in seconds
            minimum: 1
            maximum: 31536000
            format: int64
          path:
            type: string
            title: Path
            description: Path where the cookie will be valid
          values:
            type: array
            title: Test Variations
            description: List of A/B test variations with their respective weights
            minItems: 2
            maxItems: 10
            items:
              type: object
              properties:
                value:
                  type: string
                  title: Variation Value
                  description: Unique variation identifier
                  minLength: 1
                  maxLength: 50
                weight:
                  type: integer
                  title: Weight
                  description: Variance weight (higher weight = higher probability)
                  minimum: 1
                  maximum: 100
                  format: int64
              required:
              - value
              - weight
              additionalProperties: false
        required:
        - domain
        - max_age
        - path
        - values
        additionalProperties: false
      properties:
        arg:
          type: object
      type: object
    MTLS_verification:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/VerificationEnum"
      - $ref: "#/components/schemas/NullEnum"
    ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField_cookie_names:
      oneOf:
      - items:
          type: string
        type: array
      - additionalProperties:
          items:
            type: string
          type: array
        type: object
    TLSWorkload_minimum_version:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/MinimumVersionEnum"
      - $ref: "#/components/schemas/BlankEnum"
      - $ref: "#/components/schemas/NullEnum"
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    TokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
