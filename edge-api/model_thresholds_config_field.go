/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ThresholdsConfigField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdsConfigField{}

// ThresholdsConfigField struct for ThresholdsConfigField
type ThresholdsConfigField struct {
	// * `cross_site_scripting` - cross_site_scripting * `directory_traversal` - directory_traversal * `evading_tricks` - evading_tricks * `file_upload` - file_upload * `identified_attack` - identified_attack * `remote_file_inclusion` - remote_file_inclusion * `sql_injection` - sql_injection * `unwanted_access` - unwanted_access
	Threat string `json:"threat"`
	// * `highest` - Highest * `high` - High * `medium` - Medium * `low` - Low * `lowest` - Lowest
	Sensitivity *string `json:"sensitivity,omitempty"`
}

type _ThresholdsConfigField ThresholdsConfigField

// NewThresholdsConfigField instantiates a new ThresholdsConfigField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdsConfigField(threat string) *ThresholdsConfigField {
	this := ThresholdsConfigField{}
	this.Threat = threat
	return &this
}

// NewThresholdsConfigFieldWithDefaults instantiates a new ThresholdsConfigField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdsConfigFieldWithDefaults() *ThresholdsConfigField {
	this := ThresholdsConfigField{}
	return &this
}

// GetThreat returns the Threat field value
func (o *ThresholdsConfigField) GetThreat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Threat
}

// GetThreatOk returns a tuple with the Threat field value
// and a boolean to check if the value has been set.
func (o *ThresholdsConfigField) GetThreatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threat, true
}

// SetThreat sets field value
func (o *ThresholdsConfigField) SetThreat(v string) {
	o.Threat = v
}

// GetSensitivity returns the Sensitivity field value if set, zero value otherwise.
func (o *ThresholdsConfigField) GetSensitivity() string {
	if o == nil || IsNil(o.Sensitivity) {
		var ret string
		return ret
	}
	return *o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdsConfigField) GetSensitivityOk() (*string, bool) {
	if o == nil || IsNil(o.Sensitivity) {
		return nil, false
	}
	return o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *ThresholdsConfigField) HasSensitivity() bool {
	if o != nil && !IsNil(o.Sensitivity) {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given string and assigns it to the Sensitivity field.
func (o *ThresholdsConfigField) SetSensitivity(v string) {
	o.Sensitivity = &v
}

func (o ThresholdsConfigField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdsConfigField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["threat"] = o.Threat
	if !IsNil(o.Sensitivity) {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	return toSerialize, nil
}

func (o *ThresholdsConfigField) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"threat",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varThresholdsConfigField := _ThresholdsConfigField{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varThresholdsConfigField)

	if err != nil {
		return err
	}

	*o = ThresholdsConfigField(varThresholdsConfigField)

	return err
}

type NullableThresholdsConfigField struct {
	value *ThresholdsConfigField
	isSet bool
}

func (v NullableThresholdsConfigField) Get() *ThresholdsConfigField {
	return v.value
}

func (v *NullableThresholdsConfigField) Set(val *ThresholdsConfigField) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdsConfigField) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdsConfigField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdsConfigField(val *ThresholdsConfigField) *NullableThresholdsConfigField {
	return &NullableThresholdsConfigField{value: val, isSet: true}
}

func (v NullableThresholdsConfigField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdsConfigField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


