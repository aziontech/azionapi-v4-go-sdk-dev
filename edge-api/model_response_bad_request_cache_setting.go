/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestCacheSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestCacheSetting{}

// ResponseBadRequestCacheSetting struct for ResponseBadRequestCacheSetting
type ResponseBadRequestCacheSetting struct {
	Id []string `json:"id,omitempty"`
	Name []string `json:"name,omitempty"`
	BrowserCache *ResponseBadRequestSerializerMetaclassBrowserCacheField `json:"browser_cache,omitempty"`
	Modules *ResponseBadRequestSerializerMetaclassModulesField `json:"modules,omitempty"`
	Detail *string `json:"detail,omitempty"`
}

// NewResponseBadRequestCacheSetting instantiates a new ResponseBadRequestCacheSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestCacheSetting() *ResponseBadRequestCacheSetting {
	this := ResponseBadRequestCacheSetting{}
	return &this
}

// NewResponseBadRequestCacheSettingWithDefaults instantiates a new ResponseBadRequestCacheSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestCacheSettingWithDefaults() *ResponseBadRequestCacheSetting {
	this := ResponseBadRequestCacheSetting{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSetting) GetId() []string {
	if o == nil || IsNil(o.Id) {
		var ret []string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSetting) GetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSetting) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given []string and assigns it to the Id field.
func (o *ResponseBadRequestCacheSetting) SetId(v []string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSetting) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSetting) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSetting) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestCacheSetting) SetName(v []string) {
	o.Name = v
}

// GetBrowserCache returns the BrowserCache field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSetting) GetBrowserCache() ResponseBadRequestSerializerMetaclassBrowserCacheField {
	if o == nil || IsNil(o.BrowserCache) {
		var ret ResponseBadRequestSerializerMetaclassBrowserCacheField
		return ret
	}
	return *o.BrowserCache
}

// GetBrowserCacheOk returns a tuple with the BrowserCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSetting) GetBrowserCacheOk() (*ResponseBadRequestSerializerMetaclassBrowserCacheField, bool) {
	if o == nil || IsNil(o.BrowserCache) {
		return nil, false
	}
	return o.BrowserCache, true
}

// HasBrowserCache returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSetting) HasBrowserCache() bool {
	if o != nil && !IsNil(o.BrowserCache) {
		return true
	}

	return false
}

// SetBrowserCache gets a reference to the given ResponseBadRequestSerializerMetaclassBrowserCacheField and assigns it to the BrowserCache field.
func (o *ResponseBadRequestCacheSetting) SetBrowserCache(v ResponseBadRequestSerializerMetaclassBrowserCacheField) {
	o.BrowserCache = &v
}

// GetModules returns the Modules field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSetting) GetModules() ResponseBadRequestSerializerMetaclassModulesField {
	if o == nil || IsNil(o.Modules) {
		var ret ResponseBadRequestSerializerMetaclassModulesField
		return ret
	}
	return *o.Modules
}

// GetModulesOk returns a tuple with the Modules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSetting) GetModulesOk() (*ResponseBadRequestSerializerMetaclassModulesField, bool) {
	if o == nil || IsNil(o.Modules) {
		return nil, false
	}
	return o.Modules, true
}

// HasModules returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSetting) HasModules() bool {
	if o != nil && !IsNil(o.Modules) {
		return true
	}

	return false
}

// SetModules gets a reference to the given ResponseBadRequestSerializerMetaclassModulesField and assigns it to the Modules field.
func (o *ResponseBadRequestCacheSetting) SetModules(v ResponseBadRequestSerializerMetaclassModulesField) {
	o.Modules = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSetting) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSetting) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSetting) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestCacheSetting) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestCacheSetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestCacheSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BrowserCache) {
		toSerialize["browser_cache"] = o.BrowserCache
	}
	if !IsNil(o.Modules) {
		toSerialize["modules"] = o.Modules
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestCacheSetting struct {
	value *ResponseBadRequestCacheSetting
	isSet bool
}

func (v NullableResponseBadRequestCacheSetting) Get() *ResponseBadRequestCacheSetting {
	return v.value
}

func (v *NullableResponseBadRequestCacheSetting) Set(val *ResponseBadRequestCacheSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestCacheSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestCacheSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestCacheSetting(val *ResponseBadRequestCacheSetting) *NullableResponseBadRequestCacheSetting {
	return &NullableResponseBadRequestCacheSetting{value: val, isSet: true}
}

func (v NullableResponseBadRequestCacheSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestCacheSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


