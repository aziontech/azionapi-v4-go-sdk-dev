/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApplicationRuleEngineResponsePhaseBehaviors - struct for ApplicationRuleEngineResponsePhaseBehaviors
type ApplicationRuleEngineResponsePhaseBehaviors struct {
	ApplicationResponsePhaseBehaviorCaptureMatchGroups *ApplicationResponsePhaseBehaviorCaptureMatchGroups
	ApplicationResponsePhaseBehaviorWithArgs *ApplicationResponsePhaseBehaviorWithArgs
	ApplicationResponsePhaseBehaviorWithoutArgs *ApplicationResponsePhaseBehaviorWithoutArgs
}

// ApplicationResponsePhaseBehaviorCaptureMatchGroupsAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationResponsePhaseBehaviorCaptureMatchGroups wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationResponsePhaseBehaviorCaptureMatchGroupsAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationResponsePhaseBehaviorCaptureMatchGroups) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationResponsePhaseBehaviorCaptureMatchGroups: v,
	}
}

// ApplicationResponsePhaseBehaviorWithArgsAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationResponsePhaseBehaviorWithArgs wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationResponsePhaseBehaviorWithArgsAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationResponsePhaseBehaviorWithArgs) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationResponsePhaseBehaviorWithArgs: v,
	}
}

// ApplicationResponsePhaseBehaviorWithoutArgsAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationResponsePhaseBehaviorWithoutArgs wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationResponsePhaseBehaviorWithoutArgsAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationResponsePhaseBehaviorWithoutArgs) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationResponsePhaseBehaviorWithoutArgs: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApplicationRuleEngineResponsePhaseBehaviors) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApplicationResponsePhaseBehaviorCaptureMatchGroups
	err = newStrictDecoder(data).Decode(&dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups)
	if err == nil {
		jsonApplicationResponsePhaseBehaviorCaptureMatchGroups, _ := json.Marshal(dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups)
		if string(jsonApplicationResponsePhaseBehaviorCaptureMatchGroups) == "{}" { // empty struct
			dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups = nil
		} else {
			if err = validator.Validate(dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups); err != nil {
				dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups = nil
	}

	// try to unmarshal data into ApplicationResponsePhaseBehaviorWithArgs
	err = newStrictDecoder(data).Decode(&dst.ApplicationResponsePhaseBehaviorWithArgs)
	if err == nil {
		jsonApplicationResponsePhaseBehaviorWithArgs, _ := json.Marshal(dst.ApplicationResponsePhaseBehaviorWithArgs)
		if string(jsonApplicationResponsePhaseBehaviorWithArgs) == "{}" { // empty struct
			dst.ApplicationResponsePhaseBehaviorWithArgs = nil
		} else {
			if err = validator.Validate(dst.ApplicationResponsePhaseBehaviorWithArgs); err != nil {
				dst.ApplicationResponsePhaseBehaviorWithArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationResponsePhaseBehaviorWithArgs = nil
	}

	// try to unmarshal data into ApplicationResponsePhaseBehaviorWithoutArgs
	err = newStrictDecoder(data).Decode(&dst.ApplicationResponsePhaseBehaviorWithoutArgs)
	if err == nil {
		jsonApplicationResponsePhaseBehaviorWithoutArgs, _ := json.Marshal(dst.ApplicationResponsePhaseBehaviorWithoutArgs)
		if string(jsonApplicationResponsePhaseBehaviorWithoutArgs) == "{}" { // empty struct
			dst.ApplicationResponsePhaseBehaviorWithoutArgs = nil
		} else {
			if err = validator.Validate(dst.ApplicationResponsePhaseBehaviorWithoutArgs); err != nil {
				dst.ApplicationResponsePhaseBehaviorWithoutArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationResponsePhaseBehaviorWithoutArgs = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApplicationResponsePhaseBehaviorCaptureMatchGroups = nil
		dst.ApplicationResponsePhaseBehaviorWithArgs = nil
		dst.ApplicationResponsePhaseBehaviorWithoutArgs = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApplicationRuleEngineResponsePhaseBehaviors)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApplicationRuleEngineResponsePhaseBehaviors)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApplicationRuleEngineResponsePhaseBehaviors) MarshalJSON() ([]byte, error) {
	if src.ApplicationResponsePhaseBehaviorCaptureMatchGroups != nil {
		return json.Marshal(&src.ApplicationResponsePhaseBehaviorCaptureMatchGroups)
	}

	if src.ApplicationResponsePhaseBehaviorWithArgs != nil {
		return json.Marshal(&src.ApplicationResponsePhaseBehaviorWithArgs)
	}

	if src.ApplicationResponsePhaseBehaviorWithoutArgs != nil {
		return json.Marshal(&src.ApplicationResponsePhaseBehaviorWithoutArgs)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApplicationRuleEngineResponsePhaseBehaviors) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApplicationResponsePhaseBehaviorCaptureMatchGroups != nil {
		return obj.ApplicationResponsePhaseBehaviorCaptureMatchGroups
	}

	if obj.ApplicationResponsePhaseBehaviorWithArgs != nil {
		return obj.ApplicationResponsePhaseBehaviorWithArgs
	}

	if obj.ApplicationResponsePhaseBehaviorWithoutArgs != nil {
		return obj.ApplicationResponsePhaseBehaviorWithoutArgs
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApplicationRuleEngineResponsePhaseBehaviors) GetActualInstanceValue() (interface{}) {
	if obj.ApplicationResponsePhaseBehaviorCaptureMatchGroups != nil {
		return *obj.ApplicationResponsePhaseBehaviorCaptureMatchGroups
	}

	if obj.ApplicationResponsePhaseBehaviorWithArgs != nil {
		return *obj.ApplicationResponsePhaseBehaviorWithArgs
	}

	if obj.ApplicationResponsePhaseBehaviorWithoutArgs != nil {
		return *obj.ApplicationResponsePhaseBehaviorWithoutArgs
	}

	// all schemas are nil
	return nil
}

type NullableApplicationRuleEngineResponsePhaseBehaviors struct {
	value *ApplicationRuleEngineResponsePhaseBehaviors
	isSet bool
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviors) Get() *ApplicationRuleEngineResponsePhaseBehaviors {
	return v.value
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviors) Set(val *ApplicationRuleEngineResponsePhaseBehaviors) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviors) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRuleEngineResponsePhaseBehaviors(val *ApplicationRuleEngineResponsePhaseBehaviors) *NullableApplicationRuleEngineResponsePhaseBehaviors {
	return &NullableApplicationRuleEngineResponsePhaseBehaviors{value: val, isSet: true}
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


