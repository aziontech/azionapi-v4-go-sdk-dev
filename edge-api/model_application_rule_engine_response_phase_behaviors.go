/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApplicationRuleEngineResponsePhaseBehaviors - struct for ApplicationRuleEngineResponsePhaseBehaviors
type ApplicationRuleEngineResponsePhaseBehaviors struct {
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse
	ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader: v,
	}
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups: v,
	}
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader: v,
	}
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs: v,
	}
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString: v,
	}
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse: v,
	}
}

// ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieAsApplicationRuleEngineResponsePhaseBehaviors is a convenience function that returns ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie wrapped in ApplicationRuleEngineResponsePhaseBehaviors
func ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieAsApplicationRuleEngineResponsePhaseBehaviors(v *ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie) ApplicationRuleEngineResponsePhaseBehaviors {
	return ApplicationRuleEngineResponsePhaseBehaviors{
		ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApplicationRuleEngineResponsePhaseBehaviors) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader = nil
	}

	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups = nil
	}

	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader = nil
	}

	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs = nil
	}

	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString = nil
	}

	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse = nil
	}

	// try to unmarshal data into ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie
	err = newStrictDecoder(data).Decode(&dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie)
	if err == nil {
		jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie, _ := json.Marshal(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie)
		if string(jsonApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie) == "{}" { // empty struct
			dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie = nil
		} else {
			if err = validator.Validate(dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie); err != nil {
				dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader = nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups = nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader = nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs = nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString = nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse = nil
		dst.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApplicationRuleEngineResponsePhaseBehaviors)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApplicationRuleEngineResponsePhaseBehaviors)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApplicationRuleEngineResponsePhaseBehaviors) MarshalJSON() ([]byte, error) {
	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader)
	}

	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups)
	}

	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader)
	}

	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs)
	}

	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString)
	}

	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse)
	}

	if src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie != nil {
		return json.Marshal(&src.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApplicationRuleEngineResponsePhaseBehaviors) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie != nil {
		return obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApplicationRuleEngineResponsePhaseBehaviors) GetActualInstanceValue() (interface{}) {
	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse
	}

	if obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie != nil {
		return *obj.ApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie
	}

	// all schemas are nil
	return nil
}

type NullableApplicationRuleEngineResponsePhaseBehaviors struct {
	value *ApplicationRuleEngineResponsePhaseBehaviors
	isSet bool
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviors) Get() *ApplicationRuleEngineResponsePhaseBehaviors {
	return v.value
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviors) Set(val *ApplicationRuleEngineResponsePhaseBehaviors) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviors) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRuleEngineResponsePhaseBehaviors(val *ApplicationRuleEngineResponsePhaseBehaviors) *NullableApplicationRuleEngineResponsePhaseBehaviors {
	return &NullableApplicationRuleEngineResponsePhaseBehaviors{value: val, isSet: true}
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


