/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the PatchedEdgeApplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedEdgeApplicationRequest{}

// PatchedEdgeApplicationRequest struct for PatchedEdgeApplicationRequest
type PatchedEdgeApplicationRequest struct {
	Name *string `json:"name,omitempty" validate:"regexp=.*"`
	Modules *EdgeApplicationModulesRequest `json:"modules,omitempty"`
	Active *bool `json:"active,omitempty"`
	Debug *bool `json:"debug,omitempty"`
}

// NewPatchedEdgeApplicationRequest instantiates a new PatchedEdgeApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedEdgeApplicationRequest() *PatchedEdgeApplicationRequest {
	this := PatchedEdgeApplicationRequest{}
	return &this
}

// NewPatchedEdgeApplicationRequestWithDefaults instantiates a new PatchedEdgeApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedEdgeApplicationRequestWithDefaults() *PatchedEdgeApplicationRequest {
	this := PatchedEdgeApplicationRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedEdgeApplicationRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeApplicationRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedEdgeApplicationRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedEdgeApplicationRequest) SetName(v string) {
	o.Name = &v
}

// GetModules returns the Modules field value if set, zero value otherwise.
func (o *PatchedEdgeApplicationRequest) GetModules() EdgeApplicationModulesRequest {
	if o == nil || IsNil(o.Modules) {
		var ret EdgeApplicationModulesRequest
		return ret
	}
	return *o.Modules
}

// GetModulesOk returns a tuple with the Modules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeApplicationRequest) GetModulesOk() (*EdgeApplicationModulesRequest, bool) {
	if o == nil || IsNil(o.Modules) {
		return nil, false
	}
	return o.Modules, true
}

// HasModules returns a boolean if a field has been set.
func (o *PatchedEdgeApplicationRequest) HasModules() bool {
	if o != nil && !IsNil(o.Modules) {
		return true
	}

	return false
}

// SetModules gets a reference to the given EdgeApplicationModulesRequest and assigns it to the Modules field.
func (o *PatchedEdgeApplicationRequest) SetModules(v EdgeApplicationModulesRequest) {
	o.Modules = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PatchedEdgeApplicationRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeApplicationRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PatchedEdgeApplicationRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PatchedEdgeApplicationRequest) SetActive(v bool) {
	o.Active = &v
}

// GetDebug returns the Debug field value if set, zero value otherwise.
func (o *PatchedEdgeApplicationRequest) GetDebug() bool {
	if o == nil || IsNil(o.Debug) {
		var ret bool
		return ret
	}
	return *o.Debug
}

// GetDebugOk returns a tuple with the Debug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeApplicationRequest) GetDebugOk() (*bool, bool) {
	if o == nil || IsNil(o.Debug) {
		return nil, false
	}
	return o.Debug, true
}

// HasDebug returns a boolean if a field has been set.
func (o *PatchedEdgeApplicationRequest) HasDebug() bool {
	if o != nil && !IsNil(o.Debug) {
		return true
	}

	return false
}

// SetDebug gets a reference to the given bool and assigns it to the Debug field.
func (o *PatchedEdgeApplicationRequest) SetDebug(v bool) {
	o.Debug = &v
}

func (o PatchedEdgeApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedEdgeApplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Modules) {
		toSerialize["modules"] = o.Modules
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Debug) {
		toSerialize["debug"] = o.Debug
	}
	return toSerialize, nil
}

type NullablePatchedEdgeApplicationRequest struct {
	value *PatchedEdgeApplicationRequest
	isSet bool
}

func (v NullablePatchedEdgeApplicationRequest) Get() *PatchedEdgeApplicationRequest {
	return v.value
}

func (v *NullablePatchedEdgeApplicationRequest) Set(val *PatchedEdgeApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedEdgeApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedEdgeApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedEdgeApplicationRequest(val *PatchedEdgeApplicationRequest) *NullablePatchedEdgeApplicationRequest {
	return &NullablePatchedEdgeApplicationRequest{value: val, isSet: true}
}

func (v NullablePatchedEdgeApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedEdgeApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


