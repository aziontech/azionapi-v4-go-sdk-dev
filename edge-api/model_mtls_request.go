/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the MTLSRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MTLSRequest{}

// MTLSRequest struct for MTLSRequest
type MTLSRequest struct {
	Verification NullableMTLSVerification `json:"verification,omitempty"`
	Certificate NullableInt64 `json:"certificate,omitempty"`
	Crl []int64 `json:"crl,omitempty"`
}

// NewMTLSRequest instantiates a new MTLSRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMTLSRequest() *MTLSRequest {
	this := MTLSRequest{}
	return &this
}

// NewMTLSRequestWithDefaults instantiates a new MTLSRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMTLSRequestWithDefaults() *MTLSRequest {
	this := MTLSRequest{}
	return &this
}

// GetVerification returns the Verification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTLSRequest) GetVerification() MTLSVerification {
	if o == nil || IsNil(o.Verification.Get()) {
		var ret MTLSVerification
		return ret
	}
	return *o.Verification.Get()
}

// GetVerificationOk returns a tuple with the Verification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTLSRequest) GetVerificationOk() (*MTLSVerification, bool) {
	if o == nil {
		return nil, false
	}
	return o.Verification.Get(), o.Verification.IsSet()
}

// HasVerification returns a boolean if a field has been set.
func (o *MTLSRequest) HasVerification() bool {
	if o != nil && o.Verification.IsSet() {
		return true
	}

	return false
}

// SetVerification gets a reference to the given NullableMTLSVerification and assigns it to the Verification field.
func (o *MTLSRequest) SetVerification(v MTLSVerification) {
	o.Verification.Set(&v)
}
// SetVerificationNil sets the value for Verification to be an explicit nil
func (o *MTLSRequest) SetVerificationNil() {
	o.Verification.Set(nil)
}

// UnsetVerification ensures that no value is present for Verification, not even an explicit nil
func (o *MTLSRequest) UnsetVerification() {
	o.Verification.Unset()
}

// GetCertificate returns the Certificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTLSRequest) GetCertificate() int64 {
	if o == nil || IsNil(o.Certificate.Get()) {
		var ret int64
		return ret
	}
	return *o.Certificate.Get()
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTLSRequest) GetCertificateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Certificate.Get(), o.Certificate.IsSet()
}

// HasCertificate returns a boolean if a field has been set.
func (o *MTLSRequest) HasCertificate() bool {
	if o != nil && o.Certificate.IsSet() {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given NullableInt64 and assigns it to the Certificate field.
func (o *MTLSRequest) SetCertificate(v int64) {
	o.Certificate.Set(&v)
}
// SetCertificateNil sets the value for Certificate to be an explicit nil
func (o *MTLSRequest) SetCertificateNil() {
	o.Certificate.Set(nil)
}

// UnsetCertificate ensures that no value is present for Certificate, not even an explicit nil
func (o *MTLSRequest) UnsetCertificate() {
	o.Certificate.Unset()
}

// GetCrl returns the Crl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MTLSRequest) GetCrl() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.Crl
}

// GetCrlOk returns a tuple with the Crl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MTLSRequest) GetCrlOk() ([]int64, bool) {
	if o == nil || IsNil(o.Crl) {
		return nil, false
	}
	return o.Crl, true
}

// HasCrl returns a boolean if a field has been set.
func (o *MTLSRequest) HasCrl() bool {
	if o != nil && !IsNil(o.Crl) {
		return true
	}

	return false
}

// SetCrl gets a reference to the given []int64 and assigns it to the Crl field.
func (o *MTLSRequest) SetCrl(v []int64) {
	o.Crl = v
}

func (o MTLSRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MTLSRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Verification.IsSet() {
		toSerialize["verification"] = o.Verification.Get()
	}
	if o.Certificate.IsSet() {
		toSerialize["certificate"] = o.Certificate.Get()
	}
	if o.Crl != nil {
		toSerialize["crl"] = o.Crl
	}
	return toSerialize, nil
}

type NullableMTLSRequest struct {
	value *MTLSRequest
	isSet bool
}

func (v NullableMTLSRequest) Get() *MTLSRequest {
	return v.value
}

func (v *NullableMTLSRequest) Set(val *MTLSRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMTLSRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMTLSRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMTLSRequest(val *MTLSRequest) *NullableMTLSRequest {
	return &NullableMTLSRequest{value: val, isSet: true}
}

func (v NullableMTLSRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMTLSRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


