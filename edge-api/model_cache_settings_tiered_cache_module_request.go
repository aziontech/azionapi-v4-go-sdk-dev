/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the CacheSettingsTieredCacheModuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CacheSettingsTieredCacheModuleRequest{}

// CacheSettingsTieredCacheModuleRequest struct for CacheSettingsTieredCacheModuleRequest
type CacheSettingsTieredCacheModuleRequest struct {
	// * `near-edge` - near-edge * `br-east-1` - br-east-1 * `us-east-1` - us-east-1
	Topology *string `json:"topology,omitempty"`
}

// NewCacheSettingsTieredCacheModuleRequest instantiates a new CacheSettingsTieredCacheModuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCacheSettingsTieredCacheModuleRequest() *CacheSettingsTieredCacheModuleRequest {
	this := CacheSettingsTieredCacheModuleRequest{}
	return &this
}

// NewCacheSettingsTieredCacheModuleRequestWithDefaults instantiates a new CacheSettingsTieredCacheModuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCacheSettingsTieredCacheModuleRequestWithDefaults() *CacheSettingsTieredCacheModuleRequest {
	this := CacheSettingsTieredCacheModuleRequest{}
	return &this
}

// GetTopology returns the Topology field value if set, zero value otherwise.
func (o *CacheSettingsTieredCacheModuleRequest) GetTopology() string {
	if o == nil || IsNil(o.Topology) {
		var ret string
		return ret
	}
	return *o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CacheSettingsTieredCacheModuleRequest) GetTopologyOk() (*string, bool) {
	if o == nil || IsNil(o.Topology) {
		return nil, false
	}
	return o.Topology, true
}

// HasTopology returns a boolean if a field has been set.
func (o *CacheSettingsTieredCacheModuleRequest) HasTopology() bool {
	if o != nil && !IsNil(o.Topology) {
		return true
	}

	return false
}

// SetTopology gets a reference to the given string and assigns it to the Topology field.
func (o *CacheSettingsTieredCacheModuleRequest) SetTopology(v string) {
	o.Topology = &v
}

func (o CacheSettingsTieredCacheModuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CacheSettingsTieredCacheModuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Topology) {
		toSerialize["topology"] = o.Topology
	}
	return toSerialize, nil
}

type NullableCacheSettingsTieredCacheModuleRequest struct {
	value *CacheSettingsTieredCacheModuleRequest
	isSet bool
}

func (v NullableCacheSettingsTieredCacheModuleRequest) Get() *CacheSettingsTieredCacheModuleRequest {
	return v.value
}

func (v *NullableCacheSettingsTieredCacheModuleRequest) Set(val *CacheSettingsTieredCacheModuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCacheSettingsTieredCacheModuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCacheSettingsTieredCacheModuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCacheSettingsTieredCacheModuleRequest(val *CacheSettingsTieredCacheModuleRequest) *NullableCacheSettingsTieredCacheModuleRequest {
	return &NullableCacheSettingsTieredCacheModuleRequest{value: val, isSet: true}
}

func (v NullableCacheSettingsTieredCacheModuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCacheSettingsTieredCacheModuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


