/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PageConnectorAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageConnectorAttributes{}

// PageConnectorAttributes struct for PageConnectorAttributes
type PageConnectorAttributes struct {
	Connector int64 `json:"connector"`
	Ttl *int64 `json:"ttl,omitempty"`
	Uri NullableString `json:"uri,omitempty" validate:"regexp=^\\/[\\/a-zA-Z0-9\\\\-_\\\\.\\\\~@:]*$"`
	CustomStatusCode NullableInt64 `json:"custom_status_code,omitempty"`
}

type _PageConnectorAttributes PageConnectorAttributes

// NewPageConnectorAttributes instantiates a new PageConnectorAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageConnectorAttributes(connector int64) *PageConnectorAttributes {
	this := PageConnectorAttributes{}
	this.Connector = connector
	return &this
}

// NewPageConnectorAttributesWithDefaults instantiates a new PageConnectorAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageConnectorAttributesWithDefaults() *PageConnectorAttributes {
	this := PageConnectorAttributes{}
	return &this
}

// GetConnector returns the Connector field value
func (o *PageConnectorAttributes) GetConnector() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value
// and a boolean to check if the value has been set.
func (o *PageConnectorAttributes) GetConnectorOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connector, true
}

// SetConnector sets field value
func (o *PageConnectorAttributes) SetConnector(v int64) {
	o.Connector = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PageConnectorAttributes) GetTtl() int64 {
	if o == nil || IsNil(o.Ttl) {
		var ret int64
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageConnectorAttributes) GetTtlOk() (*int64, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PageConnectorAttributes) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int64 and assigns it to the Ttl field.
func (o *PageConnectorAttributes) SetTtl(v int64) {
	o.Ttl = &v
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PageConnectorAttributes) GetUri() string {
	if o == nil || IsNil(o.Uri.Get()) {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageConnectorAttributes) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *PageConnectorAttributes) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *PageConnectorAttributes) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *PageConnectorAttributes) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *PageConnectorAttributes) UnsetUri() {
	o.Uri.Unset()
}

// GetCustomStatusCode returns the CustomStatusCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PageConnectorAttributes) GetCustomStatusCode() int64 {
	if o == nil || IsNil(o.CustomStatusCode.Get()) {
		var ret int64
		return ret
	}
	return *o.CustomStatusCode.Get()
}

// GetCustomStatusCodeOk returns a tuple with the CustomStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageConnectorAttributes) GetCustomStatusCodeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomStatusCode.Get(), o.CustomStatusCode.IsSet()
}

// HasCustomStatusCode returns a boolean if a field has been set.
func (o *PageConnectorAttributes) HasCustomStatusCode() bool {
	if o != nil && o.CustomStatusCode.IsSet() {
		return true
	}

	return false
}

// SetCustomStatusCode gets a reference to the given NullableInt64 and assigns it to the CustomStatusCode field.
func (o *PageConnectorAttributes) SetCustomStatusCode(v int64) {
	o.CustomStatusCode.Set(&v)
}
// SetCustomStatusCodeNil sets the value for CustomStatusCode to be an explicit nil
func (o *PageConnectorAttributes) SetCustomStatusCodeNil() {
	o.CustomStatusCode.Set(nil)
}

// UnsetCustomStatusCode ensures that no value is present for CustomStatusCode, not even an explicit nil
func (o *PageConnectorAttributes) UnsetCustomStatusCode() {
	o.CustomStatusCode.Unset()
}

func (o PageConnectorAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageConnectorAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connector"] = o.Connector
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	if o.CustomStatusCode.IsSet() {
		toSerialize["custom_status_code"] = o.CustomStatusCode.Get()
	}
	return toSerialize, nil
}

func (o *PageConnectorAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connector",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPageConnectorAttributes := _PageConnectorAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPageConnectorAttributes)

	if err != nil {
		return err
	}

	*o = PageConnectorAttributes(varPageConnectorAttributes)

	return err
}

type NullablePageConnectorAttributes struct {
	value *PageConnectorAttributes
	isSet bool
}

func (v NullablePageConnectorAttributes) Get() *PageConnectorAttributes {
	return v.value
}

func (v *NullablePageConnectorAttributes) Set(val *PageConnectorAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePageConnectorAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePageConnectorAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageConnectorAttributes(val *PageConnectorAttributes) *NullablePageConnectorAttributes {
	return &NullablePageConnectorAttributes{value: val, isSet: true}
}

func (v NullablePageConnectorAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageConnectorAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


