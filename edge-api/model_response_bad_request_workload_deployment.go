/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestWorkloadDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestWorkloadDeployment{}

// ResponseBadRequestWorkloadDeployment struct for ResponseBadRequestWorkloadDeployment
type ResponseBadRequestWorkloadDeployment struct {
	Id []string `json:"id,omitempty"`
	Name []string `json:"name,omitempty"`
	Active []string `json:"active,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Strategy *ResponseBadRequestSerializerMetaclassStrategyField `json:"strategy,omitempty"`
	Current []string `json:"current,omitempty"`
	Detail *string `json:"detail,omitempty" validate:"regexp=.*"`
}

// NewResponseBadRequestWorkloadDeployment instantiates a new ResponseBadRequestWorkloadDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestWorkloadDeployment() *ResponseBadRequestWorkloadDeployment {
	this := ResponseBadRequestWorkloadDeployment{}
	return &this
}

// NewResponseBadRequestWorkloadDeploymentWithDefaults instantiates a new ResponseBadRequestWorkloadDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestWorkloadDeploymentWithDefaults() *ResponseBadRequestWorkloadDeployment {
	this := ResponseBadRequestWorkloadDeployment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetId() []string {
	if o == nil || IsNil(o.Id) {
		var ret []string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given []string and assigns it to the Id field.
func (o *ResponseBadRequestWorkloadDeployment) SetId(v []string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestWorkloadDeployment) SetName(v []string) {
	o.Name = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestWorkloadDeployment) SetActive(v []string) {
	o.Active = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestWorkloadDeployment) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestWorkloadDeployment) SetLastModified(v []string) {
	o.LastModified = v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetStrategy() ResponseBadRequestSerializerMetaclassStrategyField {
	if o == nil || IsNil(o.Strategy) {
		var ret ResponseBadRequestSerializerMetaclassStrategyField
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetStrategyOk() (*ResponseBadRequestSerializerMetaclassStrategyField, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given ResponseBadRequestSerializerMetaclassStrategyField and assigns it to the Strategy field.
func (o *ResponseBadRequestWorkloadDeployment) SetStrategy(v ResponseBadRequestSerializerMetaclassStrategyField) {
	o.Strategy = &v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetCurrent() []string {
	if o == nil || IsNil(o.Current) {
		var ret []string
		return ret
	}
	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetCurrentOk() ([]string, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given []string and assigns it to the Current field.
func (o *ResponseBadRequestWorkloadDeployment) SetCurrent(v []string) {
	o.Current = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkloadDeployment) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkloadDeployment) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkloadDeployment) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestWorkloadDeployment) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestWorkloadDeployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestWorkloadDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestWorkloadDeployment struct {
	value *ResponseBadRequestWorkloadDeployment
	isSet bool
}

func (v NullableResponseBadRequestWorkloadDeployment) Get() *ResponseBadRequestWorkloadDeployment {
	return v.value
}

func (v *NullableResponseBadRequestWorkloadDeployment) Set(val *ResponseBadRequestWorkloadDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestWorkloadDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestWorkloadDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestWorkloadDeployment(val *ResponseBadRequestWorkloadDeployment) *NullableResponseBadRequestWorkloadDeployment {
	return &NullableResponseBadRequestWorkloadDeployment{value: val, isSet: true}
}

func (v NullableResponseBadRequestWorkloadDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestWorkloadDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


