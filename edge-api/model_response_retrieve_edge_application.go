/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResponseRetrieveEdgeApplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseRetrieveEdgeApplication{}

// ResponseRetrieveEdgeApplication struct for ResponseRetrieveEdgeApplication
type ResponseRetrieveEdgeApplication struct {
	Data EdgeApplication `json:"data"`
}

type _ResponseRetrieveEdgeApplication ResponseRetrieveEdgeApplication

// NewResponseRetrieveEdgeApplication instantiates a new ResponseRetrieveEdgeApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseRetrieveEdgeApplication(data EdgeApplication) *ResponseRetrieveEdgeApplication {
	this := ResponseRetrieveEdgeApplication{}
	this.Data = data
	return &this
}

// NewResponseRetrieveEdgeApplicationWithDefaults instantiates a new ResponseRetrieveEdgeApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseRetrieveEdgeApplicationWithDefaults() *ResponseRetrieveEdgeApplication {
	this := ResponseRetrieveEdgeApplication{}
	return &this
}

// GetData returns the Data field value
func (o *ResponseRetrieveEdgeApplication) GetData() EdgeApplication {
	if o == nil {
		var ret EdgeApplication
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ResponseRetrieveEdgeApplication) GetDataOk() (*EdgeApplication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ResponseRetrieveEdgeApplication) SetData(v EdgeApplication) {
	o.Data = v
}

func (o ResponseRetrieveEdgeApplication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseRetrieveEdgeApplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *ResponseRetrieveEdgeApplication) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseRetrieveEdgeApplication := _ResponseRetrieveEdgeApplication{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResponseRetrieveEdgeApplication)

	if err != nil {
		return err
	}

	*o = ResponseRetrieveEdgeApplication(varResponseRetrieveEdgeApplication)

	return err
}

type NullableResponseRetrieveEdgeApplication struct {
	value *ResponseRetrieveEdgeApplication
	isSet bool
}

func (v NullableResponseRetrieveEdgeApplication) Get() *ResponseRetrieveEdgeApplication {
	return v.value
}

func (v *NullableResponseRetrieveEdgeApplication) Set(val *ResponseRetrieveEdgeApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseRetrieveEdgeApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseRetrieveEdgeApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseRetrieveEdgeApplication(val *ResponseRetrieveEdgeApplication) *NullableResponseRetrieveEdgeApplication {
	return &NullableResponseRetrieveEdgeApplication{value: val, isSet: true}
}

func (v NullableResponseRetrieveEdgeApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseRetrieveEdgeApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


