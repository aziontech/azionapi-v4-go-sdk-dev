/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the EdgeApplicationModules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeApplicationModules{}

// EdgeApplicationModules struct for EdgeApplicationModules
type EdgeApplicationModules struct {
	EdgeCache *CacheModule `json:"edge_cache,omitempty"`
	EdgeFunctions *EdgeFunctionModule `json:"edge_functions,omitempty"`
	ApplicationAccelerator *ApplicationAcceleratorModule `json:"application_accelerator,omitempty"`
	ImageProcessor *ImageProcessorModule `json:"image_processor,omitempty"`
	TieredCache *TieredCacheModule `json:"tiered_cache,omitempty"`
}

// NewEdgeApplicationModules instantiates a new EdgeApplicationModules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeApplicationModules() *EdgeApplicationModules {
	this := EdgeApplicationModules{}
	return &this
}

// NewEdgeApplicationModulesWithDefaults instantiates a new EdgeApplicationModules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeApplicationModulesWithDefaults() *EdgeApplicationModules {
	this := EdgeApplicationModules{}
	return &this
}

// GetEdgeCache returns the EdgeCache field value if set, zero value otherwise.
func (o *EdgeApplicationModules) GetEdgeCache() CacheModule {
	if o == nil || IsNil(o.EdgeCache) {
		var ret CacheModule
		return ret
	}
	return *o.EdgeCache
}

// GetEdgeCacheOk returns a tuple with the EdgeCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeApplicationModules) GetEdgeCacheOk() (*CacheModule, bool) {
	if o == nil || IsNil(o.EdgeCache) {
		return nil, false
	}
	return o.EdgeCache, true
}

// HasEdgeCache returns a boolean if a field has been set.
func (o *EdgeApplicationModules) HasEdgeCache() bool {
	if o != nil && !IsNil(o.EdgeCache) {
		return true
	}

	return false
}

// SetEdgeCache gets a reference to the given CacheModule and assigns it to the EdgeCache field.
func (o *EdgeApplicationModules) SetEdgeCache(v CacheModule) {
	o.EdgeCache = &v
}

// GetEdgeFunctions returns the EdgeFunctions field value if set, zero value otherwise.
func (o *EdgeApplicationModules) GetEdgeFunctions() EdgeFunctionModule {
	if o == nil || IsNil(o.EdgeFunctions) {
		var ret EdgeFunctionModule
		return ret
	}
	return *o.EdgeFunctions
}

// GetEdgeFunctionsOk returns a tuple with the EdgeFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeApplicationModules) GetEdgeFunctionsOk() (*EdgeFunctionModule, bool) {
	if o == nil || IsNil(o.EdgeFunctions) {
		return nil, false
	}
	return o.EdgeFunctions, true
}

// HasEdgeFunctions returns a boolean if a field has been set.
func (o *EdgeApplicationModules) HasEdgeFunctions() bool {
	if o != nil && !IsNil(o.EdgeFunctions) {
		return true
	}

	return false
}

// SetEdgeFunctions gets a reference to the given EdgeFunctionModule and assigns it to the EdgeFunctions field.
func (o *EdgeApplicationModules) SetEdgeFunctions(v EdgeFunctionModule) {
	o.EdgeFunctions = &v
}

// GetApplicationAccelerator returns the ApplicationAccelerator field value if set, zero value otherwise.
func (o *EdgeApplicationModules) GetApplicationAccelerator() ApplicationAcceleratorModule {
	if o == nil || IsNil(o.ApplicationAccelerator) {
		var ret ApplicationAcceleratorModule
		return ret
	}
	return *o.ApplicationAccelerator
}

// GetApplicationAcceleratorOk returns a tuple with the ApplicationAccelerator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeApplicationModules) GetApplicationAcceleratorOk() (*ApplicationAcceleratorModule, bool) {
	if o == nil || IsNil(o.ApplicationAccelerator) {
		return nil, false
	}
	return o.ApplicationAccelerator, true
}

// HasApplicationAccelerator returns a boolean if a field has been set.
func (o *EdgeApplicationModules) HasApplicationAccelerator() bool {
	if o != nil && !IsNil(o.ApplicationAccelerator) {
		return true
	}

	return false
}

// SetApplicationAccelerator gets a reference to the given ApplicationAcceleratorModule and assigns it to the ApplicationAccelerator field.
func (o *EdgeApplicationModules) SetApplicationAccelerator(v ApplicationAcceleratorModule) {
	o.ApplicationAccelerator = &v
}

// GetImageProcessor returns the ImageProcessor field value if set, zero value otherwise.
func (o *EdgeApplicationModules) GetImageProcessor() ImageProcessorModule {
	if o == nil || IsNil(o.ImageProcessor) {
		var ret ImageProcessorModule
		return ret
	}
	return *o.ImageProcessor
}

// GetImageProcessorOk returns a tuple with the ImageProcessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeApplicationModules) GetImageProcessorOk() (*ImageProcessorModule, bool) {
	if o == nil || IsNil(o.ImageProcessor) {
		return nil, false
	}
	return o.ImageProcessor, true
}

// HasImageProcessor returns a boolean if a field has been set.
func (o *EdgeApplicationModules) HasImageProcessor() bool {
	if o != nil && !IsNil(o.ImageProcessor) {
		return true
	}

	return false
}

// SetImageProcessor gets a reference to the given ImageProcessorModule and assigns it to the ImageProcessor field.
func (o *EdgeApplicationModules) SetImageProcessor(v ImageProcessorModule) {
	o.ImageProcessor = &v
}

// GetTieredCache returns the TieredCache field value if set, zero value otherwise.
func (o *EdgeApplicationModules) GetTieredCache() TieredCacheModule {
	if o == nil || IsNil(o.TieredCache) {
		var ret TieredCacheModule
		return ret
	}
	return *o.TieredCache
}

// GetTieredCacheOk returns a tuple with the TieredCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeApplicationModules) GetTieredCacheOk() (*TieredCacheModule, bool) {
	if o == nil || IsNil(o.TieredCache) {
		return nil, false
	}
	return o.TieredCache, true
}

// HasTieredCache returns a boolean if a field has been set.
func (o *EdgeApplicationModules) HasTieredCache() bool {
	if o != nil && !IsNil(o.TieredCache) {
		return true
	}

	return false
}

// SetTieredCache gets a reference to the given TieredCacheModule and assigns it to the TieredCache field.
func (o *EdgeApplicationModules) SetTieredCache(v TieredCacheModule) {
	o.TieredCache = &v
}

func (o EdgeApplicationModules) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeApplicationModules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EdgeCache) {
		toSerialize["edge_cache"] = o.EdgeCache
	}
	if !IsNil(o.EdgeFunctions) {
		toSerialize["edge_functions"] = o.EdgeFunctions
	}
	if !IsNil(o.ApplicationAccelerator) {
		toSerialize["application_accelerator"] = o.ApplicationAccelerator
	}
	if !IsNil(o.ImageProcessor) {
		toSerialize["image_processor"] = o.ImageProcessor
	}
	if !IsNil(o.TieredCache) {
		toSerialize["tiered_cache"] = o.TieredCache
	}
	return toSerialize, nil
}

type NullableEdgeApplicationModules struct {
	value *EdgeApplicationModules
	isSet bool
}

func (v NullableEdgeApplicationModules) Get() *EdgeApplicationModules {
	return v.value
}

func (v *NullableEdgeApplicationModules) Set(val *EdgeApplicationModules) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeApplicationModules) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeApplicationModules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeApplicationModules(val *EdgeApplicationModules) *NullableEdgeApplicationModules {
	return &NullableEdgeApplicationModules{value: val, isSet: true}
}

func (v NullableEdgeApplicationModules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeApplicationModules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


