/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConnectorCustomPages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorCustomPages{}

// ConnectorCustomPages struct for ConnectorCustomPages
type ConnectorCustomPages struct {
	EdgeConnector NullableInt64 `json:"edge_connector,omitempty"`
	Pages []Page `json:"pages"`
}

type _ConnectorCustomPages ConnectorCustomPages

// NewConnectorCustomPages instantiates a new ConnectorCustomPages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorCustomPages(pages []Page) *ConnectorCustomPages {
	this := ConnectorCustomPages{}
	this.Pages = pages
	return &this
}

// NewConnectorCustomPagesWithDefaults instantiates a new ConnectorCustomPages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorCustomPagesWithDefaults() *ConnectorCustomPages {
	this := ConnectorCustomPages{}
	return &this
}

// GetEdgeConnector returns the EdgeConnector field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectorCustomPages) GetEdgeConnector() int64 {
	if o == nil || IsNil(o.EdgeConnector.Get()) {
		var ret int64
		return ret
	}
	return *o.EdgeConnector.Get()
}

// GetEdgeConnectorOk returns a tuple with the EdgeConnector field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectorCustomPages) GetEdgeConnectorOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EdgeConnector.Get(), o.EdgeConnector.IsSet()
}

// HasEdgeConnector returns a boolean if a field has been set.
func (o *ConnectorCustomPages) HasEdgeConnector() bool {
	if o != nil && o.EdgeConnector.IsSet() {
		return true
	}

	return false
}

// SetEdgeConnector gets a reference to the given NullableInt64 and assigns it to the EdgeConnector field.
func (o *ConnectorCustomPages) SetEdgeConnector(v int64) {
	o.EdgeConnector.Set(&v)
}
// SetEdgeConnectorNil sets the value for EdgeConnector to be an explicit nil
func (o *ConnectorCustomPages) SetEdgeConnectorNil() {
	o.EdgeConnector.Set(nil)
}

// UnsetEdgeConnector ensures that no value is present for EdgeConnector, not even an explicit nil
func (o *ConnectorCustomPages) UnsetEdgeConnector() {
	o.EdgeConnector.Unset()
}

// GetPages returns the Pages field value
func (o *ConnectorCustomPages) GetPages() []Page {
	if o == nil {
		var ret []Page
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *ConnectorCustomPages) GetPagesOk() ([]Page, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pages, true
}

// SetPages sets field value
func (o *ConnectorCustomPages) SetPages(v []Page) {
	o.Pages = v
}

func (o ConnectorCustomPages) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorCustomPages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EdgeConnector.IsSet() {
		toSerialize["edge_connector"] = o.EdgeConnector.Get()
	}
	toSerialize["pages"] = o.Pages
	return toSerialize, nil
}

func (o *ConnectorCustomPages) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectorCustomPages := _ConnectorCustomPages{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConnectorCustomPages)

	if err != nil {
		return err
	}

	*o = ConnectorCustomPages(varConnectorCustomPages)

	return err
}

type NullableConnectorCustomPages struct {
	value *ConnectorCustomPages
	isSet bool
}

func (v NullableConnectorCustomPages) Get() *ConnectorCustomPages {
	return v.value
}

func (v *NullableConnectorCustomPages) Set(val *ConnectorCustomPages) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorCustomPages) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorCustomPages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorCustomPages(val *ConnectorCustomPages) *NullableConnectorCustomPages {
	return &NullableConnectorCustomPages{value: val, isSet: true}
}

func (v NullableConnectorCustomPages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorCustomPages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


