/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WAFExceptionSpecificConditionOnValueRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WAFExceptionSpecificConditionOnValueRequest{}

// WAFExceptionSpecificConditionOnValueRequest struct for WAFExceptionSpecificConditionOnValueRequest
type WAFExceptionSpecificConditionOnValueRequest struct {
	// * `specific_body_form_field_value` - specific_body_form_field_value * `specific_http_header_value` - specific_http_header_value * `specific_query_string_value` - specific_query_string_value
	Match string `json:"match"`
	Value string `json:"value" validate:"regexp=[a-zA-Z0-9<>?()]+"`
}

type _WAFExceptionSpecificConditionOnValueRequest WAFExceptionSpecificConditionOnValueRequest

// NewWAFExceptionSpecificConditionOnValueRequest instantiates a new WAFExceptionSpecificConditionOnValueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWAFExceptionSpecificConditionOnValueRequest(match string, value string) *WAFExceptionSpecificConditionOnValueRequest {
	this := WAFExceptionSpecificConditionOnValueRequest{}
	this.Match = match
	this.Value = value
	return &this
}

// NewWAFExceptionSpecificConditionOnValueRequestWithDefaults instantiates a new WAFExceptionSpecificConditionOnValueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWAFExceptionSpecificConditionOnValueRequestWithDefaults() *WAFExceptionSpecificConditionOnValueRequest {
	this := WAFExceptionSpecificConditionOnValueRequest{}
	return &this
}

// GetMatch returns the Match field value
func (o *WAFExceptionSpecificConditionOnValueRequest) GetMatch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Match
}

// GetMatchOk returns a tuple with the Match field value
// and a boolean to check if the value has been set.
func (o *WAFExceptionSpecificConditionOnValueRequest) GetMatchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Match, true
}

// SetMatch sets field value
func (o *WAFExceptionSpecificConditionOnValueRequest) SetMatch(v string) {
	o.Match = v
}

// GetValue returns the Value field value
func (o *WAFExceptionSpecificConditionOnValueRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *WAFExceptionSpecificConditionOnValueRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *WAFExceptionSpecificConditionOnValueRequest) SetValue(v string) {
	o.Value = v
}

func (o WAFExceptionSpecificConditionOnValueRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WAFExceptionSpecificConditionOnValueRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["match"] = o.Match
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *WAFExceptionSpecificConditionOnValueRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"match",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWAFExceptionSpecificConditionOnValueRequest := _WAFExceptionSpecificConditionOnValueRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWAFExceptionSpecificConditionOnValueRequest)

	if err != nil {
		return err
	}

	*o = WAFExceptionSpecificConditionOnValueRequest(varWAFExceptionSpecificConditionOnValueRequest)

	return err
}

type NullableWAFExceptionSpecificConditionOnValueRequest struct {
	value *WAFExceptionSpecificConditionOnValueRequest
	isSet bool
}

func (v NullableWAFExceptionSpecificConditionOnValueRequest) Get() *WAFExceptionSpecificConditionOnValueRequest {
	return v.value
}

func (v *NullableWAFExceptionSpecificConditionOnValueRequest) Set(val *WAFExceptionSpecificConditionOnValueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWAFExceptionSpecificConditionOnValueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWAFExceptionSpecificConditionOnValueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWAFExceptionSpecificConditionOnValueRequest(val *WAFExceptionSpecificConditionOnValueRequest) *NullableWAFExceptionSpecificConditionOnValueRequest {
	return &NullableWAFExceptionSpecificConditionOnValueRequest{value: val, isSet: true}
}

func (v NullableWAFExceptionSpecificConditionOnValueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWAFExceptionSpecificConditionOnValueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


