/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EdgeConnectorHTTPAttributesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeConnectorHTTPAttributesRequest{}

// EdgeConnectorHTTPAttributesRequest struct for EdgeConnectorHTTPAttributesRequest
type EdgeConnectorHTTPAttributesRequest struct {
	Addresses []AddressRequest `json:"addresses"`
	ConnectionOptions *HTTPConnectionOptionsRequest `json:"connection_options,omitempty"`
	Modules *HTTPModulesRequest `json:"modules,omitempty"`
}

type _EdgeConnectorHTTPAttributesRequest EdgeConnectorHTTPAttributesRequest

// NewEdgeConnectorHTTPAttributesRequest instantiates a new EdgeConnectorHTTPAttributesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeConnectorHTTPAttributesRequest(addresses []AddressRequest) *EdgeConnectorHTTPAttributesRequest {
	this := EdgeConnectorHTTPAttributesRequest{}
	this.Addresses = addresses
	return &this
}

// NewEdgeConnectorHTTPAttributesRequestWithDefaults instantiates a new EdgeConnectorHTTPAttributesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeConnectorHTTPAttributesRequestWithDefaults() *EdgeConnectorHTTPAttributesRequest {
	this := EdgeConnectorHTTPAttributesRequest{}
	return &this
}

// GetAddresses returns the Addresses field value
func (o *EdgeConnectorHTTPAttributesRequest) GetAddresses() []AddressRequest {
	if o == nil {
		var ret []AddressRequest
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *EdgeConnectorHTTPAttributesRequest) GetAddressesOk() ([]AddressRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *EdgeConnectorHTTPAttributesRequest) SetAddresses(v []AddressRequest) {
	o.Addresses = v
}

// GetConnectionOptions returns the ConnectionOptions field value if set, zero value otherwise.
func (o *EdgeConnectorHTTPAttributesRequest) GetConnectionOptions() HTTPConnectionOptionsRequest {
	if o == nil || IsNil(o.ConnectionOptions) {
		var ret HTTPConnectionOptionsRequest
		return ret
	}
	return *o.ConnectionOptions
}

// GetConnectionOptionsOk returns a tuple with the ConnectionOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeConnectorHTTPAttributesRequest) GetConnectionOptionsOk() (*HTTPConnectionOptionsRequest, bool) {
	if o == nil || IsNil(o.ConnectionOptions) {
		return nil, false
	}
	return o.ConnectionOptions, true
}

// HasConnectionOptions returns a boolean if a field has been set.
func (o *EdgeConnectorHTTPAttributesRequest) HasConnectionOptions() bool {
	if o != nil && !IsNil(o.ConnectionOptions) {
		return true
	}

	return false
}

// SetConnectionOptions gets a reference to the given HTTPConnectionOptionsRequest and assigns it to the ConnectionOptions field.
func (o *EdgeConnectorHTTPAttributesRequest) SetConnectionOptions(v HTTPConnectionOptionsRequest) {
	o.ConnectionOptions = &v
}

// GetModules returns the Modules field value if set, zero value otherwise.
func (o *EdgeConnectorHTTPAttributesRequest) GetModules() HTTPModulesRequest {
	if o == nil || IsNil(o.Modules) {
		var ret HTTPModulesRequest
		return ret
	}
	return *o.Modules
}

// GetModulesOk returns a tuple with the Modules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeConnectorHTTPAttributesRequest) GetModulesOk() (*HTTPModulesRequest, bool) {
	if o == nil || IsNil(o.Modules) {
		return nil, false
	}
	return o.Modules, true
}

// HasModules returns a boolean if a field has been set.
func (o *EdgeConnectorHTTPAttributesRequest) HasModules() bool {
	if o != nil && !IsNil(o.Modules) {
		return true
	}

	return false
}

// SetModules gets a reference to the given HTTPModulesRequest and assigns it to the Modules field.
func (o *EdgeConnectorHTTPAttributesRequest) SetModules(v HTTPModulesRequest) {
	o.Modules = &v
}

func (o EdgeConnectorHTTPAttributesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeConnectorHTTPAttributesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addresses"] = o.Addresses
	if !IsNil(o.ConnectionOptions) {
		toSerialize["connection_options"] = o.ConnectionOptions
	}
	if !IsNil(o.Modules) {
		toSerialize["modules"] = o.Modules
	}
	return toSerialize, nil
}

func (o *EdgeConnectorHTTPAttributesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addresses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEdgeConnectorHTTPAttributesRequest := _EdgeConnectorHTTPAttributesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEdgeConnectorHTTPAttributesRequest)

	if err != nil {
		return err
	}

	*o = EdgeConnectorHTTPAttributesRequest(varEdgeConnectorHTTPAttributesRequest)

	return err
}

type NullableEdgeConnectorHTTPAttributesRequest struct {
	value *EdgeConnectorHTTPAttributesRequest
	isSet bool
}

func (v NullableEdgeConnectorHTTPAttributesRequest) Get() *EdgeConnectorHTTPAttributesRequest {
	return v.value
}

func (v *NullableEdgeConnectorHTTPAttributesRequest) Set(val *EdgeConnectorHTTPAttributesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeConnectorHTTPAttributesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeConnectorHTTPAttributesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeConnectorHTTPAttributesRequest(val *EdgeConnectorHTTPAttributesRequest) *NullableEdgeConnectorHTTPAttributesRequest {
	return &NullableEdgeConnectorHTTPAttributesRequest{value: val, isSet: true}
}

func (v NullableEdgeConnectorHTTPAttributesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeConnectorHTTPAttributesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


