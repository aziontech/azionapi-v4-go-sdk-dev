/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WAFRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WAFRequest{}

// WAFRequest struct for WAFRequest
type WAFRequest struct {
	Active *bool `json:"active,omitempty"`
	Name string `json:"name"`
	ProductVersion NullableString `json:"product_version,omitempty"`
	EngineSettings *WAFEngineSettingsFieldRequest `json:"engine_settings,omitempty"`
}

type _WAFRequest WAFRequest

// NewWAFRequest instantiates a new WAFRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWAFRequest(name string) *WAFRequest {
	this := WAFRequest{}
	this.Name = name
	return &this
}

// NewWAFRequestWithDefaults instantiates a new WAFRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWAFRequestWithDefaults() *WAFRequest {
	this := WAFRequest{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *WAFRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WAFRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *WAFRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *WAFRequest) SetActive(v bool) {
	o.Active = &v
}

// GetName returns the Name field value
func (o *WAFRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WAFRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WAFRequest) SetName(v string) {
	o.Name = v
}

// GetProductVersion returns the ProductVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WAFRequest) GetProductVersion() string {
	if o == nil || IsNil(o.ProductVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ProductVersion.Get()
}

// GetProductVersionOk returns a tuple with the ProductVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WAFRequest) GetProductVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductVersion.Get(), o.ProductVersion.IsSet()
}

// HasProductVersion returns a boolean if a field has been set.
func (o *WAFRequest) HasProductVersion() bool {
	if o != nil && o.ProductVersion.IsSet() {
		return true
	}

	return false
}

// SetProductVersion gets a reference to the given NullableString and assigns it to the ProductVersion field.
func (o *WAFRequest) SetProductVersion(v string) {
	o.ProductVersion.Set(&v)
}
// SetProductVersionNil sets the value for ProductVersion to be an explicit nil
func (o *WAFRequest) SetProductVersionNil() {
	o.ProductVersion.Set(nil)
}

// UnsetProductVersion ensures that no value is present for ProductVersion, not even an explicit nil
func (o *WAFRequest) UnsetProductVersion() {
	o.ProductVersion.Unset()
}

// GetEngineSettings returns the EngineSettings field value if set, zero value otherwise.
func (o *WAFRequest) GetEngineSettings() WAFEngineSettingsFieldRequest {
	if o == nil || IsNil(o.EngineSettings) {
		var ret WAFEngineSettingsFieldRequest
		return ret
	}
	return *o.EngineSettings
}

// GetEngineSettingsOk returns a tuple with the EngineSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WAFRequest) GetEngineSettingsOk() (*WAFEngineSettingsFieldRequest, bool) {
	if o == nil || IsNil(o.EngineSettings) {
		return nil, false
	}
	return o.EngineSettings, true
}

// HasEngineSettings returns a boolean if a field has been set.
func (o *WAFRequest) HasEngineSettings() bool {
	if o != nil && !IsNil(o.EngineSettings) {
		return true
	}

	return false
}

// SetEngineSettings gets a reference to the given WAFEngineSettingsFieldRequest and assigns it to the EngineSettings field.
func (o *WAFRequest) SetEngineSettings(v WAFEngineSettingsFieldRequest) {
	o.EngineSettings = &v
}

func (o WAFRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WAFRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["name"] = o.Name
	if o.ProductVersion.IsSet() {
		toSerialize["product_version"] = o.ProductVersion.Get()
	}
	if !IsNil(o.EngineSettings) {
		toSerialize["engine_settings"] = o.EngineSettings
	}
	return toSerialize, nil
}

func (o *WAFRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWAFRequest := _WAFRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWAFRequest)

	if err != nil {
		return err
	}

	*o = WAFRequest(varWAFRequest)

	return err
}

type NullableWAFRequest struct {
	value *WAFRequest
	isSet bool
}

func (v NullableWAFRequest) Get() *WAFRequest {
	return v.value
}

func (v *NullableWAFRequest) Set(val *WAFRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWAFRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWAFRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWAFRequest(val *WAFRequest) *NullableWAFRequest {
	return &NullableWAFRequest{value: val, isSet: true}
}

func (v NullableWAFRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWAFRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


