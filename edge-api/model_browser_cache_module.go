/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the BrowserCacheModule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrowserCacheModule{}

// BrowserCacheModule struct for BrowserCacheModule
type BrowserCacheModule struct {
	// * `override` - override * `honor` - honor * `no-cache` - no-cache
	Behavior *string `json:"behavior,omitempty"`
	MaxAge *int64 `json:"max_age,omitempty"`
}

// NewBrowserCacheModule instantiates a new BrowserCacheModule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrowserCacheModule() *BrowserCacheModule {
	this := BrowserCacheModule{}
	return &this
}

// NewBrowserCacheModuleWithDefaults instantiates a new BrowserCacheModule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrowserCacheModuleWithDefaults() *BrowserCacheModule {
	this := BrowserCacheModule{}
	return &this
}

// GetBehavior returns the Behavior field value if set, zero value otherwise.
func (o *BrowserCacheModule) GetBehavior() string {
	if o == nil || IsNil(o.Behavior) {
		var ret string
		return ret
	}
	return *o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserCacheModule) GetBehaviorOk() (*string, bool) {
	if o == nil || IsNil(o.Behavior) {
		return nil, false
	}
	return o.Behavior, true
}

// HasBehavior returns a boolean if a field has been set.
func (o *BrowserCacheModule) HasBehavior() bool {
	if o != nil && !IsNil(o.Behavior) {
		return true
	}

	return false
}

// SetBehavior gets a reference to the given string and assigns it to the Behavior field.
func (o *BrowserCacheModule) SetBehavior(v string) {
	o.Behavior = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *BrowserCacheModule) GetMaxAge() int64 {
	if o == nil || IsNil(o.MaxAge) {
		var ret int64
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserCacheModule) GetMaxAgeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxAge) {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *BrowserCacheModule) HasMaxAge() bool {
	if o != nil && !IsNil(o.MaxAge) {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int64 and assigns it to the MaxAge field.
func (o *BrowserCacheModule) SetMaxAge(v int64) {
	o.MaxAge = &v
}

func (o BrowserCacheModule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrowserCacheModule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Behavior) {
		toSerialize["behavior"] = o.Behavior
	}
	if !IsNil(o.MaxAge) {
		toSerialize["max_age"] = o.MaxAge
	}
	return toSerialize, nil
}

type NullableBrowserCacheModule struct {
	value *BrowserCacheModule
	isSet bool
}

func (v NullableBrowserCacheModule) Get() *BrowserCacheModule {
	return v.value
}

func (v *NullableBrowserCacheModule) Set(val *BrowserCacheModule) {
	v.value = val
	v.isSet = true
}

func (v NullableBrowserCacheModule) IsSet() bool {
	return v.isSet
}

func (v *NullableBrowserCacheModule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrowserCacheModule(val *BrowserCacheModule) *NullableBrowserCacheModule {
	return &NullableBrowserCacheModule{value: val, isSet: true}
}

func (v NullableBrowserCacheModule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrowserCacheModule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


