/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// EdgeApplicationBehaviorPolymorphicArgument - struct for EdgeApplicationBehaviorPolymorphicArgument
type EdgeApplicationBehaviorPolymorphicArgument struct {
	CaptureMatchGroupsArgument *CaptureMatchGroupsArgument
	Int64 *int64
	String *string
}

// CaptureMatchGroupsArgumentAsEdgeApplicationBehaviorPolymorphicArgument is a convenience function that returns CaptureMatchGroupsArgument wrapped in EdgeApplicationBehaviorPolymorphicArgument
func CaptureMatchGroupsArgumentAsEdgeApplicationBehaviorPolymorphicArgument(v *CaptureMatchGroupsArgument) EdgeApplicationBehaviorPolymorphicArgument {
	return EdgeApplicationBehaviorPolymorphicArgument{
		CaptureMatchGroupsArgument: v,
	}
}

// int64AsEdgeApplicationBehaviorPolymorphicArgument is a convenience function that returns int64 wrapped in EdgeApplicationBehaviorPolymorphicArgument
func Int64AsEdgeApplicationBehaviorPolymorphicArgument(v *int64) EdgeApplicationBehaviorPolymorphicArgument {
	return EdgeApplicationBehaviorPolymorphicArgument{
		Int64: v,
	}
}

// stringAsEdgeApplicationBehaviorPolymorphicArgument is a convenience function that returns string wrapped in EdgeApplicationBehaviorPolymorphicArgument
func StringAsEdgeApplicationBehaviorPolymorphicArgument(v *string) EdgeApplicationBehaviorPolymorphicArgument {
	return EdgeApplicationBehaviorPolymorphicArgument{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *EdgeApplicationBehaviorPolymorphicArgument) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into CaptureMatchGroupsArgument
	err = newStrictDecoder(data).Decode(&dst.CaptureMatchGroupsArgument)
	if err == nil {
		jsonCaptureMatchGroupsArgument, _ := json.Marshal(dst.CaptureMatchGroupsArgument)
		if string(jsonCaptureMatchGroupsArgument) == "{}" { // empty struct
			dst.CaptureMatchGroupsArgument = nil
		} else {
			if err = validator.Validate(dst.CaptureMatchGroupsArgument); err != nil {
				dst.CaptureMatchGroupsArgument = nil
			} else {
				match++
			}
		}
	} else {
		dst.CaptureMatchGroupsArgument = nil
	}

	// try to unmarshal data into Int64
	err = newStrictDecoder(data).Decode(&dst.Int64)
	if err == nil {
		jsonInt64, _ := json.Marshal(dst.Int64)
		if string(jsonInt64) == "{}" { // empty struct
			dst.Int64 = nil
		} else {
			if err = validator.Validate(dst.Int64); err != nil {
				dst.Int64 = nil
			} else {
				match++
			}
		}
	} else {
		dst.Int64 = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			if err = validator.Validate(dst.String); err != nil {
				dst.String = nil
			} else {
				match++
			}
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CaptureMatchGroupsArgument = nil
		dst.Int64 = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(EdgeApplicationBehaviorPolymorphicArgument)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(EdgeApplicationBehaviorPolymorphicArgument)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EdgeApplicationBehaviorPolymorphicArgument) MarshalJSON() ([]byte, error) {
	if src.CaptureMatchGroupsArgument != nil {
		return json.Marshal(&src.CaptureMatchGroupsArgument)
	}

	if src.Int64 != nil {
		return json.Marshal(&src.Int64)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EdgeApplicationBehaviorPolymorphicArgument) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CaptureMatchGroupsArgument != nil {
		return obj.CaptureMatchGroupsArgument
	}

	if obj.Int64 != nil {
		return obj.Int64
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj EdgeApplicationBehaviorPolymorphicArgument) GetActualInstanceValue() (interface{}) {
	if obj.CaptureMatchGroupsArgument != nil {
		return *obj.CaptureMatchGroupsArgument
	}

	if obj.Int64 != nil {
		return *obj.Int64
	}

	if obj.String != nil {
		return *obj.String
	}

	// all schemas are nil
	return nil
}

type NullableEdgeApplicationBehaviorPolymorphicArgument struct {
	value *EdgeApplicationBehaviorPolymorphicArgument
	isSet bool
}

func (v NullableEdgeApplicationBehaviorPolymorphicArgument) Get() *EdgeApplicationBehaviorPolymorphicArgument {
	return v.value
}

func (v *NullableEdgeApplicationBehaviorPolymorphicArgument) Set(val *EdgeApplicationBehaviorPolymorphicArgument) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeApplicationBehaviorPolymorphicArgument) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeApplicationBehaviorPolymorphicArgument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeApplicationBehaviorPolymorphicArgument(val *EdgeApplicationBehaviorPolymorphicArgument) *NullableEdgeApplicationBehaviorPolymorphicArgument {
	return &NullableEdgeApplicationBehaviorPolymorphicArgument{value: val, isSet: true}
}

func (v NullableEdgeApplicationBehaviorPolymorphicArgument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeApplicationBehaviorPolymorphicArgument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


