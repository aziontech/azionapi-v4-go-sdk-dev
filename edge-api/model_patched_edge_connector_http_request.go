/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the PatchedEdgeConnectorHTTPRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedEdgeConnectorHTTPRequest{}

// PatchedEdgeConnectorHTTPRequest struct for PatchedEdgeConnectorHTTPRequest
type PatchedEdgeConnectorHTTPRequest struct {
	Name *string `json:"name,omitempty"`
	Active *bool `json:"active,omitempty"`
	// Type of the edge connector  * `http` - HTTP * `edge_storage` - Edge Storage * `live_ingest` - Live Ingest
	Type *string `json:"type,omitempty"`
	Attributes *EdgeConnectorHTTPAttributesRequest `json:"attributes,omitempty"`
}

// NewPatchedEdgeConnectorHTTPRequest instantiates a new PatchedEdgeConnectorHTTPRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedEdgeConnectorHTTPRequest() *PatchedEdgeConnectorHTTPRequest {
	this := PatchedEdgeConnectorHTTPRequest{}
	return &this
}

// NewPatchedEdgeConnectorHTTPRequestWithDefaults instantiates a new PatchedEdgeConnectorHTTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedEdgeConnectorHTTPRequestWithDefaults() *PatchedEdgeConnectorHTTPRequest {
	this := PatchedEdgeConnectorHTTPRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedEdgeConnectorHTTPRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeConnectorHTTPRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedEdgeConnectorHTTPRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedEdgeConnectorHTTPRequest) SetName(v string) {
	o.Name = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PatchedEdgeConnectorHTTPRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeConnectorHTTPRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PatchedEdgeConnectorHTTPRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PatchedEdgeConnectorHTTPRequest) SetActive(v bool) {
	o.Active = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PatchedEdgeConnectorHTTPRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeConnectorHTTPRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PatchedEdgeConnectorHTTPRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PatchedEdgeConnectorHTTPRequest) SetType(v string) {
	o.Type = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *PatchedEdgeConnectorHTTPRequest) GetAttributes() EdgeConnectorHTTPAttributesRequest {
	if o == nil || IsNil(o.Attributes) {
		var ret EdgeConnectorHTTPAttributesRequest
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEdgeConnectorHTTPRequest) GetAttributesOk() (*EdgeConnectorHTTPAttributesRequest, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *PatchedEdgeConnectorHTTPRequest) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given EdgeConnectorHTTPAttributesRequest and assigns it to the Attributes field.
func (o *PatchedEdgeConnectorHTTPRequest) SetAttributes(v EdgeConnectorHTTPAttributesRequest) {
	o.Attributes = &v
}

func (o PatchedEdgeConnectorHTTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedEdgeConnectorHTTPRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullablePatchedEdgeConnectorHTTPRequest struct {
	value *PatchedEdgeConnectorHTTPRequest
	isSet bool
}

func (v NullablePatchedEdgeConnectorHTTPRequest) Get() *PatchedEdgeConnectorHTTPRequest {
	return v.value
}

func (v *NullablePatchedEdgeConnectorHTTPRequest) Set(val *PatchedEdgeConnectorHTTPRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedEdgeConnectorHTTPRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedEdgeConnectorHTTPRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedEdgeConnectorHTTPRequest(val *PatchedEdgeConnectorHTTPRequest) *NullablePatchedEdgeConnectorHTTPRequest {
	return &NullablePatchedEdgeConnectorHTTPRequest{value: val, isSet: true}
}

func (v NullablePatchedEdgeConnectorHTTPRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedEdgeConnectorHTTPRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


