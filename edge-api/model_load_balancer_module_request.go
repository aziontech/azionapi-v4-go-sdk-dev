/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the LoadBalancerModuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerModuleRequest{}

// LoadBalancerModuleRequest struct for LoadBalancerModuleRequest
type LoadBalancerModuleRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
	Config NullableLoadBalancerModuleConfigRequest `json:"config,omitempty"`
}

// NewLoadBalancerModuleRequest instantiates a new LoadBalancerModuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerModuleRequest() *LoadBalancerModuleRequest {
	this := LoadBalancerModuleRequest{}
	return &this
}

// NewLoadBalancerModuleRequestWithDefaults instantiates a new LoadBalancerModuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerModuleRequestWithDefaults() *LoadBalancerModuleRequest {
	this := LoadBalancerModuleRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *LoadBalancerModuleRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerModuleRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *LoadBalancerModuleRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *LoadBalancerModuleRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancerModuleRequest) GetConfig() LoadBalancerModuleConfigRequest {
	if o == nil || IsNil(o.Config.Get()) {
		var ret LoadBalancerModuleConfigRequest
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancerModuleRequest) GetConfigOk() (*LoadBalancerModuleConfigRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *LoadBalancerModuleRequest) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NullableLoadBalancerModuleConfigRequest and assigns it to the Config field.
func (o *LoadBalancerModuleRequest) SetConfig(v LoadBalancerModuleConfigRequest) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *LoadBalancerModuleRequest) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *LoadBalancerModuleRequest) UnsetConfig() {
	o.Config.Unset()
}

func (o LoadBalancerModuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerModuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	return toSerialize, nil
}

type NullableLoadBalancerModuleRequest struct {
	value *LoadBalancerModuleRequest
	isSet bool
}

func (v NullableLoadBalancerModuleRequest) Get() *LoadBalancerModuleRequest {
	return v.value
}

func (v *NullableLoadBalancerModuleRequest) Set(val *LoadBalancerModuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerModuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerModuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerModuleRequest(val *LoadBalancerModuleRequest) *NullableLoadBalancerModuleRequest {
	return &NullableLoadBalancerModuleRequest{value: val, isSet: true}
}

func (v NullableLoadBalancerModuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerModuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


