/*
edge-api

Testing WAFsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package edgeapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_edgeapi_WAFsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test WAFsAPIService CloneWAF", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var wafId string

		resp, httpRes, err := apiClient.WAFsAPI.CloneWAF(context.Background(), wafId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WAFsAPIService CreateWAF", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.WAFsAPI.CreateWAF(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WAFsAPIService DestroyWAF", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var wafId string

		resp, httpRes, err := apiClient.WAFsAPI.DestroyWAF(context.Background(), wafId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WAFsAPIService ListWAFs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.WAFsAPI.ListWAFs(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WAFsAPIService PartialUpdateWAF", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var wafId string

		resp, httpRes, err := apiClient.WAFsAPI.PartialUpdateWAF(context.Background(), wafId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WAFsAPIService RetrieveWAF", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var wafId string

		resp, httpRes, err := apiClient.WAFsAPI.RetrieveWAF(context.Background(), wafId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WAFsAPIService UpdateWAF", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var wafId string

		resp, httpRes, err := apiClient.WAFsAPI.UpdateWAF(context.Background(), wafId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
