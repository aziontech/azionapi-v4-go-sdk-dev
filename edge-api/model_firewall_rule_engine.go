/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the FirewallRuleEngine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRuleEngine{}

// FirewallRuleEngine struct for FirewallRuleEngine
type FirewallRuleEngine struct {
	Id int64 `json:"id"`
	Name string `json:"name"`
	LastEditor string `json:"last_editor"`
	LastModified time.Time `json:"last_modified"`
	Active *bool `json:"active,omitempty"`
	Criteria [][]EdgeFirewallCriterionField `json:"criteria"`
	Behaviors []FirewallBehaviors `json:"behaviors"`
	Description *string `json:"description,omitempty"`
	Order int64 `json:"order"`
}

type _FirewallRuleEngine FirewallRuleEngine

// NewFirewallRuleEngine instantiates a new FirewallRuleEngine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleEngine(id int64, name string, lastEditor string, lastModified time.Time, criteria [][]EdgeFirewallCriterionField, behaviors []FirewallBehaviors, order int64) *FirewallRuleEngine {
	this := FirewallRuleEngine{}
	this.Id = id
	this.Name = name
	this.LastEditor = lastEditor
	this.LastModified = lastModified
	this.Criteria = criteria
	this.Behaviors = behaviors
	this.Order = order
	return &this
}

// NewFirewallRuleEngineWithDefaults instantiates a new FirewallRuleEngine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleEngineWithDefaults() *FirewallRuleEngine {
	this := FirewallRuleEngine{}
	return &this
}

// GetId returns the Id field value
func (o *FirewallRuleEngine) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FirewallRuleEngine) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *FirewallRuleEngine) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FirewallRuleEngine) SetName(v string) {
	o.Name = v
}

// GetLastEditor returns the LastEditor field value
func (o *FirewallRuleEngine) GetLastEditor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetLastEditorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastEditor, true
}

// SetLastEditor sets field value
func (o *FirewallRuleEngine) SetLastEditor(v string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value
func (o *FirewallRuleEngine) GetLastModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModified, true
}

// SetLastModified sets field value
func (o *FirewallRuleEngine) SetLastModified(v time.Time) {
	o.LastModified = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *FirewallRuleEngine) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *FirewallRuleEngine) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *FirewallRuleEngine) SetActive(v bool) {
	o.Active = &v
}

// GetCriteria returns the Criteria field value
func (o *FirewallRuleEngine) GetCriteria() [][]EdgeFirewallCriterionField {
	if o == nil {
		var ret [][]EdgeFirewallCriterionField
		return ret
	}

	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetCriteriaOk() ([][]EdgeFirewallCriterionField, bool) {
	if o == nil {
		return nil, false
	}
	return o.Criteria, true
}

// SetCriteria sets field value
func (o *FirewallRuleEngine) SetCriteria(v [][]EdgeFirewallCriterionField) {
	o.Criteria = v
}

// GetBehaviors returns the Behaviors field value
func (o *FirewallRuleEngine) GetBehaviors() []FirewallBehaviors {
	if o == nil {
		var ret []FirewallBehaviors
		return ret
	}

	return o.Behaviors
}

// GetBehaviorsOk returns a tuple with the Behaviors field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetBehaviorsOk() ([]FirewallBehaviors, bool) {
	if o == nil {
		return nil, false
	}
	return o.Behaviors, true
}

// SetBehaviors sets field value
func (o *FirewallRuleEngine) SetBehaviors(v []FirewallBehaviors) {
	o.Behaviors = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FirewallRuleEngine) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FirewallRuleEngine) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FirewallRuleEngine) SetDescription(v string) {
	o.Description = &v
}

// GetOrder returns the Order field value
func (o *FirewallRuleEngine) GetOrder() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleEngine) GetOrderOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *FirewallRuleEngine) SetOrder(v int64) {
	o.Order = v
}

func (o FirewallRuleEngine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRuleEngine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["last_editor"] = o.LastEditor
	toSerialize["last_modified"] = o.LastModified
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["criteria"] = o.Criteria
	toSerialize["behaviors"] = o.Behaviors
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["order"] = o.Order
	return toSerialize, nil
}

func (o *FirewallRuleEngine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"last_editor",
		"last_modified",
		"criteria",
		"behaviors",
		"order",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallRuleEngine := _FirewallRuleEngine{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallRuleEngine)

	if err != nil {
		return err
	}

	*o = FirewallRuleEngine(varFirewallRuleEngine)

	return err
}

type NullableFirewallRuleEngine struct {
	value *FirewallRuleEngine
	isSet bool
}

func (v NullableFirewallRuleEngine) Get() *FirewallRuleEngine {
	return v.value
}

func (v *NullableFirewallRuleEngine) Set(val *FirewallRuleEngine) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleEngine) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleEngine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleEngine(val *FirewallRuleEngine) *NullableFirewallRuleEngine {
	return &NullableFirewallRuleEngine{value: val, isSet: true}
}

func (v NullableFirewallRuleEngine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleEngine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


