/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the PatchedWorkloadDeploymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWorkloadDeploymentRequest{}

// PatchedWorkloadDeploymentRequest struct for PatchedWorkloadDeploymentRequest
type PatchedWorkloadDeploymentRequest struct {
	Name *string `json:"name,omitempty"`
	Current *bool `json:"current,omitempty"`
	Active *bool `json:"active,omitempty"`
	Strategy *DeploymentStrategyDefaultDeploymentStrategyRequest `json:"strategy,omitempty"`
}

// NewPatchedWorkloadDeploymentRequest instantiates a new PatchedWorkloadDeploymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWorkloadDeploymentRequest() *PatchedWorkloadDeploymentRequest {
	this := PatchedWorkloadDeploymentRequest{}
	return &this
}

// NewPatchedWorkloadDeploymentRequestWithDefaults instantiates a new PatchedWorkloadDeploymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWorkloadDeploymentRequestWithDefaults() *PatchedWorkloadDeploymentRequest {
	this := PatchedWorkloadDeploymentRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedWorkloadDeploymentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWorkloadDeploymentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedWorkloadDeploymentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedWorkloadDeploymentRequest) SetName(v string) {
	o.Name = &v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *PatchedWorkloadDeploymentRequest) GetCurrent() bool {
	if o == nil || IsNil(o.Current) {
		var ret bool
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWorkloadDeploymentRequest) GetCurrentOk() (*bool, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *PatchedWorkloadDeploymentRequest) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given bool and assigns it to the Current field.
func (o *PatchedWorkloadDeploymentRequest) SetCurrent(v bool) {
	o.Current = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PatchedWorkloadDeploymentRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWorkloadDeploymentRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PatchedWorkloadDeploymentRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PatchedWorkloadDeploymentRequest) SetActive(v bool) {
	o.Active = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *PatchedWorkloadDeploymentRequest) GetStrategy() DeploymentStrategyDefaultDeploymentStrategyRequest {
	if o == nil || IsNil(o.Strategy) {
		var ret DeploymentStrategyDefaultDeploymentStrategyRequest
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWorkloadDeploymentRequest) GetStrategyOk() (*DeploymentStrategyDefaultDeploymentStrategyRequest, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *PatchedWorkloadDeploymentRequest) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given DeploymentStrategyDefaultDeploymentStrategyRequest and assigns it to the Strategy field.
func (o *PatchedWorkloadDeploymentRequest) SetStrategy(v DeploymentStrategyDefaultDeploymentStrategyRequest) {
	o.Strategy = &v
}

func (o PatchedWorkloadDeploymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWorkloadDeploymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	return toSerialize, nil
}

type NullablePatchedWorkloadDeploymentRequest struct {
	value *PatchedWorkloadDeploymentRequest
	isSet bool
}

func (v NullablePatchedWorkloadDeploymentRequest) Get() *PatchedWorkloadDeploymentRequest {
	return v.value
}

func (v *NullablePatchedWorkloadDeploymentRequest) Set(val *PatchedWorkloadDeploymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWorkloadDeploymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWorkloadDeploymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWorkloadDeploymentRequest(val *PatchedWorkloadDeploymentRequest) *NullablePatchedWorkloadDeploymentRequest {
	return &NullablePatchedWorkloadDeploymentRequest{value: val, isSet: true}
}

func (v NullablePatchedWorkloadDeploymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWorkloadDeploymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


