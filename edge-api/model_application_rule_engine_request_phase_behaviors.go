/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApplicationRuleEngineRequestPhaseBehaviors - struct for ApplicationRuleEngineRequestPhaseBehaviors
type ApplicationRuleEngineRequestPhaseBehaviors struct {
	ApplicationRequestPhaseBehaviorCaptureMatchGroups *ApplicationRequestPhaseBehaviorCaptureMatchGroups
	ApplicationRequestPhaseBehaviorWithArgs *ApplicationRequestPhaseBehaviorWithArgs
	ApplicationRequestPhaseBehaviorWithoutArgs *ApplicationRequestPhaseBehaviorWithoutArgs
}

// ApplicationRequestPhaseBehaviorCaptureMatchGroupsAsApplicationRuleEngineRequestPhaseBehaviors is a convenience function that returns ApplicationRequestPhaseBehaviorCaptureMatchGroups wrapped in ApplicationRuleEngineRequestPhaseBehaviors
func ApplicationRequestPhaseBehaviorCaptureMatchGroupsAsApplicationRuleEngineRequestPhaseBehaviors(v *ApplicationRequestPhaseBehaviorCaptureMatchGroups) ApplicationRuleEngineRequestPhaseBehaviors {
	return ApplicationRuleEngineRequestPhaseBehaviors{
		ApplicationRequestPhaseBehaviorCaptureMatchGroups: v,
	}
}

// ApplicationRequestPhaseBehaviorWithArgsAsApplicationRuleEngineRequestPhaseBehaviors is a convenience function that returns ApplicationRequestPhaseBehaviorWithArgs wrapped in ApplicationRuleEngineRequestPhaseBehaviors
func ApplicationRequestPhaseBehaviorWithArgsAsApplicationRuleEngineRequestPhaseBehaviors(v *ApplicationRequestPhaseBehaviorWithArgs) ApplicationRuleEngineRequestPhaseBehaviors {
	return ApplicationRuleEngineRequestPhaseBehaviors{
		ApplicationRequestPhaseBehaviorWithArgs: v,
	}
}

// ApplicationRequestPhaseBehaviorWithoutArgsAsApplicationRuleEngineRequestPhaseBehaviors is a convenience function that returns ApplicationRequestPhaseBehaviorWithoutArgs wrapped in ApplicationRuleEngineRequestPhaseBehaviors
func ApplicationRequestPhaseBehaviorWithoutArgsAsApplicationRuleEngineRequestPhaseBehaviors(v *ApplicationRequestPhaseBehaviorWithoutArgs) ApplicationRuleEngineRequestPhaseBehaviors {
	return ApplicationRuleEngineRequestPhaseBehaviors{
		ApplicationRequestPhaseBehaviorWithoutArgs: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApplicationRuleEngineRequestPhaseBehaviors) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApplicationRequestPhaseBehaviorCaptureMatchGroups
	err = newStrictDecoder(data).Decode(&dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups)
	if err == nil {
		jsonApplicationRequestPhaseBehaviorCaptureMatchGroups, _ := json.Marshal(dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups)
		if string(jsonApplicationRequestPhaseBehaviorCaptureMatchGroups) == "{}" { // empty struct
			dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups = nil
		} else {
			if err = validator.Validate(dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups); err != nil {
				dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups = nil
	}

	// try to unmarshal data into ApplicationRequestPhaseBehaviorWithArgs
	err = newStrictDecoder(data).Decode(&dst.ApplicationRequestPhaseBehaviorWithArgs)
	if err == nil {
		jsonApplicationRequestPhaseBehaviorWithArgs, _ := json.Marshal(dst.ApplicationRequestPhaseBehaviorWithArgs)
		if string(jsonApplicationRequestPhaseBehaviorWithArgs) == "{}" { // empty struct
			dst.ApplicationRequestPhaseBehaviorWithArgs = nil
		} else {
			if err = validator.Validate(dst.ApplicationRequestPhaseBehaviorWithArgs); err != nil {
				dst.ApplicationRequestPhaseBehaviorWithArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRequestPhaseBehaviorWithArgs = nil
	}

	// try to unmarshal data into ApplicationRequestPhaseBehaviorWithoutArgs
	err = newStrictDecoder(data).Decode(&dst.ApplicationRequestPhaseBehaviorWithoutArgs)
	if err == nil {
		jsonApplicationRequestPhaseBehaviorWithoutArgs, _ := json.Marshal(dst.ApplicationRequestPhaseBehaviorWithoutArgs)
		if string(jsonApplicationRequestPhaseBehaviorWithoutArgs) == "{}" { // empty struct
			dst.ApplicationRequestPhaseBehaviorWithoutArgs = nil
		} else {
			if err = validator.Validate(dst.ApplicationRequestPhaseBehaviorWithoutArgs); err != nil {
				dst.ApplicationRequestPhaseBehaviorWithoutArgs = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationRequestPhaseBehaviorWithoutArgs = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApplicationRequestPhaseBehaviorCaptureMatchGroups = nil
		dst.ApplicationRequestPhaseBehaviorWithArgs = nil
		dst.ApplicationRequestPhaseBehaviorWithoutArgs = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApplicationRuleEngineRequestPhaseBehaviors)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApplicationRuleEngineRequestPhaseBehaviors)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApplicationRuleEngineRequestPhaseBehaviors) MarshalJSON() ([]byte, error) {
	if src.ApplicationRequestPhaseBehaviorCaptureMatchGroups != nil {
		return json.Marshal(&src.ApplicationRequestPhaseBehaviorCaptureMatchGroups)
	}

	if src.ApplicationRequestPhaseBehaviorWithArgs != nil {
		return json.Marshal(&src.ApplicationRequestPhaseBehaviorWithArgs)
	}

	if src.ApplicationRequestPhaseBehaviorWithoutArgs != nil {
		return json.Marshal(&src.ApplicationRequestPhaseBehaviorWithoutArgs)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApplicationRuleEngineRequestPhaseBehaviors) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApplicationRequestPhaseBehaviorCaptureMatchGroups != nil {
		return obj.ApplicationRequestPhaseBehaviorCaptureMatchGroups
	}

	if obj.ApplicationRequestPhaseBehaviorWithArgs != nil {
		return obj.ApplicationRequestPhaseBehaviorWithArgs
	}

	if obj.ApplicationRequestPhaseBehaviorWithoutArgs != nil {
		return obj.ApplicationRequestPhaseBehaviorWithoutArgs
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApplicationRuleEngineRequestPhaseBehaviors) GetActualInstanceValue() (interface{}) {
	if obj.ApplicationRequestPhaseBehaviorCaptureMatchGroups != nil {
		return *obj.ApplicationRequestPhaseBehaviorCaptureMatchGroups
	}

	if obj.ApplicationRequestPhaseBehaviorWithArgs != nil {
		return *obj.ApplicationRequestPhaseBehaviorWithArgs
	}

	if obj.ApplicationRequestPhaseBehaviorWithoutArgs != nil {
		return *obj.ApplicationRequestPhaseBehaviorWithoutArgs
	}

	// all schemas are nil
	return nil
}

type NullableApplicationRuleEngineRequestPhaseBehaviors struct {
	value *ApplicationRuleEngineRequestPhaseBehaviors
	isSet bool
}

func (v NullableApplicationRuleEngineRequestPhaseBehaviors) Get() *ApplicationRuleEngineRequestPhaseBehaviors {
	return v.value
}

func (v *NullableApplicationRuleEngineRequestPhaseBehaviors) Set(val *ApplicationRuleEngineRequestPhaseBehaviors) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRuleEngineRequestPhaseBehaviors) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRuleEngineRequestPhaseBehaviors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRuleEngineRequestPhaseBehaviors(val *ApplicationRuleEngineRequestPhaseBehaviors) *NullableApplicationRuleEngineRequestPhaseBehaviors {
	return &NullableApplicationRuleEngineRequestPhaseBehaviors{value: val, isSet: true}
}

func (v NullableApplicationRuleEngineRequestPhaseBehaviors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRuleEngineRequestPhaseBehaviors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


