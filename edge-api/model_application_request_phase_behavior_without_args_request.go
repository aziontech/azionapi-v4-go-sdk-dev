/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ApplicationRequestPhaseBehaviorWithoutArgsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationRequestPhaseBehaviorWithoutArgsRequest{}

// ApplicationRequestPhaseBehaviorWithoutArgsRequest struct for ApplicationRequestPhaseBehaviorWithoutArgsRequest
type ApplicationRequestPhaseBehaviorWithoutArgsRequest struct {
	// * `deny` - deny * `no_content` - no_content * `deliver` - deliver * `finish_request_phase` - finish_request_phase * `forward_cookies` - forward_cookies * `optimize_images` - optimize_images * `bypass_cache` - bypass_cache * `enable_gzip` - enable_gzip * `redirect_http_to_https` - redirect_http_to_https
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _ApplicationRequestPhaseBehaviorWithoutArgsRequest ApplicationRequestPhaseBehaviorWithoutArgsRequest

// NewApplicationRequestPhaseBehaviorWithoutArgsRequest instantiates a new ApplicationRequestPhaseBehaviorWithoutArgsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationRequestPhaseBehaviorWithoutArgsRequest(type_ string) *ApplicationRequestPhaseBehaviorWithoutArgsRequest {
	this := ApplicationRequestPhaseBehaviorWithoutArgsRequest{}
	this.Type = type_
	return &this
}

// NewApplicationRequestPhaseBehaviorWithoutArgsRequestWithDefaults instantiates a new ApplicationRequestPhaseBehaviorWithoutArgsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRequestPhaseBehaviorWithoutArgsRequestWithDefaults() *ApplicationRequestPhaseBehaviorWithoutArgsRequest {
	this := ApplicationRequestPhaseBehaviorWithoutArgsRequest{}
	return &this
}

// GetType returns the Type field value
func (o *ApplicationRequestPhaseBehaviorWithoutArgsRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApplicationRequestPhaseBehaviorWithoutArgsRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApplicationRequestPhaseBehaviorWithoutArgsRequest) SetType(v string) {
	o.Type = v
}

func (o ApplicationRequestPhaseBehaviorWithoutArgsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationRequestPhaseBehaviorWithoutArgsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApplicationRequestPhaseBehaviorWithoutArgsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplicationRequestPhaseBehaviorWithoutArgsRequest := _ApplicationRequestPhaseBehaviorWithoutArgsRequest{}

	err = json.Unmarshal(data, &varApplicationRequestPhaseBehaviorWithoutArgsRequest)

	if err != nil {
		return err
	}

	*o = ApplicationRequestPhaseBehaviorWithoutArgsRequest(varApplicationRequestPhaseBehaviorWithoutArgsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApplicationRequestPhaseBehaviorWithoutArgsRequest struct {
	value *ApplicationRequestPhaseBehaviorWithoutArgsRequest
	isSet bool
}

func (v NullableApplicationRequestPhaseBehaviorWithoutArgsRequest) Get() *ApplicationRequestPhaseBehaviorWithoutArgsRequest {
	return v.value
}

func (v *NullableApplicationRequestPhaseBehaviorWithoutArgsRequest) Set(val *ApplicationRequestPhaseBehaviorWithoutArgsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRequestPhaseBehaviorWithoutArgsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRequestPhaseBehaviorWithoutArgsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRequestPhaseBehaviorWithoutArgsRequest(val *ApplicationRequestPhaseBehaviorWithoutArgsRequest) *NullableApplicationRequestPhaseBehaviorWithoutArgsRequest {
	return &NullableApplicationRequestPhaseBehaviorWithoutArgsRequest{value: val, isSet: true}
}

func (v NullableApplicationRequestPhaseBehaviorWithoutArgsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRequestPhaseBehaviorWithoutArgsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


