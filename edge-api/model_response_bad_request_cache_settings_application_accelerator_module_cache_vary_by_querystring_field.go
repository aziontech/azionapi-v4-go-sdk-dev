/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField{}

// ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField struct for ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField
type ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField struct {
	Behavior []string `json:"behavior,omitempty"`
	Fields *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames `json:"fields,omitempty"`
	SortEnabled []string `json:"sort_enabled,omitempty"`
}

// NewResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField instantiates a new ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField() *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField {
	this := ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField{}
	return &this
}

// NewResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringFieldWithDefaults instantiates a new ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringFieldWithDefaults() *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField {
	this := ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField{}
	return &this
}

// GetBehavior returns the Behavior field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) GetBehavior() []string {
	if o == nil || IsNil(o.Behavior) {
		var ret []string
		return ret
	}
	return o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) GetBehaviorOk() ([]string, bool) {
	if o == nil || IsNil(o.Behavior) {
		return nil, false
	}
	return o.Behavior, true
}

// HasBehavior returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) HasBehavior() bool {
	if o != nil && !IsNil(o.Behavior) {
		return true
	}

	return false
}

// SetBehavior gets a reference to the given []string and assigns it to the Behavior field.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) SetBehavior(v []string) {
	o.Behavior = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) GetFields() ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames {
	if o == nil || IsNil(o.Fields) {
		var ret ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) GetFieldsOk() (*ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames and assigns it to the Fields field.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) SetFields(v ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames) {
	o.Fields = &v
}

// GetSortEnabled returns the SortEnabled field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) GetSortEnabled() []string {
	if o == nil || IsNil(o.SortEnabled) {
		var ret []string
		return ret
	}
	return o.SortEnabled
}

// GetSortEnabledOk returns a tuple with the SortEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) GetSortEnabledOk() ([]string, bool) {
	if o == nil || IsNil(o.SortEnabled) {
		return nil, false
	}
	return o.SortEnabled, true
}

// HasSortEnabled returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) HasSortEnabled() bool {
	if o != nil && !IsNil(o.SortEnabled) {
		return true
	}

	return false
}

// SetSortEnabled gets a reference to the given []string and assigns it to the SortEnabled field.
func (o *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) SetSortEnabled(v []string) {
	o.SortEnabled = v
}

func (o ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Behavior) {
		toSerialize["behavior"] = o.Behavior
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.SortEnabled) {
		toSerialize["sort_enabled"] = o.SortEnabled
	}
	return toSerialize, nil
}

type NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField struct {
	value *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField
	isSet bool
}

func (v NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) Get() *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField {
	return v.value
}

func (v *NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) Set(val *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField(val *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) *NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField {
	return &NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField{value: val, isSet: true}
}

func (v NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


