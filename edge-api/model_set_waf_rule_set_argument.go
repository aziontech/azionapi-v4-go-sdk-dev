/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetWafRuleSetArgument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetWafRuleSetArgument{}

// SetWafRuleSetArgument struct for SetWafRuleSetArgument
type SetWafRuleSetArgument struct {
	Id int64 `json:"id"`
	// * `learning` - learning * `blocking` - blocking
	Mode string `json:"mode"`
}

type _SetWafRuleSetArgument SetWafRuleSetArgument

// NewSetWafRuleSetArgument instantiates a new SetWafRuleSetArgument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetWafRuleSetArgument(id int64, mode string) *SetWafRuleSetArgument {
	this := SetWafRuleSetArgument{}
	this.Id = id
	this.Mode = mode
	return &this
}

// NewSetWafRuleSetArgumentWithDefaults instantiates a new SetWafRuleSetArgument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetWafRuleSetArgumentWithDefaults() *SetWafRuleSetArgument {
	this := SetWafRuleSetArgument{}
	return &this
}

// GetId returns the Id field value
func (o *SetWafRuleSetArgument) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SetWafRuleSetArgument) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SetWafRuleSetArgument) SetId(v int64) {
	o.Id = v
}

// GetMode returns the Mode field value
func (o *SetWafRuleSetArgument) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *SetWafRuleSetArgument) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *SetWafRuleSetArgument) SetMode(v string) {
	o.Mode = v
}

func (o SetWafRuleSetArgument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetWafRuleSetArgument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["mode"] = o.Mode
	return toSerialize, nil
}

func (o *SetWafRuleSetArgument) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetWafRuleSetArgument := _SetWafRuleSetArgument{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetWafRuleSetArgument)

	if err != nil {
		return err
	}

	*o = SetWafRuleSetArgument(varSetWafRuleSetArgument)

	return err
}

type NullableSetWafRuleSetArgument struct {
	value *SetWafRuleSetArgument
	isSet bool
}

func (v NullableSetWafRuleSetArgument) Get() *SetWafRuleSetArgument {
	return v.value
}

func (v *NullableSetWafRuleSetArgument) Set(val *SetWafRuleSetArgument) {
	v.value = val
	v.isSet = true
}

func (v NullableSetWafRuleSetArgument) IsSet() bool {
	return v.isSet
}

func (v *NullableSetWafRuleSetArgument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetWafRuleSetArgument(val *SetWafRuleSetArgument) *NullableSetWafRuleSetArgument {
	return &NullableSetWafRuleSetArgument{value: val, isSet: true}
}

func (v NullableSetWafRuleSetArgument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetWafRuleSetArgument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


