/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// ApplicationRuleEngineResponsePhaseBehaviorsRequest - struct for ApplicationRuleEngineResponsePhaseBehaviorsRequest
type ApplicationRuleEngineResponsePhaseBehaviorsRequest struct {
	ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest *ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest
	ApplicationResponsePhaseBehaviorWithArgsRequest *ApplicationResponsePhaseBehaviorWithArgsRequest
	ApplicationResponsePhaseBehaviorWithoutArgsRequest *ApplicationResponsePhaseBehaviorWithoutArgsRequest
}

// ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequestAsApplicationRuleEngineResponsePhaseBehaviorsRequest is a convenience function that returns ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest wrapped in ApplicationRuleEngineResponsePhaseBehaviorsRequest
func ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequestAsApplicationRuleEngineResponsePhaseBehaviorsRequest(v *ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest) ApplicationRuleEngineResponsePhaseBehaviorsRequest {
	return ApplicationRuleEngineResponsePhaseBehaviorsRequest{
		ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest: v,
	}
}

// ApplicationResponsePhaseBehaviorWithArgsRequestAsApplicationRuleEngineResponsePhaseBehaviorsRequest is a convenience function that returns ApplicationResponsePhaseBehaviorWithArgsRequest wrapped in ApplicationRuleEngineResponsePhaseBehaviorsRequest
func ApplicationResponsePhaseBehaviorWithArgsRequestAsApplicationRuleEngineResponsePhaseBehaviorsRequest(v *ApplicationResponsePhaseBehaviorWithArgsRequest) ApplicationRuleEngineResponsePhaseBehaviorsRequest {
	return ApplicationRuleEngineResponsePhaseBehaviorsRequest{
		ApplicationResponsePhaseBehaviorWithArgsRequest: v,
	}
}

// ApplicationResponsePhaseBehaviorWithoutArgsRequestAsApplicationRuleEngineResponsePhaseBehaviorsRequest is a convenience function that returns ApplicationResponsePhaseBehaviorWithoutArgsRequest wrapped in ApplicationRuleEngineResponsePhaseBehaviorsRequest
func ApplicationResponsePhaseBehaviorWithoutArgsRequestAsApplicationRuleEngineResponsePhaseBehaviorsRequest(v *ApplicationResponsePhaseBehaviorWithoutArgsRequest) ApplicationRuleEngineResponsePhaseBehaviorsRequest {
	return ApplicationRuleEngineResponsePhaseBehaviorsRequest{
		ApplicationResponsePhaseBehaviorWithoutArgsRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApplicationRuleEngineResponsePhaseBehaviorsRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest
	err = newStrictDecoder(data).Decode(&dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest)
	if err == nil {
		jsonApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest, _ := json.Marshal(dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest)
		if string(jsonApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest) == "{}" { // empty struct
			dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest = nil
		} else {
			if err = validator.Validate(dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest); err != nil {
				dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest = nil
	}

	// try to unmarshal data into ApplicationResponsePhaseBehaviorWithArgsRequest
	err = newStrictDecoder(data).Decode(&dst.ApplicationResponsePhaseBehaviorWithArgsRequest)
	if err == nil {
		jsonApplicationResponsePhaseBehaviorWithArgsRequest, _ := json.Marshal(dst.ApplicationResponsePhaseBehaviorWithArgsRequest)
		if string(jsonApplicationResponsePhaseBehaviorWithArgsRequest) == "{}" { // empty struct
			dst.ApplicationResponsePhaseBehaviorWithArgsRequest = nil
		} else {
			if err = validator.Validate(dst.ApplicationResponsePhaseBehaviorWithArgsRequest); err != nil {
				dst.ApplicationResponsePhaseBehaviorWithArgsRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationResponsePhaseBehaviorWithArgsRequest = nil
	}

	// try to unmarshal data into ApplicationResponsePhaseBehaviorWithoutArgsRequest
	err = newStrictDecoder(data).Decode(&dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest)
	if err == nil {
		jsonApplicationResponsePhaseBehaviorWithoutArgsRequest, _ := json.Marshal(dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest)
		if string(jsonApplicationResponsePhaseBehaviorWithoutArgsRequest) == "{}" { // empty struct
			dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest = nil
		} else {
			if err = validator.Validate(dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest); err != nil {
				dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest = nil
		dst.ApplicationResponsePhaseBehaviorWithArgsRequest = nil
		dst.ApplicationResponsePhaseBehaviorWithoutArgsRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApplicationRuleEngineResponsePhaseBehaviorsRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApplicationRuleEngineResponsePhaseBehaviorsRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApplicationRuleEngineResponsePhaseBehaviorsRequest) MarshalJSON() ([]byte, error) {
	if src.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest != nil {
		return json.Marshal(&src.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest)
	}

	if src.ApplicationResponsePhaseBehaviorWithArgsRequest != nil {
		return json.Marshal(&src.ApplicationResponsePhaseBehaviorWithArgsRequest)
	}

	if src.ApplicationResponsePhaseBehaviorWithoutArgsRequest != nil {
		return json.Marshal(&src.ApplicationResponsePhaseBehaviorWithoutArgsRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApplicationRuleEngineResponsePhaseBehaviorsRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest != nil {
		return obj.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest
	}

	if obj.ApplicationResponsePhaseBehaviorWithArgsRequest != nil {
		return obj.ApplicationResponsePhaseBehaviorWithArgsRequest
	}

	if obj.ApplicationResponsePhaseBehaviorWithoutArgsRequest != nil {
		return obj.ApplicationResponsePhaseBehaviorWithoutArgsRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj ApplicationRuleEngineResponsePhaseBehaviorsRequest) GetActualInstanceValue() (interface{}) {
	if obj.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest != nil {
		return *obj.ApplicationResponsePhaseBehaviorCaptureMatchGroupsRequest
	}

	if obj.ApplicationResponsePhaseBehaviorWithArgsRequest != nil {
		return *obj.ApplicationResponsePhaseBehaviorWithArgsRequest
	}

	if obj.ApplicationResponsePhaseBehaviorWithoutArgsRequest != nil {
		return *obj.ApplicationResponsePhaseBehaviorWithoutArgsRequest
	}

	// all schemas are nil
	return nil
}

type NullableApplicationRuleEngineResponsePhaseBehaviorsRequest struct {
	value *ApplicationRuleEngineResponsePhaseBehaviorsRequest
	isSet bool
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviorsRequest) Get() *ApplicationRuleEngineResponsePhaseBehaviorsRequest {
	return v.value
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviorsRequest) Set(val *ApplicationRuleEngineResponsePhaseBehaviorsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviorsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviorsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRuleEngineResponsePhaseBehaviorsRequest(val *ApplicationRuleEngineResponsePhaseBehaviorsRequest) *NullableApplicationRuleEngineResponsePhaseBehaviorsRequest {
	return &NullableApplicationRuleEngineResponsePhaseBehaviorsRequest{value: val, isSet: true}
}

func (v NullableApplicationRuleEngineResponsePhaseBehaviorsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRuleEngineResponsePhaseBehaviorsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


