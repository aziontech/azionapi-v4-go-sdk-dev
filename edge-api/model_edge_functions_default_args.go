/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
)

// checks if the EdgeFunctionsDefaultArgs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeFunctionsDefaultArgs{}

// EdgeFunctionsDefaultArgs Args to be accessed by the Edge Function. - default_args must be a JSON object or an array. - If there are no args being informed, an empty JSON object will be used. 
type EdgeFunctionsDefaultArgs struct {
	Arg map[string]interface{} `json:"arg,omitempty"`
}

// NewEdgeFunctionsDefaultArgs instantiates a new EdgeFunctionsDefaultArgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeFunctionsDefaultArgs() *EdgeFunctionsDefaultArgs {
	this := EdgeFunctionsDefaultArgs{}
	return &this
}

// NewEdgeFunctionsDefaultArgsWithDefaults instantiates a new EdgeFunctionsDefaultArgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeFunctionsDefaultArgsWithDefaults() *EdgeFunctionsDefaultArgs {
	this := EdgeFunctionsDefaultArgs{}
	return &this
}

// GetArg returns the Arg field value if set, zero value otherwise.
func (o *EdgeFunctionsDefaultArgs) GetArg() map[string]interface{} {
	if o == nil || IsNil(o.Arg) {
		var ret map[string]interface{}
		return ret
	}
	return o.Arg
}

// GetArgOk returns a tuple with the Arg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeFunctionsDefaultArgs) GetArgOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Arg) {
		return map[string]interface{}{}, false
	}
	return o.Arg, true
}

// HasArg returns a boolean if a field has been set.
func (o *EdgeFunctionsDefaultArgs) HasArg() bool {
	if o != nil && !IsNil(o.Arg) {
		return true
	}

	return false
}

// SetArg gets a reference to the given map[string]interface{} and assigns it to the Arg field.
func (o *EdgeFunctionsDefaultArgs) SetArg(v map[string]interface{}) {
	o.Arg = v
}

func (o EdgeFunctionsDefaultArgs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeFunctionsDefaultArgs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arg) {
		toSerialize["arg"] = o.Arg
	}
	return toSerialize, nil
}

type NullableEdgeFunctionsDefaultArgs struct {
	value *EdgeFunctionsDefaultArgs
	isSet bool
}

func (v NullableEdgeFunctionsDefaultArgs) Get() *EdgeFunctionsDefaultArgs {
	return v.value
}

func (v *NullableEdgeFunctionsDefaultArgs) Set(val *EdgeFunctionsDefaultArgs) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeFunctionsDefaultArgs) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeFunctionsDefaultArgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeFunctionsDefaultArgs(val *EdgeFunctionsDefaultArgs) *NullableEdgeFunctionsDefaultArgs {
	return &NullableEdgeFunctionsDefaultArgs{value: val, isSet: true}
}

func (v NullableEdgeFunctionsDefaultArgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeFunctionsDefaultArgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


