/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkloadDeploymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadDeploymentRequest{}

// WorkloadDeploymentRequest struct for WorkloadDeploymentRequest
type WorkloadDeploymentRequest struct {
	Name string `json:"name" validate:"regexp=.*"`
	Current *bool `json:"current,omitempty"`
	Active *bool `json:"active,omitempty"`
	Strategy DeploymentStrategyDefaultDeploymentStrategyRequest `json:"strategy"`
}

type _WorkloadDeploymentRequest WorkloadDeploymentRequest

// NewWorkloadDeploymentRequest instantiates a new WorkloadDeploymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadDeploymentRequest(name string, strategy DeploymentStrategyDefaultDeploymentStrategyRequest) *WorkloadDeploymentRequest {
	this := WorkloadDeploymentRequest{}
	this.Name = name
	this.Strategy = strategy
	return &this
}

// NewWorkloadDeploymentRequestWithDefaults instantiates a new WorkloadDeploymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadDeploymentRequestWithDefaults() *WorkloadDeploymentRequest {
	this := WorkloadDeploymentRequest{}
	return &this
}

// GetName returns the Name field value
func (o *WorkloadDeploymentRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkloadDeploymentRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkloadDeploymentRequest) SetName(v string) {
	o.Name = v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *WorkloadDeploymentRequest) GetCurrent() bool {
	if o == nil || IsNil(o.Current) {
		var ret bool
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadDeploymentRequest) GetCurrentOk() (*bool, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *WorkloadDeploymentRequest) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given bool and assigns it to the Current field.
func (o *WorkloadDeploymentRequest) SetCurrent(v bool) {
	o.Current = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *WorkloadDeploymentRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadDeploymentRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *WorkloadDeploymentRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *WorkloadDeploymentRequest) SetActive(v bool) {
	o.Active = &v
}

// GetStrategy returns the Strategy field value
func (o *WorkloadDeploymentRequest) GetStrategy() DeploymentStrategyDefaultDeploymentStrategyRequest {
	if o == nil {
		var ret DeploymentStrategyDefaultDeploymentStrategyRequest
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *WorkloadDeploymentRequest) GetStrategyOk() (*DeploymentStrategyDefaultDeploymentStrategyRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *WorkloadDeploymentRequest) SetStrategy(v DeploymentStrategyDefaultDeploymentStrategyRequest) {
	o.Strategy = v
}

func (o WorkloadDeploymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadDeploymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["strategy"] = o.Strategy
	return toSerialize, nil
}

func (o *WorkloadDeploymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"strategy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkloadDeploymentRequest := _WorkloadDeploymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkloadDeploymentRequest)

	if err != nil {
		return err
	}

	*o = WorkloadDeploymentRequest(varWorkloadDeploymentRequest)

	return err
}

type NullableWorkloadDeploymentRequest struct {
	value *WorkloadDeploymentRequest
	isSet bool
}

func (v NullableWorkloadDeploymentRequest) Get() *WorkloadDeploymentRequest {
	return v.value
}

func (v *NullableWorkloadDeploymentRequest) Set(val *WorkloadDeploymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadDeploymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadDeploymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadDeploymentRequest(val *WorkloadDeploymentRequest) *NullableWorkloadDeploymentRequest {
	return &NullableWorkloadDeploymentRequest{value: val, isSet: true}
}

func (v NullableWorkloadDeploymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadDeploymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


