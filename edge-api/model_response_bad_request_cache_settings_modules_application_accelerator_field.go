/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField{}

// ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField struct for ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField
type ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField struct {
	CacheVaryByMethod *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames `json:"cache_vary_by_method,omitempty"`
	CacheVaryByQuerystring *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField `json:"cache_vary_by_querystring,omitempty"`
	CacheVaryByCookies *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesField `json:"cache_vary_by_cookies,omitempty"`
	CacheVaryByDevices *ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByDevicesField `json:"cache_vary_by_devices,omitempty"`
}

// NewResponseBadRequestCacheSettingsModulesApplicationAcceleratorField instantiates a new ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestCacheSettingsModulesApplicationAcceleratorField() *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField {
	this := ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField{}
	return &this
}

// NewResponseBadRequestCacheSettingsModulesApplicationAcceleratorFieldWithDefaults instantiates a new ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestCacheSettingsModulesApplicationAcceleratorFieldWithDefaults() *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField {
	this := ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField{}
	return &this
}

// GetCacheVaryByMethod returns the CacheVaryByMethod field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByMethod() ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames {
	if o == nil || IsNil(o.CacheVaryByMethod) {
		var ret ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames
		return ret
	}
	return *o.CacheVaryByMethod
}

// GetCacheVaryByMethodOk returns a tuple with the CacheVaryByMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByMethodOk() (*ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames, bool) {
	if o == nil || IsNil(o.CacheVaryByMethod) {
		return nil, false
	}
	return o.CacheVaryByMethod, true
}

// HasCacheVaryByMethod returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) HasCacheVaryByMethod() bool {
	if o != nil && !IsNil(o.CacheVaryByMethod) {
		return true
	}

	return false
}

// SetCacheVaryByMethod gets a reference to the given ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames and assigns it to the CacheVaryByMethod field.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) SetCacheVaryByMethod(v ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesFieldCookieNames) {
	o.CacheVaryByMethod = &v
}

// GetCacheVaryByQuerystring returns the CacheVaryByQuerystring field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByQuerystring() ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField {
	if o == nil || IsNil(o.CacheVaryByQuerystring) {
		var ret ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField
		return ret
	}
	return *o.CacheVaryByQuerystring
}

// GetCacheVaryByQuerystringOk returns a tuple with the CacheVaryByQuerystring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByQuerystringOk() (*ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField, bool) {
	if o == nil || IsNil(o.CacheVaryByQuerystring) {
		return nil, false
	}
	return o.CacheVaryByQuerystring, true
}

// HasCacheVaryByQuerystring returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) HasCacheVaryByQuerystring() bool {
	if o != nil && !IsNil(o.CacheVaryByQuerystring) {
		return true
	}

	return false
}

// SetCacheVaryByQuerystring gets a reference to the given ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField and assigns it to the CacheVaryByQuerystring field.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) SetCacheVaryByQuerystring(v ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByQuerystringField) {
	o.CacheVaryByQuerystring = &v
}

// GetCacheVaryByCookies returns the CacheVaryByCookies field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByCookies() ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesField {
	if o == nil || IsNil(o.CacheVaryByCookies) {
		var ret ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesField
		return ret
	}
	return *o.CacheVaryByCookies
}

// GetCacheVaryByCookiesOk returns a tuple with the CacheVaryByCookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByCookiesOk() (*ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesField, bool) {
	if o == nil || IsNil(o.CacheVaryByCookies) {
		return nil, false
	}
	return o.CacheVaryByCookies, true
}

// HasCacheVaryByCookies returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) HasCacheVaryByCookies() bool {
	if o != nil && !IsNil(o.CacheVaryByCookies) {
		return true
	}

	return false
}

// SetCacheVaryByCookies gets a reference to the given ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesField and assigns it to the CacheVaryByCookies field.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) SetCacheVaryByCookies(v ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByCookiesField) {
	o.CacheVaryByCookies = &v
}

// GetCacheVaryByDevices returns the CacheVaryByDevices field value if set, zero value otherwise.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByDevices() ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByDevicesField {
	if o == nil || IsNil(o.CacheVaryByDevices) {
		var ret ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByDevicesField
		return ret
	}
	return *o.CacheVaryByDevices
}

// GetCacheVaryByDevicesOk returns a tuple with the CacheVaryByDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) GetCacheVaryByDevicesOk() (*ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByDevicesField, bool) {
	if o == nil || IsNil(o.CacheVaryByDevices) {
		return nil, false
	}
	return o.CacheVaryByDevices, true
}

// HasCacheVaryByDevices returns a boolean if a field has been set.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) HasCacheVaryByDevices() bool {
	if o != nil && !IsNil(o.CacheVaryByDevices) {
		return true
	}

	return false
}

// SetCacheVaryByDevices gets a reference to the given ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByDevicesField and assigns it to the CacheVaryByDevices field.
func (o *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) SetCacheVaryByDevices(v ResponseBadRequestCacheSettingsApplicationAcceleratorModuleCacheVaryByDevicesField) {
	o.CacheVaryByDevices = &v
}

func (o ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CacheVaryByMethod) {
		toSerialize["cache_vary_by_method"] = o.CacheVaryByMethod
	}
	if !IsNil(o.CacheVaryByQuerystring) {
		toSerialize["cache_vary_by_querystring"] = o.CacheVaryByQuerystring
	}
	if !IsNil(o.CacheVaryByCookies) {
		toSerialize["cache_vary_by_cookies"] = o.CacheVaryByCookies
	}
	if !IsNil(o.CacheVaryByDevices) {
		toSerialize["cache_vary_by_devices"] = o.CacheVaryByDevices
	}
	return toSerialize, nil
}

type NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField struct {
	value *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField
	isSet bool
}

func (v NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) Get() *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField {
	return v.value
}

func (v *NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) Set(val *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField(val *ResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) *NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField {
	return &NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField{value: val, isSet: true}
}

func (v NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestCacheSettingsModulesApplicationAcceleratorField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


