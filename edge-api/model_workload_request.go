/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkloadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadRequest{}

// WorkloadRequest struct for WorkloadRequest
type WorkloadRequest struct {
	Name string `json:"name" validate:"regexp=.*"`
	Active *bool `json:"active,omitempty"`
	// * `1` - Production Infrastructure (All Edge Locations) * `2` - Staging Infrastructure
	Infrastructure *int64 `json:"infrastructure,omitempty"`
	Tls *TLSWorkloadRequest `json:"tls,omitempty"`
	Protocols *ProtocolsRequest `json:"protocols,omitempty"`
	Mtls *MTLSRequest `json:"mtls,omitempty"`
	Domains []string `json:"domains,omitempty"`
	WorkloadDomainAllowAccess *bool `json:"workload_domain_allow_access,omitempty"`
}

type _WorkloadRequest WorkloadRequest

// NewWorkloadRequest instantiates a new WorkloadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadRequest(name string) *WorkloadRequest {
	this := WorkloadRequest{}
	this.Name = name
	return &this
}

// NewWorkloadRequestWithDefaults instantiates a new WorkloadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadRequestWithDefaults() *WorkloadRequest {
	this := WorkloadRequest{}
	return &this
}

// GetName returns the Name field value
func (o *WorkloadRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkloadRequest) SetName(v string) {
	o.Name = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *WorkloadRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *WorkloadRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *WorkloadRequest) SetActive(v bool) {
	o.Active = &v
}

// GetInfrastructure returns the Infrastructure field value if set, zero value otherwise.
func (o *WorkloadRequest) GetInfrastructure() int64 {
	if o == nil || IsNil(o.Infrastructure) {
		var ret int64
		return ret
	}
	return *o.Infrastructure
}

// GetInfrastructureOk returns a tuple with the Infrastructure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetInfrastructureOk() (*int64, bool) {
	if o == nil || IsNil(o.Infrastructure) {
		return nil, false
	}
	return o.Infrastructure, true
}

// HasInfrastructure returns a boolean if a field has been set.
func (o *WorkloadRequest) HasInfrastructure() bool {
	if o != nil && !IsNil(o.Infrastructure) {
		return true
	}

	return false
}

// SetInfrastructure gets a reference to the given int64 and assigns it to the Infrastructure field.
func (o *WorkloadRequest) SetInfrastructure(v int64) {
	o.Infrastructure = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *WorkloadRequest) GetTls() TLSWorkloadRequest {
	if o == nil || IsNil(o.Tls) {
		var ret TLSWorkloadRequest
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetTlsOk() (*TLSWorkloadRequest, bool) {
	if o == nil || IsNil(o.Tls) {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *WorkloadRequest) HasTls() bool {
	if o != nil && !IsNil(o.Tls) {
		return true
	}

	return false
}

// SetTls gets a reference to the given TLSWorkloadRequest and assigns it to the Tls field.
func (o *WorkloadRequest) SetTls(v TLSWorkloadRequest) {
	o.Tls = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *WorkloadRequest) GetProtocols() ProtocolsRequest {
	if o == nil || IsNil(o.Protocols) {
		var ret ProtocolsRequest
		return ret
	}
	return *o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetProtocolsOk() (*ProtocolsRequest, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *WorkloadRequest) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given ProtocolsRequest and assigns it to the Protocols field.
func (o *WorkloadRequest) SetProtocols(v ProtocolsRequest) {
	o.Protocols = &v
}

// GetMtls returns the Mtls field value if set, zero value otherwise.
func (o *WorkloadRequest) GetMtls() MTLSRequest {
	if o == nil || IsNil(o.Mtls) {
		var ret MTLSRequest
		return ret
	}
	return *o.Mtls
}

// GetMtlsOk returns a tuple with the Mtls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetMtlsOk() (*MTLSRequest, bool) {
	if o == nil || IsNil(o.Mtls) {
		return nil, false
	}
	return o.Mtls, true
}

// HasMtls returns a boolean if a field has been set.
func (o *WorkloadRequest) HasMtls() bool {
	if o != nil && !IsNil(o.Mtls) {
		return true
	}

	return false
}

// SetMtls gets a reference to the given MTLSRequest and assigns it to the Mtls field.
func (o *WorkloadRequest) SetMtls(v MTLSRequest) {
	o.Mtls = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *WorkloadRequest) GetDomains() []string {
	if o == nil || IsNil(o.Domains) {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *WorkloadRequest) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *WorkloadRequest) SetDomains(v []string) {
	o.Domains = v
}

// GetWorkloadDomainAllowAccess returns the WorkloadDomainAllowAccess field value if set, zero value otherwise.
func (o *WorkloadRequest) GetWorkloadDomainAllowAccess() bool {
	if o == nil || IsNil(o.WorkloadDomainAllowAccess) {
		var ret bool
		return ret
	}
	return *o.WorkloadDomainAllowAccess
}

// GetWorkloadDomainAllowAccessOk returns a tuple with the WorkloadDomainAllowAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRequest) GetWorkloadDomainAllowAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.WorkloadDomainAllowAccess) {
		return nil, false
	}
	return o.WorkloadDomainAllowAccess, true
}

// HasWorkloadDomainAllowAccess returns a boolean if a field has been set.
func (o *WorkloadRequest) HasWorkloadDomainAllowAccess() bool {
	if o != nil && !IsNil(o.WorkloadDomainAllowAccess) {
		return true
	}

	return false
}

// SetWorkloadDomainAllowAccess gets a reference to the given bool and assigns it to the WorkloadDomainAllowAccess field.
func (o *WorkloadRequest) SetWorkloadDomainAllowAccess(v bool) {
	o.WorkloadDomainAllowAccess = &v
}

func (o WorkloadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Infrastructure) {
		toSerialize["infrastructure"] = o.Infrastructure
	}
	if !IsNil(o.Tls) {
		toSerialize["tls"] = o.Tls
	}
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.Mtls) {
		toSerialize["mtls"] = o.Mtls
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.WorkloadDomainAllowAccess) {
		toSerialize["workload_domain_allow_access"] = o.WorkloadDomainAllowAccess
	}
	return toSerialize, nil
}

func (o *WorkloadRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkloadRequest := _WorkloadRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkloadRequest)

	if err != nil {
		return err
	}

	*o = WorkloadRequest(varWorkloadRequest)

	return err
}

type NullableWorkloadRequest struct {
	value *WorkloadRequest
	isSet bool
}

func (v NullableWorkloadRequest) Get() *WorkloadRequest {
	return v.value
}

func (v *NullableWorkloadRequest) Set(val *WorkloadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadRequest(val *WorkloadRequest) *NullableWorkloadRequest {
	return &NullableWorkloadRequest{value: val, isSet: true}
}

func (v NullableWorkloadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


