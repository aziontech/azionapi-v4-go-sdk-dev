/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeapi

import (
	"encoding/json"
)

// checks if the HTTPModules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HTTPModules{}

// HTTPModules struct for HTTPModules
type HTTPModules struct {
	LoadBalancer *LoadBalancerModule `json:"load_balancer,omitempty"`
	OriginShield *OriginShieldModule `json:"origin_shield,omitempty"`
}

// NewHTTPModules instantiates a new HTTPModules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHTTPModules() *HTTPModules {
	this := HTTPModules{}
	return &this
}

// NewHTTPModulesWithDefaults instantiates a new HTTPModules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHTTPModulesWithDefaults() *HTTPModules {
	this := HTTPModules{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *HTTPModules) GetLoadBalancer() LoadBalancerModule {
	if o == nil || IsNil(o.LoadBalancer) {
		var ret LoadBalancerModule
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPModules) GetLoadBalancerOk() (*LoadBalancerModule, bool) {
	if o == nil || IsNil(o.LoadBalancer) {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *HTTPModules) HasLoadBalancer() bool {
	if o != nil && !IsNil(o.LoadBalancer) {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancerModule and assigns it to the LoadBalancer field.
func (o *HTTPModules) SetLoadBalancer(v LoadBalancerModule) {
	o.LoadBalancer = &v
}

// GetOriginShield returns the OriginShield field value if set, zero value otherwise.
func (o *HTTPModules) GetOriginShield() OriginShieldModule {
	if o == nil || IsNil(o.OriginShield) {
		var ret OriginShieldModule
		return ret
	}
	return *o.OriginShield
}

// GetOriginShieldOk returns a tuple with the OriginShield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPModules) GetOriginShieldOk() (*OriginShieldModule, bool) {
	if o == nil || IsNil(o.OriginShield) {
		return nil, false
	}
	return o.OriginShield, true
}

// HasOriginShield returns a boolean if a field has been set.
func (o *HTTPModules) HasOriginShield() bool {
	if o != nil && !IsNil(o.OriginShield) {
		return true
	}

	return false
}

// SetOriginShield gets a reference to the given OriginShieldModule and assigns it to the OriginShield field.
func (o *HTTPModules) SetOriginShield(v OriginShieldModule) {
	o.OriginShield = &v
}

func (o HTTPModules) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HTTPModules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoadBalancer) {
		toSerialize["load_balancer"] = o.LoadBalancer
	}
	if !IsNil(o.OriginShield) {
		toSerialize["origin_shield"] = o.OriginShield
	}
	return toSerialize, nil
}

type NullableHTTPModules struct {
	value *HTTPModules
	isSet bool
}

func (v NullableHTTPModules) Get() *HTTPModules {
	return v.value
}

func (v *NullableHTTPModules) Set(val *HTTPModules) {
	v.value = val
	v.isSet = true
}

func (v NullableHTTPModules) IsSet() bool {
	return v.isSet
}

func (v *NullableHTTPModules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHTTPModules(val *HTTPModules) *NullableHTTPModules {
	return &NullableHTTPModules{value: val, isSet: true}
}

func (v NullableHTTPModules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHTTPModules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


