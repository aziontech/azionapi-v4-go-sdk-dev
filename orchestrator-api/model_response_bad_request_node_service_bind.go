/*
Orchestrator

REST API OpenAPI documentation for the Orchestrator

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orchestratorapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestNodeServiceBind type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestNodeServiceBind{}

// ResponseBadRequestNodeServiceBind struct for ResponseBadRequestNodeServiceBind
type ResponseBadRequestNodeServiceBind struct {
	Id []string `json:"id,omitempty"`
	ServiceName []string `json:"service_name,omitempty"`
	ServiceId []string `json:"service_id,omitempty"`
	Active []string `json:"active,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Detail *string `json:"detail,omitempty"`
}

// NewResponseBadRequestNodeServiceBind instantiates a new ResponseBadRequestNodeServiceBind object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestNodeServiceBind() *ResponseBadRequestNodeServiceBind {
	this := ResponseBadRequestNodeServiceBind{}
	return &this
}

// NewResponseBadRequestNodeServiceBindWithDefaults instantiates a new ResponseBadRequestNodeServiceBind object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestNodeServiceBindWithDefaults() *ResponseBadRequestNodeServiceBind {
	this := ResponseBadRequestNodeServiceBind{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetId() []string {
	if o == nil || IsNil(o.Id) {
		var ret []string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given []string and assigns it to the Id field.
func (o *ResponseBadRequestNodeServiceBind) SetId(v []string) {
	o.Id = v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetServiceName() []string {
	if o == nil || IsNil(o.ServiceName) {
		var ret []string
		return ret
	}
	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetServiceNameOk() ([]string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given []string and assigns it to the ServiceName field.
func (o *ResponseBadRequestNodeServiceBind) SetServiceName(v []string) {
	o.ServiceName = v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetServiceId() []string {
	if o == nil || IsNil(o.ServiceId) {
		var ret []string
		return ret
	}
	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetServiceIdOk() ([]string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given []string and assigns it to the ServiceId field.
func (o *ResponseBadRequestNodeServiceBind) SetServiceId(v []string) {
	o.ServiceId = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestNodeServiceBind) SetActive(v []string) {
	o.Active = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestNodeServiceBind) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestNodeServiceBind) SetLastModified(v []string) {
	o.LastModified = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestNodeServiceBind) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNodeServiceBind) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestNodeServiceBind) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestNodeServiceBind) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestNodeServiceBind) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestNodeServiceBind) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestNodeServiceBind struct {
	value *ResponseBadRequestNodeServiceBind
	isSet bool
}

func (v NullableResponseBadRequestNodeServiceBind) Get() *ResponseBadRequestNodeServiceBind {
	return v.value
}

func (v *NullableResponseBadRequestNodeServiceBind) Set(val *ResponseBadRequestNodeServiceBind) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestNodeServiceBind) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestNodeServiceBind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestNodeServiceBind(val *ResponseBadRequestNodeServiceBind) *NullableResponseBadRequestNodeServiceBind {
	return &NullableResponseBadRequestNodeServiceBind{value: val, isSet: true}
}

func (v NullableResponseBadRequestNodeServiceBind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestNodeServiceBind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


