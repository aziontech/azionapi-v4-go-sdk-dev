/*
Orchestrator

REST API OpenAPI documentation for the Orchestrator

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orchestratorapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceResourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceResourceRequest{}

// ServiceResourceRequest struct for ServiceResourceRequest
type ServiceResourceRequest struct {
	Name string `json:"name"`
	ContentType string `json:"content_type"`
	FileGroup string `json:"file_group"`
	FileMode string `json:"file_mode"`
	FileOwner string `json:"file_owner"`
}

type _ServiceResourceRequest ServiceResourceRequest

// NewServiceResourceRequest instantiates a new ServiceResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceResourceRequest(name string, contentType string, fileGroup string, fileMode string, fileOwner string) *ServiceResourceRequest {
	this := ServiceResourceRequest{}
	this.Name = name
	this.ContentType = contentType
	this.FileGroup = fileGroup
	this.FileMode = fileMode
	this.FileOwner = fileOwner
	return &this
}

// NewServiceResourceRequestWithDefaults instantiates a new ServiceResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceResourceRequestWithDefaults() *ServiceResourceRequest {
	this := ServiceResourceRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ServiceResourceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceResourceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceResourceRequest) SetName(v string) {
	o.Name = v
}

// GetContentType returns the ContentType field value
func (o *ServiceResourceRequest) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *ServiceResourceRequest) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *ServiceResourceRequest) SetContentType(v string) {
	o.ContentType = v
}

// GetFileGroup returns the FileGroup field value
func (o *ServiceResourceRequest) GetFileGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileGroup
}

// GetFileGroupOk returns a tuple with the FileGroup field value
// and a boolean to check if the value has been set.
func (o *ServiceResourceRequest) GetFileGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileGroup, true
}

// SetFileGroup sets field value
func (o *ServiceResourceRequest) SetFileGroup(v string) {
	o.FileGroup = v
}

// GetFileMode returns the FileMode field value
func (o *ServiceResourceRequest) GetFileMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileMode
}

// GetFileModeOk returns a tuple with the FileMode field value
// and a boolean to check if the value has been set.
func (o *ServiceResourceRequest) GetFileModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileMode, true
}

// SetFileMode sets field value
func (o *ServiceResourceRequest) SetFileMode(v string) {
	o.FileMode = v
}

// GetFileOwner returns the FileOwner field value
func (o *ServiceResourceRequest) GetFileOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileOwner
}

// GetFileOwnerOk returns a tuple with the FileOwner field value
// and a boolean to check if the value has been set.
func (o *ServiceResourceRequest) GetFileOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileOwner, true
}

// SetFileOwner sets field value
func (o *ServiceResourceRequest) SetFileOwner(v string) {
	o.FileOwner = v
}

func (o ServiceResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceResourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["content_type"] = o.ContentType
	toSerialize["file_group"] = o.FileGroup
	toSerialize["file_mode"] = o.FileMode
	toSerialize["file_owner"] = o.FileOwner
	return toSerialize, nil
}

func (o *ServiceResourceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"content_type",
		"file_group",
		"file_mode",
		"file_owner",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceResourceRequest := _ServiceResourceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceResourceRequest)

	if err != nil {
		return err
	}

	*o = ServiceResourceRequest(varServiceResourceRequest)

	return err
}

type NullableServiceResourceRequest struct {
	value *ServiceResourceRequest
	isSet bool
}

func (v NullableServiceResourceRequest) Get() *ServiceResourceRequest {
	return v.value
}

func (v *NullableServiceResourceRequest) Set(val *ServiceResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceResourceRequest(val *ServiceResourceRequest) *NullableServiceResourceRequest {
	return &NullableServiceResourceRequest{value: val, isSet: true}
}

func (v NullableServiceResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


