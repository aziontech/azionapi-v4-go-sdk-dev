/*
Orchestrator

Testing OrchestratorEdgeNodeGroupsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package orchestratorapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_orchestratorapi_OrchestratorEdgeNodeGroupsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OrchestratorEdgeNodeGroupsAPIService BindEdgeNodeGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nodeId int64

		resp, httpRes, err := apiClient.OrchestratorEdgeNodeGroupsAPI.BindEdgeNodeGroup(context.Background(), nodeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrchestratorEdgeNodeGroupsAPIService CreateEdgeNodeGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.OrchestratorEdgeNodeGroupsAPI.CreateEdgeNodeGroup(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrchestratorEdgeNodeGroupsAPIService ListEdgeNodeGroups", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.OrchestratorEdgeNodeGroupsAPI.ListEdgeNodeGroups(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrchestratorEdgeNodeGroupsAPIService ListEdgeNodeGroupsByID", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nodeId int64

		resp, httpRes, err := apiClient.OrchestratorEdgeNodeGroupsAPI.ListEdgeNodeGroupsByID(context.Background(), nodeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OrchestratorEdgeNodeGroupsAPIService RemoveEdgeNodeGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var groupId int64

		httpRes, err := apiClient.OrchestratorEdgeNodeGroupsAPI.RemoveEdgeNodeGroup(context.Background(), groupId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
