openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the tls-api
  title: tls-api
  version: 1.0.0
servers:
- url: /
paths:
  /digital_certificates/certificates:
    get:
      description: List all certificates owned by your account.
      operationId: list certificates
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, certificate, issuer, validity, subject_name, type, managed, status, status_detail, csr, key_algorithm, challenge, authority, active, product_version, last_editor, last_modified, renewed_at)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCertificateList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List certificates
      tags:
      - Digital Certificates - Certificates
    post:
      description: Create a new certificate for your account.
      operationId: create certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCertificate"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificate"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a certificate
      tags:
      - Digital Certificates - Certificates
  /digital_certificates/certificates/{id}:
    delete:
      description: Destruction of a specific certificate in your account.
      operationId: destroy certificate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[1-9][0-9]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteCertificate"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCertificate"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a certificate
      tags:
      - Digital Certificates - Certificates
    get:
      description: Retrieve details from a specific certificate in your account.
      operationId: retrive certificate
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[1-9][0-9]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCertificate"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a certificate
      tags:
      - Digital Certificates - Certificates
    patch:
      description: Update one or more fields of an existing certificate without affecting
        other fields.
      operationId: partial update certificate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[1-9][0-9]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCertificateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificate"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCertificate"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificate"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a certificate
      tags:
      - Digital Certificates - Certificates
    put:
      description: Update an existing certificate. This replaces the entire certificate
        with the new data provided.
      operationId: update certificate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[1-9][0-9]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificate"
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBadRequestCertificate"
          description: Bad Request
        "404":
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Too Many Requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultErrorResponse"
          description: Forbidden
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificate"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a certificate
      tags:
      - Digital Certificates - Certificates
  /digital_certificates/certificates/request:
    post:
      description: Request a new certificate for your account.
      operationId: request a certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRequestRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCertificate"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Request a certificate
      tags:
      - Digital Certificates - Request a Certificate
  /digital_certificates/crls:
    get:
      description: List all certificate revocation lists (CRL) owned by your account.
      operationId: list certificate revocation lists (CRL)
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: name, active, last_editor, last_modified, product_version, issuer, last_update, next_update, crl)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCertificateRevocationListList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
    post:
      description: Create a new certificate revocation lists (CRL) for your account.
      operationId: create certificate revocation lists (CRL)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRevocationListRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCertificateRevocationList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificateRevocationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
  /digital_certificates/crls/{id}:
    delete:
      description: Destruction of a specific certificate revocation lists (CRL) in
        your account.
      operationId: destroy certificate revocation lists (CRL)
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteCertificateRevocationList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteCertificateRevocationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
    get:
      description: Retrieve details from a specific certificate revocation lists (CRL)
        in your account.
      operationId: retrive certificate revocation lists (CRL)
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveCertificateRevocationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
    patch:
      description: Update one or more fields of an existing certificate revocation
        lists (CRL) without affecting other fields.
      operationId: partial update certificate revocation lists (CRL)
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCertificateRevocationListRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCertificateRevocationList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificateRevocationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
    put:
      description: Update an existing certificate revocation lists (CRL).  This replaces
        the entire certificate with the new data provided.
      operationId: update certificate revocation lists (CRL)
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRevocationListRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCertificateRevocationList"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncCertificateRevocationList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a certificate revocation lists (CRL)
      tags:
      - Digital Certificates - Certificate Revocation Lists
  /digital_certificates/csr:
    post:
      description: Create a new certificate signing request (CSR) for your account.
      operationId: create certificate signing request (CSR)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateSigningRequestRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCertificate"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a certificate signing request (CSR)
      tags:
      - Digital Certificates - Certificate Signing Requests
components:
  schemas:
    AuthorityEnum:
      description: '* `lets_encrypt` - lets_encrypt'
      title: AuthorityEnum
      type: string
    Certificate:
      additionalProperties: false
      example:
        product_version: product_version
        csr: csr
        last_editor: last_editor
        certificate: certificate
        active: true
        key_algorithm: key_algorithm
        type: ""
        issuer: issuer
        status_detail: status_detail
        managed: true
        authority: null
        name: name
        subject_name:
        - subject_name
        - subject_name
        challenge: null
        id: 0
        validity: validity
        last_modified: 2000-01-23T04:56:07.000+00:00
        status: ""
        renewed_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        certificate:
          maxLength: 600000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        issuer:
          nullable: true
          pattern: .*
          readOnly: true
          type: string
        subject_name:
          items:
            type: string
          readOnly: true
          type: array
        validity:
          nullable: true
          readOnly: true
          type: string
        type:
          allOf:
          - $ref: "#/components/schemas/TypeEnum"
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        managed:
          readOnly: true
          type: boolean
        status:
          allOf:
          - $ref: "#/components/schemas/StatusEnum"
          readOnly: true
        status_detail:
          maxLength: 500
          minLength: 0
          pattern: .*
          readOnly: true
          type: string
        csr:
          nullable: true
          pattern: .*
          readOnly: true
          type: string
        challenge:
          $ref: "#/components/schemas/Certificate_challenge"
        authority:
          $ref: "#/components/schemas/Certificate_authority"
        key_algorithm:
          pattern: .*
          readOnly: true
          type: string
        active:
          type: boolean
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        last_editor:
          readOnly: true
          type: string
        last_modified:
          description: Timestamp of the last modification made to the certificate
            content on the platform.
          format: date-time
          readOnly: true
          type: string
        renewed_at:
          description: Timestamp indicating when the managed certificate was renewed
            on our platform.
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - authority
      - challenge
      - csr
      - id
      - issuer
      - key_algorithm
      - last_editor
      - last_modified
      - managed
      - name
      - product_version
      - renewed_at
      - status
      - status_detail
      - subject_name
      - validity
      title: Certificate
      type: object
    CertificateRequest:
      additionalProperties: false
      example:
        name: name
        certificate: certificate
        active: true
        private_key: private_key
        type: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        certificate:
          maxLength: 600000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        private_key:
          maxLength: 64000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
          writeOnly: true
        type:
          allOf:
          - $ref: "#/components/schemas/TypeEnum"
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        active:
          type: boolean
      required:
      - name
      title: CertificateRequest
      type: object
    CertificateRequestRequest:
      additionalProperties: false
      example:
        source_certificate: 171976545
        authority: authority
        name: name
        certificate: certificate
        challenge: challenge
        active: true
        private_key: private_key
        key_algorithm: ""
        type: ""
        common_name: common_name
        alternative_names:
        - alternative_names
        - alternative_names
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        certificate:
          maxLength: 600000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        private_key:
          maxLength: 64000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
          writeOnly: true
        type:
          allOf:
          - $ref: "#/components/schemas/TypeEnum"
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        challenge:
          description: |-
            * `dns` - Uses DNS to solve the ACME challenge.
            * `http` - Uses HTTP to solve the ACME challenge.
          title: ChallengeEnum
          type: string
        authority:
          description: '* `lets_encrypt` - lets_encrypt'
          title: AuthorityEnum
          type: string
        key_algorithm:
          allOf:
          - $ref: "#/components/schemas/KeyAlgorithmEnum"
        active:
          type: boolean
        common_name:
          maxLength: 64
          minLength: 1
          pattern: "^(((\\*\\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$"
          type: string
          writeOnly: true
        alternative_names:
          items:
            maxLength: 250
            minLength: 1
            pattern: "^(((\\*\\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\\
              .)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$"
            type: string
          type: array
          writeOnly: true
        source_certificate:
          format: int64
          maximum: 2147483647
          minimum: 1
          nullable: true
          type: integer
          writeOnly: true
      required:
      - authority
      - challenge
      - common_name
      - name
      title: CertificateRequestRequest
      type: object
    CertificateRevocationList:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        last_update: 2000-01-23T04:56:07.000+00:00
        name: name
        active: true
        id: 0
        crl: crl
        last_modified: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        next_update: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        active:
          description: Indicates if the certificate revocation list is active. This
            field cannot be set to false.
          type: boolean
        last_editor:
          readOnly: true
          type: string
        last_modified:
          description: Timestamp of the last modification made to the certificate
            content on the platform.
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 50
          minLength: 3
          pattern: \d+\.\d+
          readOnly: true
          type: string
        issuer:
          minLength: 1
          readOnly: true
          type: string
        last_update:
          description: Timestamp of the last update issued by the certification revocation
            list issuer.
          format: date-time
          readOnly: true
          type: string
        next_update:
          description: Timestamp of the next scheduled update from the certification
            revocation list issuer.
          format: date-time
          readOnly: true
          type: string
        crl:
          maxLength: 30720000
          minLength: 1
          pattern: .*
          type: string
      required:
      - crl
      - id
      - issuer
      - last_editor
      - last_modified
      - last_update
      - name
      - next_update
      - product_version
      title: CertificateRevocationList
      type: object
    CertificateRevocationListRequest:
      additionalProperties: false
      example:
        name: name
        active: true
        crl: crl
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        active:
          description: Indicates if the certificate revocation list is active. This
            field cannot be set to false.
          type: boolean
        crl:
          maxLength: 30720000
          minLength: 1
          pattern: .*
          type: string
      required:
      - crl
      - name
      title: CertificateRevocationListRequest
      type: object
    CertificateSigningRequestRequest:
      additionalProperties: false
      example:
        country: country
        certificate: certificate
        locality: locality
        active: true
        private_key: private_key
        key_algorithm: ""
        type: ""
        alternative_names:
        - alternative_names
        - alternative_names
        organization_unity: organization_unity
        organization: organization
        name: name
        state: state
        common_name: common_name
        email: email
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        certificate:
          maxLength: 600000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        private_key:
          maxLength: 64000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
          writeOnly: true
        type:
          allOf:
          - $ref: "#/components/schemas/TypeEnum"
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        key_algorithm:
          allOf:
          - $ref: "#/components/schemas/KeyAlgorithmEnum"
        active:
          type: boolean
        common_name:
          maxLength: 250
          minLength: 1
          pattern: "^(((\\*\\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$"
          type: string
          writeOnly: true
        alternative_names:
          items:
            maxLength: 250
            minLength: 1
            pattern: "^(((\\*\\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\\
              .)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$"
            type: string
          type: array
          writeOnly: true
        country:
          maxLength: 2
          minLength: 2
          pattern: "[a-zA-Z]{2}"
          type: string
          writeOnly: true
        state:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
          writeOnly: true
        locality:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
          writeOnly: true
        organization:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
          writeOnly: true
        organization_unity:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
          writeOnly: true
        email:
          format: email
          minLength: 1
          type: string
          writeOnly: true
      required:
      - common_name
      - country
      - email
      - locality
      - name
      - organization
      - organization_unity
      - state
      title: CertificateSigningRequestRequest
      type: object
    ChallengeEnum:
      description: |-
        * `dns` - Uses DNS to solve the ACME challenge.
        * `http` - Uses HTTP to solve the ACME challenge.
      title: ChallengeEnum
      type: string
    DefaultErrorResponse:
      additionalProperties: false
      example:
        detail: detail
      properties:
        detail:
          maxLength: 4096
          minLength: 1
          pattern: .*
          type: string
      title: DefaultErrorResponse
      type: object
    JSONAPIErrorObject:
      additionalProperties: false
      description: Serializer for a single JSON:API error object.
      example:
        code: code
        meta: ""
        detail: detail
        source: ""
        title: title
        status: status
      properties:
        status:
          description: The HTTP status code applicable to this problem
          maxLength: 3
          minLength: 3
          pattern: "^\\d{3}$"
          type: string
        code:
          description: An application-specific error code
          maxLength: 5
          minLength: 5
          pattern: "^\\d{5}$"
          type: string
        title:
          description: "A short, human-readable summary of the problem"
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        source:
          allOf:
          - $ref: "#/components/schemas/JSONAPIErrorSource"
          description: References to the primary source of the error
        meta:
          description: Non-standard meta-information about the error
      title: JSONAPIErrorObject
      type: object
    JSONAPIErrorResponse:
      additionalProperties: false
      description: Serializer for a JSON:API error response.
      example:
        errors:
        - code: code
          meta: ""
          detail: detail
          source: ""
          title: title
          status: status
        - code: code
          meta: ""
          detail: detail
          source: ""
          title: title
          status: status
      properties:
        errors:
          description: Array of error objects
          items:
            $ref: "#/components/schemas/JSONAPIErrorObject"
          type: array
      required:
      - errors
      title: JSONAPIErrorResponse
      type: object
    JSONAPIErrorSource:
      additionalProperties: false
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          description: JSON Pointer to the value in the request document that caused
            the error
          maxLength: 4096
          minLength: 1
          pattern: "^(/[^/]+)+$"
          type: string
        parameter:
          description: URI query parameter that caused the error
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        header:
          description: Request header name that caused the error
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
      title: JSONAPIErrorSource
      type: object
    KeyAlgorithmEnum:
      description: |-
        * `rsa_2048` - 2048-bit RSA
        * `rsa_4096` - 4096-bit RSA
        * `ecc_384` - 384-bit Prime Field Curve
      title: KeyAlgorithmEnum
      type: string
    NullEnum:
      additionalProperties: false
      title: NullEnum
      type: object
    PaginatedCertificateList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          csr: csr
          last_editor: last_editor
          certificate: certificate
          active: true
          key_algorithm: key_algorithm
          type: ""
          issuer: issuer
          status_detail: status_detail
          managed: true
          authority: null
          name: name
          subject_name:
          - subject_name
          - subject_name
          challenge: null
          id: 0
          validity: validity
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
          renewed_at: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          csr: csr
          last_editor: last_editor
          certificate: certificate
          active: true
          key_algorithm: key_algorithm
          type: ""
          issuer: issuer
          status_detail: status_detail
          managed: true
          authority: null
          name: name
          subject_name:
          - subject_name
          - subject_name
          challenge: null
          id: 0
          validity: validity
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
          renewed_at: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
      title: PaginatedCertificateList
      type: object
    PaginatedCertificateRevocationListList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          last_update: 2000-01-23T04:56:07.000+00:00
          name: name
          active: true
          id: 0
          crl: crl
          last_modified: 2000-01-23T04:56:07.000+00:00
          issuer: issuer
          next_update: 2000-01-23T04:56:07.000+00:00
        - product_version: product_version
          last_editor: last_editor
          last_update: 2000-01-23T04:56:07.000+00:00
          name: name
          active: true
          id: 0
          crl: crl
          last_modified: 2000-01-23T04:56:07.000+00:00
          issuer: issuer
          next_update: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/CertificateRevocationList"
          type: array
      title: PaginatedCertificateRevocationListList
      type: object
    PatchedCertificateRequest:
      additionalProperties: false
      example:
        name: name
        certificate: certificate
        active: true
        private_key: private_key
        type: ""
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        certificate:
          maxLength: 600000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
        private_key:
          maxLength: 64000
          minLength: 1
          nullable: true
          pattern: .*
          type: string
          writeOnly: true
        type:
          allOf:
          - $ref: "#/components/schemas/TypeEnum"
          description: |-
            The value can't be changed after the certificate creation.

            * `edge_certificate` - Edge Certificate
            * `trusted_ca_certificate` - Trusted CA Certificate
        active:
          type: boolean
      title: PatchedCertificateRequest
      type: object
    PatchedCertificateRevocationListRequest:
      additionalProperties: false
      example:
        name: name
        active: true
        crl: crl
      properties:
        name:
          maxLength: 250
          minLength: 1
          pattern: .*
          type: string
        active:
          description: Indicates if the certificate revocation list is active. This
            field cannot be set to false.
          type: boolean
        crl:
          maxLength: 30720000
          minLength: 1
          pattern: .*
          type: string
      title: PatchedCertificateRevocationListRequest
      type: object
    ResponseAsyncCertificate:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          csr: csr
          last_editor: last_editor
          certificate: certificate
          active: true
          key_algorithm: key_algorithm
          type: ""
          issuer: issuer
          status_detail: status_detail
          managed: true
          authority: null
          name: name
          subject_name:
          - subject_name
          - subject_name
          challenge: null
          id: 0
          validity: validity
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
          renewed_at: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/Certificate"
      required:
      - data
      title: ResponseAsyncCertificate
      type: object
    ResponseAsyncCertificateRevocationList:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          last_update: 2000-01-23T04:56:07.000+00:00
          name: name
          active: true
          id: 0
          crl: crl
          last_modified: 2000-01-23T04:56:07.000+00:00
          issuer: issuer
          next_update: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/CertificateRevocationList"
      required:
      - data
      title: ResponseAsyncCertificateRevocationList
      type: object
    ResponseAsyncDeleteCertificate:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteCertificate
      type: object
    ResponseAsyncDeleteCertificateRevocationList:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteCertificateRevocationList
      type: object
    ResponseBadRequestCertificate:
      additionalProperties: false
      example:
        product_version:
        - product_version
        - product_version
        csr:
        - csr
        - csr
        last_editor:
        - last_editor
        - last_editor
        certificate:
        - certificate
        - certificate
        active:
        - active
        - active
        private_key:
        - private_key
        - private_key
        key_algorithm:
        - key_algorithm
        - key_algorithm
        type:
        - type
        - type
        issuer:
        - issuer
        - issuer
        status_detail:
        - status_detail
        - status_detail
        managed:
        - managed
        - managed
        authority:
        - authority
        - authority
        name:
        - name
        - name
        subject_name:
        - ResponseBadRequestCertificate_subject_name
        - ResponseBadRequestCertificate_subject_name
        challenge:
        - challenge
        - challenge
        id:
        - id
        - id
        validity:
        - validity
        - validity
        detail: detail
        last_modified:
        - last_modified
        - last_modified
        status:
        - status
        - status
        renewed_at:
        - renewed_at
        - renewed_at
      properties:
        id:
          items:
            type: string
          type: array
        name:
          items:
            type: string
          type: array
        certificate:
          items:
            type: string
          type: array
        private_key:
          items:
            type: string
          type: array
        issuer:
          items:
            type: string
          type: array
        validity:
          items:
            type: string
          type: array
        subject_name:
          $ref: "#/components/schemas/ResponseBadRequestCertificate_subject_name"
        type:
          items:
            type: string
          type: array
        managed:
          items:
            type: string
          type: array
        status:
          items:
            type: string
          type: array
        status_detail:
          items:
            type: string
          type: array
        csr:
          items:
            type: string
          type: array
        key_algorithm:
          items:
            type: string
          type: array
        challenge:
          items:
            type: string
          type: array
        authority:
          items:
            type: string
          type: array
        active:
          items:
            type: string
          type: array
        product_version:
          items:
            type: string
          type: array
        last_editor:
          items:
            type: string
          type: array
        last_modified:
          items:
            type: string
          type: array
        renewed_at:
          items:
            type: string
          type: array
        detail:
          maxLength: 4096
          minLength: 1
          pattern: .*
          type: string
      title: ResponseBadRequestCertificate
      type: object
    ResponseCertificate:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          csr: csr
          last_editor: last_editor
          certificate: certificate
          active: true
          key_algorithm: key_algorithm
          type: ""
          issuer: issuer
          status_detail: status_detail
          managed: true
          authority: null
          name: name
          subject_name:
          - subject_name
          - subject_name
          challenge: null
          id: 0
          validity: validity
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
          renewed_at: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/Certificate"
      required:
      - data
      title: ResponseCertificate
      type: object
    ResponseCertificateRevocationList:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          last_update: 2000-01-23T04:56:07.000+00:00
          name: name
          active: true
          id: 0
          crl: crl
          last_modified: 2000-01-23T04:56:07.000+00:00
          issuer: issuer
          next_update: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/CertificateRevocationList"
      required:
      - data
      title: ResponseCertificateRevocationList
      type: object
    ResponseDeleteCertificate:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteCertificate
      type: object
    ResponseDeleteCertificateRevocationList:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteCertificateRevocationList
      type: object
    ResponseRetrieveCertificate:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          csr: csr
          last_editor: last_editor
          certificate: certificate
          active: true
          key_algorithm: key_algorithm
          type: ""
          issuer: issuer
          status_detail: status_detail
          managed: true
          authority: null
          name: name
          subject_name:
          - subject_name
          - subject_name
          challenge: null
          id: 0
          validity: validity
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
          renewed_at: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/Certificate"
      required:
      - data
      title: ResponseRetrieveCertificate
      type: object
    ResponseRetrieveCertificateRevocationList:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          last_update: 2000-01-23T04:56:07.000+00:00
          name: name
          active: true
          id: 0
          crl: crl
          last_modified: 2000-01-23T04:56:07.000+00:00
          issuer: issuer
          next_update: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/CertificateRevocationList"
      required:
      - data
      title: ResponseRetrieveCertificateRevocationList
      type: object
    StatusEnum:
      description: |-
        * `challenge_verification` - Challenge Verification
        * `active` - Active
        * `pending` - Pending
        * `failed` - Failed
      title: StatusEnum
      type: string
    TypeEnum:
      description: |-
        * `edge_certificate` - Edge Certificate
        * `trusted_ca_certificate` - Trusted CA Certificate
      title: TypeEnum
      type: string
    Certificate_challenge:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/ChallengeEnum"
      - $ref: "#/components/schemas/NullEnum"
      readOnly: true
    Certificate_authority:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/AuthorityEnum"
      - $ref: "#/components/schemas/NullEnum"
      readOnly: true
    ResponseBadRequestCertificate_subject_name:
      oneOf:
      - items:
          type: string
        type: array
      - additionalProperties:
          items:
            type: string
          type: array
        type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    TokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
