/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BigQueryEndpointRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BigQueryEndpointRequest{}

// BigQueryEndpointRequest struct for BigQueryEndpointRequest
type BigQueryEndpointRequest struct {
	DatasetId string `json:"dataset_id"`
	ProjectId string `json:"project_id"`
	TableId string `json:"table_id"`
	ServiceAccountKey string `json:"service_account_key"`
}

type _BigQueryEndpointRequest BigQueryEndpointRequest

// NewBigQueryEndpointRequest instantiates a new BigQueryEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBigQueryEndpointRequest(datasetId string, projectId string, tableId string, serviceAccountKey string) *BigQueryEndpointRequest {
	this := BigQueryEndpointRequest{}
	this.DatasetId = datasetId
	this.ProjectId = projectId
	this.TableId = tableId
	this.ServiceAccountKey = serviceAccountKey
	return &this
}

// NewBigQueryEndpointRequestWithDefaults instantiates a new BigQueryEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBigQueryEndpointRequestWithDefaults() *BigQueryEndpointRequest {
	this := BigQueryEndpointRequest{}
	return &this
}

// GetDatasetId returns the DatasetId field value
func (o *BigQueryEndpointRequest) GetDatasetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field value
// and a boolean to check if the value has been set.
func (o *BigQueryEndpointRequest) GetDatasetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatasetId, true
}

// SetDatasetId sets field value
func (o *BigQueryEndpointRequest) SetDatasetId(v string) {
	o.DatasetId = v
}

// GetProjectId returns the ProjectId field value
func (o *BigQueryEndpointRequest) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *BigQueryEndpointRequest) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *BigQueryEndpointRequest) SetProjectId(v string) {
	o.ProjectId = v
}

// GetTableId returns the TableId field value
func (o *BigQueryEndpointRequest) GetTableId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TableId
}

// GetTableIdOk returns a tuple with the TableId field value
// and a boolean to check if the value has been set.
func (o *BigQueryEndpointRequest) GetTableIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TableId, true
}

// SetTableId sets field value
func (o *BigQueryEndpointRequest) SetTableId(v string) {
	o.TableId = v
}

// GetServiceAccountKey returns the ServiceAccountKey field value
func (o *BigQueryEndpointRequest) GetServiceAccountKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccountKey
}

// GetServiceAccountKeyOk returns a tuple with the ServiceAccountKey field value
// and a boolean to check if the value has been set.
func (o *BigQueryEndpointRequest) GetServiceAccountKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccountKey, true
}

// SetServiceAccountKey sets field value
func (o *BigQueryEndpointRequest) SetServiceAccountKey(v string) {
	o.ServiceAccountKey = v
}

func (o BigQueryEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BigQueryEndpointRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dataset_id"] = o.DatasetId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["table_id"] = o.TableId
	toSerialize["service_account_key"] = o.ServiceAccountKey
	return toSerialize, nil
}

func (o *BigQueryEndpointRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dataset_id",
		"project_id",
		"table_id",
		"service_account_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBigQueryEndpointRequest := _BigQueryEndpointRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBigQueryEndpointRequest)

	if err != nil {
		return err
	}

	*o = BigQueryEndpointRequest(varBigQueryEndpointRequest)

	return err
}

type NullableBigQueryEndpointRequest struct {
	value *BigQueryEndpointRequest
	isSet bool
}

func (v NullableBigQueryEndpointRequest) Get() *BigQueryEndpointRequest {
	return v.value
}

func (v *NullableBigQueryEndpointRequest) Set(val *BigQueryEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBigQueryEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBigQueryEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBigQueryEndpointRequest(val *BigQueryEndpointRequest) *NullableBigQueryEndpointRequest {
	return &NullableBigQueryEndpointRequest{value: val, isSet: true}
}

func (v NullableBigQueryEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBigQueryEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


