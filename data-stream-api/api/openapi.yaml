openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the Data Stream
  title: data-stream-api
  version: 1.0.0
servers:
- url: /
paths:
  /data_stream/data_sources:
    get:
      description: List all Data Sources.
      operationId: list_data_sources
      parameters:
      - explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseListDataSourceList"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List of Data Sources
      tags:
      - Data Stream - Data Sources
  /data_stream/streams:
    get:
      description: List all Data Streams owned by your account.
      operationId: list_data_streams
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseListDataStreamList"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Data Streams
      tags:
      - Data Stream - Streams
    post:
      description: Create a new Data Stream in your account.
      operationId: create_data_stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStreamRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDataStream"
          description: Created
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDataStream"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Data Stream
      tags:
      - Data Stream - Streams
  /data_stream/streams/{id}:
    delete:
      description: Destruction of a specific Data Stream in your account.
      operationId: destroy_data_stream
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteDataStream"
          description: Ok
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteDataStream"
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Data Stream
      tags:
      - Data Stream - Streams
    get:
      description: Retrieve details from a specific Data Stream in your account.
      operationId: retrieve_data_stream
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveDataStream"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Data Stream
      tags:
      - Data Stream - Streams
    patch:
      description: Update one or more fields of an existing Data Stream.
      operationId: partial_update_data_stream
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedDataStreamRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDataStream"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDataStream"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Data Stream
      tags:
      - Data Stream - Streams
    put:
      description: Update an existing Data Stream.
      operationId: update_data_stream
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStreamRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDataStream"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDataStream"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Data Stream
      tags:
      - Data Stream - Streams
  /data_stream/templates:
    get:
      description: List all Templates owned by your account.
      operationId: list_templates
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedResponseListTemplateList"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List Templates
      tags:
      - Data Stream - Templates
    post:
      description: Create a new custom Template in your account.
      operationId: create_template
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTemplate"
          description: Created
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncTemplate"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a Template
      tags:
      - Data Stream - Templates
  /data_stream/templates/{id}:
    delete:
      description: Destruction of a specific custom Template in your account.
      operationId: destroy_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteTemplate"
          description: Ok
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteTemplate"
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a Template
      tags:
      - Data Stream - Templates
    get:
      description: Retrieve details from a specific Template in your account.
      operationId: retrieve_template
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveTemplate"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details of a Template
      tags:
      - Data Stream - Templates
    patch:
      description: Update one or more fields of an existing custom Template.
      operationId: partial_update_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedTemplateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTemplate"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncTemplate"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Partially update a Template
      tags:
      - Data Stream - Templates
    put:
      description: Update an existing custom Template.
      operationId: update_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTemplate"
          description: Ok
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncTemplate"
          description: Accepted
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Update a Template
      tags:
      - Data Stream - Templates
components:
  schemas:
    AWSKinesisFirehoseEndpoint:
      additionalProperties: false
      properties:
        access_key:
          maxLength: 150
          type: string
        stream_name:
          maxLength: 64
          type: string
        region:
          maxLength: 50
          type: string
        secret_key:
          maxLength: 150
          type: string
      required:
      - access_key
      - region
      - secret_key
      - stream_name
      title: AWSKinesisFirehoseEndpoint
      type: object
    AWSKinesisFirehoseEndpointRequest:
      additionalProperties: false
      properties:
        access_key:
          maxLength: 150
          minLength: 1
          type: string
        stream_name:
          maxLength: 64
          minLength: 1
          type: string
        region:
          maxLength: 50
          minLength: 1
          type: string
        secret_key:
          maxLength: 150
          minLength: 1
          type: string
      required:
      - access_key
      - region
      - secret_key
      - stream_name
      title: AWSKinesisFirehoseEndpointRequest
      type: object
    AzureBlobStorageEndpoint:
      additionalProperties: false
      properties:
        storage_account:
          maxLength: 100
          type: string
        container_name:
          maxLength: 150
          type: string
        blob_sas_token:
          maxLength: 250
          type: string
      required:
      - blob_sas_token
      - container_name
      - storage_account
      title: AzureBlobStorageEndpoint
      type: object
    AzureBlobStorageEndpointRequest:
      additionalProperties: false
      properties:
        storage_account:
          maxLength: 100
          minLength: 1
          type: string
        container_name:
          maxLength: 150
          minLength: 1
          type: string
        blob_sas_token:
          maxLength: 250
          minLength: 1
          type: string
      required:
      - blob_sas_token
      - container_name
      - storage_account
      title: AzureBlobStorageEndpointRequest
      type: object
    AzureMonitorEndpoint:
      additionalProperties: false
      properties:
        log_type:
          maxLength: 100
          type: string
        shared_key:
          maxLength: 150
          type: string
        time_generated_field:
          maxLength: 50
          nullable: true
          type: string
        workspace_id:
          maxLength: 150
          type: string
      required:
      - log_type
      - shared_key
      - workspace_id
      title: AzureMonitorEndpoint
      type: object
    AzureMonitorEndpointRequest:
      additionalProperties: false
      properties:
        log_type:
          maxLength: 100
          minLength: 1
          type: string
        shared_key:
          maxLength: 150
          minLength: 1
          type: string
        time_generated_field:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        workspace_id:
          maxLength: 150
          minLength: 1
          type: string
      required:
      - log_type
      - shared_key
      - workspace_id
      title: AzureMonitorEndpointRequest
      type: object
    BigQueryEndpoint:
      additionalProperties: false
      properties:
        dataset_id:
          maxLength: 1024
          type: string
        project_id:
          maxLength: 100
          type: string
        table_id:
          maxLength: 1024
          type: string
        service_account_key:
          type: string
      required:
      - dataset_id
      - project_id
      - service_account_key
      - table_id
      title: BigQueryEndpoint
      type: object
    BigQueryEndpointRequest:
      additionalProperties: false
      properties:
        dataset_id:
          maxLength: 1024
          minLength: 1
          type: string
        project_id:
          maxLength: 100
          minLength: 1
          type: string
        table_id:
          maxLength: 1024
          minLength: 1
          type: string
        service_account_key:
          minLength: 1
          type: string
      required:
      - dataset_id
      - project_id
      - service_account_key
      - table_id
      title: BigQueryEndpointRequest
      type: object
    ContentTypeEnum:
      description: |-
        * `plain/text` - plain/text
        * `application/gzip` - application/gzip
      title: ContentTypeEnum
      type: string
    DataSourceEnum:
      description: |-
        * `http` - Edge Applications
        * `waf` - WAF Events
        * `functions` - Edge Functions
        * `activity` - Activity History
      title: DataSourceEnum
      type: string
    DataStream:
      additionalProperties: false
      example:
        outputs:
        - attributes:
            headers:
              key: headers
            log_line_separator: log_line_separator
            payload_format: payload_format
            url: https://openapi-generator.tech
            max_size: 315634359
          type: type
        - attributes:
            headers:
              key: headers
            log_line_separator: log_line_separator
            payload_format: payload_format
            url: https://openapi-generator.tech
            max_size: 315634359
          type: type
        product_version: product_version
        transform:
        - attributes:
            rate: 60
          type: type
        - attributes:
            rate: 60
          type: type
        inputs:
        - attributes:
            data_source: data_source
          type: type
        - attributes:
            data_source: data_source
          type: type
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          pattern: .*
          type: string
        last_editor:
          maxLength: 100
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 100
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        active:
          type: boolean
        inputs:
          items:
            $ref: "#/components/schemas/Input"
          type: array
        transform:
          items:
            $ref: "#/components/schemas/Transform"
          type: array
        outputs:
          items:
            $ref: "#/components/schemas/Output"
          type: array
      required:
      - id
      - inputs
      - last_editor
      - last_modified
      - name
      - outputs
      - product_version
      - transform
      title: DataStream
      type: object
    DataStreamRequest:
      additionalProperties: false
      example:
        outputs:
        - attributes:
            headers:
              key: headers
            log_line_separator: log_line_separator
            payload_format: payload_format
            url: https://openapi-generator.tech
            max_size: 1294783612
          type: type
        - attributes:
            headers:
              key: headers
            log_line_separator: log_line_separator
            payload_format: payload_format
            url: https://openapi-generator.tech
            max_size: 1294783612
          type: type
        transform:
        - attributes:
            rate: 8
          type: type
        - attributes:
            rate: 8
          type: type
        inputs:
        - attributes:
            data_source: data_source
          type: type
        - attributes:
            data_source: data_source
          type: type
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        inputs:
          items:
            $ref: "#/components/schemas/InputRequest"
          type: array
        transform:
          items:
            $ref: "#/components/schemas/TransformRequest"
          type: array
        outputs:
          items:
            $ref: "#/components/schemas/OutputRequest"
          type: array
      required:
      - inputs
      - name
      - outputs
      - transform
      title: DataStreamRequest
      type: object
    DatadogEndpoint:
      additionalProperties: false
      properties:
        url:
          format: uri
          type: string
        api_key:
          maxLength: 255
          type: string
      required:
      - api_key
      - url
      title: DatadogEndpoint
      type: object
    DatadogEndpointRequest:
      additionalProperties: false
      properties:
        url:
          format: uri
          minLength: 1
          type: string
        api_key:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - api_key
      - url
      title: DatadogEndpointRequest
      type: object
    ElasticsearchEndpoint:
      additionalProperties: false
      properties:
        url:
          format: uri
          type: string
        api_key:
          maxLength: 255
          type: string
      required:
      - api_key
      - url
      title: ElasticsearchEndpoint
      type: object
    ElasticsearchEndpointRequest:
      additionalProperties: false
      properties:
        url:
          format: uri
          minLength: 1
          type: string
        api_key:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - api_key
      - url
      title: ElasticsearchEndpointRequest
      type: object
    HttpPostEndpoint:
      additionalProperties: false
      example:
        headers:
          key: headers
        log_line_separator: log_line_separator
        payload_format: payload_format
        url: https://openapi-generator.tech
        max_size: 315634359
      properties:
        url:
          format: uri
          type: string
        log_line_separator:
          maxLength: 100
          type: string
        payload_format:
          maxLength: 250
          type: string
        max_size:
          format: int64
          maximum: 2147483647
          minimum: 1000000
          nullable: true
          type: integer
        headers:
          additionalProperties:
            maxLength: 1024
            minLength: 1
            pattern: .*
            type: string
          type: object
      required:
      - headers
      - url
      title: HttpPostEndpoint
      type: object
    HttpPostEndpointRequest:
      additionalProperties: false
      example:
        headers:
          key: headers
        log_line_separator: log_line_separator
        payload_format: payload_format
        url: https://openapi-generator.tech
        max_size: 1294783612
      properties:
        url:
          format: uri
          minLength: 1
          type: string
        log_line_separator:
          maxLength: 100
          type: string
        payload_format:
          maxLength: 250
          minLength: 1
          type: string
        max_size:
          format: int64
          maximum: 2147483647
          minimum: 1000000
          nullable: true
          type: integer
        headers:
          additionalProperties:
            maxLength: 1024
            minLength: 1
            pattern: .*
            type: string
          type: object
      required:
      - headers
      - url
      title: HttpPostEndpointRequest
      type: object
    Input:
      additionalProperties: false
      example:
        attributes:
          data_source: data_source
        type: type
      properties:
        type:
          description: '* `raw_logs` - Raw Logs'
          title: InputTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/InputAttributesPolymorphicInputDataSource"
      required:
      - attributes
      - type
      title: Input
      type: object
    InputAttributesPolymorphic:
      $ref: "#/components/schemas/InputAttributesPolymorphicInputDataSource"
    InputAttributesPolymorphicInputDataSource:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/InputAttributesPolymorphicShared"
      - $ref: "#/components/schemas/InputDataSource"
      example:
        data_source: data_source
      title: InputAttributesPolymorphicInputDataSource
    InputAttributesPolymorphicInputDataSourceRequest:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/InputAttributesPolymorphicShared"
      - $ref: "#/components/schemas/InputDataSourceRequest"
      example:
        data_source: data_source
      title: InputAttributesPolymorphicInputDataSourceRequest
    InputAttributesPolymorphicRequest:
      $ref: "#/components/schemas/InputAttributesPolymorphicInputDataSourceRequest"
    InputAttributesPolymorphicShared:
      additionalProperties: false
      title: InputAttributesPolymorphicShared
      type: object
    InputDataSource:
      additionalProperties: false
      properties:
        data_source:
          description: |-
            * `http` - Edge Applications
            * `waf` - WAF Events
            * `functions` - Edge Functions
            * `activity` - Activity History
          title: DataSourceEnum
          type: string
      required:
      - data_source
      title: InputDataSource
      type: object
    InputDataSourceRequest:
      additionalProperties: false
      properties:
        data_source:
          description: |-
            * `http` - Edge Applications
            * `waf` - WAF Events
            * `functions` - Edge Functions
            * `activity` - Activity History
          title: DataSourceEnum
          type: string
      required:
      - data_source
      title: InputDataSourceRequest
      type: object
    InputRequest:
      additionalProperties: false
      example:
        attributes:
          data_source: data_source
        type: type
      properties:
        type:
          description: '* `raw_logs` - Raw Logs'
          title: InputTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/InputAttributesPolymorphicInputDataSourceRequest"
      required:
      - attributes
      - type
      title: InputRequest
      type: object
    InputTypeEnum:
      description: '* `raw_logs` - Raw Logs'
      title: InputTypeEnum
      type: string
    JSONAPIErrorObject:
      additionalProperties: false
      description: Serializer for a single JSON:API error object.
      example:
        code: code
        meta:
          key: ""
        detail: detail
        source: ""
        title: title
        status: status
      properties:
        status:
          description: The HTTP status code applicable to this problem
          maxLength: 3
          minLength: 3
          pattern: "^\\d{3}$"
          type: string
        code:
          description: An application-specific error code
          maxLength: 5
          minLength: 5
          pattern: "^\\d{5}$"
          type: string
        title:
          description: "A short, human-readable summary of the problem"
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        source:
          allOf:
          - $ref: "#/components/schemas/JSONAPIErrorSource"
          description: References to the primary source of the error
        meta:
          additionalProperties: {}
          description: Non-standard meta-information about the error
          type: object
      title: JSONAPIErrorObject
      type: object
    JSONAPIErrorResponse:
      additionalProperties: false
      description: Serializer for a JSON:API error response.
      example:
        errors:
        - code: code
          meta:
            key: ""
          detail: detail
          source: ""
          title: title
          status: status
        - code: code
          meta:
            key: ""
          detail: detail
          source: ""
          title: title
          status: status
      properties:
        errors:
          description: Array of error objects
          items:
            $ref: "#/components/schemas/JSONAPIErrorObject"
          type: array
      required:
      - errors
      title: JSONAPIErrorResponse
      type: object
    JSONAPIErrorSource:
      additionalProperties: false
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          description: JSON Pointer to the value in the request document that caused
            the error
          maxLength: 4096
          minLength: 1
          pattern: "^(/[^/]+)+$"
          type: string
        parameter:
          description: URI query parameter that caused the error
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
        header:
          description: Request header name that caused the error
          maxLength: 4096
          minLength: 1
          pattern: ^.*$
          type: string
      title: JSONAPIErrorSource
      type: object
    KafkaEndpoint:
      additionalProperties: false
      properties:
        bootstrap_servers:
          maxLength: 150
          type: string
        kafka_topic:
          maxLength: 150
          type: string
        use_tls:
          type: boolean
      required:
      - bootstrap_servers
      - kafka_topic
      - use_tls
      title: KafkaEndpoint
      type: object
    KafkaEndpointRequest:
      additionalProperties: false
      properties:
        bootstrap_servers:
          maxLength: 150
          minLength: 1
          type: string
        kafka_topic:
          maxLength: 150
          minLength: 1
          type: string
        use_tls:
          type: boolean
      required:
      - bootstrap_servers
      - kafka_topic
      - use_tls
      title: KafkaEndpointRequest
      type: object
    Output:
      additionalProperties: false
      example:
        attributes:
          headers:
            key: headers
          log_line_separator: log_line_separator
          payload_format: payload_format
          url: https://openapi-generator.tech
          max_size: 315634359
        type: type
      properties:
        type:
          description: |-
            * `standard` - Standard HTTP/HTTPS POST
            * `kafka` - Apache Kafka
            * `s3` - Simple Storage Service (S3)
            * `big_query` - Google BigQuery
            * `elasticsearch` - Elasticsearch
            * `splunk` - Splunk
            * `aws_kinesis_firehose` - AWS Kinesis Data Firehose
            * `datadog` - Datadog
            * `qradar` - IBM QRadar
            * `azure_monitor` - Azure Monitor
            * `azure_blob_storage` - Azure Blob Storage
          title: OutputTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/OutputPolymorphic"
      required:
      - attributes
      - type
      title: Output
      type: object
    OutputPolymorphic:
      additionalProperties: true
      discriminator:
        mapping:
          standard: "#/components/schemas/HttpPostEndpoint"
          kafka: "#/components/schemas/KafkaEndpoint"
          s3: "#/components/schemas/S3Endpoint"
          big_query: "#/components/schemas/BigQueryEndpoint"
          elasticsearch: "#/components/schemas/ElasticsearchEndpoint"
          aws_kinesis_firehose: "#/components/schemas/AWSKinesisFirehoseEndpoint"
          datadog: "#/components/schemas/DatadogEndpoint"
          qradar: "#/components/schemas/QRadarEndpoint"
          azure_monitor: "#/components/schemas/AzureMonitorEndpoint"
          azure_blob_storage: "#/components/schemas/AzureBlobStorageEndpoint"
          splunk: "#/components/schemas/SplunkEndpoint"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/HttpPostEndpoint"
      - $ref: "#/components/schemas/KafkaEndpoint"
      - $ref: "#/components/schemas/S3Endpoint"
      - $ref: "#/components/schemas/BigQueryEndpoint"
      - $ref: "#/components/schemas/ElasticsearchEndpoint"
      - $ref: "#/components/schemas/AWSKinesisFirehoseEndpoint"
      - $ref: "#/components/schemas/DatadogEndpoint"
      - $ref: "#/components/schemas/QRadarEndpoint"
      - $ref: "#/components/schemas/AzureMonitorEndpoint"
      - $ref: "#/components/schemas/AzureBlobStorageEndpoint"
      - $ref: "#/components/schemas/SplunkEndpoint"
      title: OutputPolymorphic
    OutputPolymorphicRequest:
      additionalProperties: true
      discriminator:
        mapping:
          standard: "#/components/schemas/HttpPostEndpointRequest"
          kafka: "#/components/schemas/KafkaEndpointRequest"
          s3: "#/components/schemas/S3EndpointRequest"
          big_query: "#/components/schemas/BigQueryEndpointRequest"
          elasticsearch: "#/components/schemas/ElasticsearchEndpointRequest"
          aws_kinesis_firehose: "#/components/schemas/AWSKinesisFirehoseEndpointRequest"
          datadog: "#/components/schemas/DatadogEndpointRequest"
          qradar: "#/components/schemas/QRadarEndpointRequest"
          azure_monitor: "#/components/schemas/AzureMonitorEndpointRequest"
          azure_blob_storage: "#/components/schemas/AzureBlobStorageEndpointRequest"
          splunk: "#/components/schemas/SplunkEndpointRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/HttpPostEndpointRequest"
      - $ref: "#/components/schemas/KafkaEndpointRequest"
      - $ref: "#/components/schemas/S3EndpointRequest"
      - $ref: "#/components/schemas/BigQueryEndpointRequest"
      - $ref: "#/components/schemas/ElasticsearchEndpointRequest"
      - $ref: "#/components/schemas/AWSKinesisFirehoseEndpointRequest"
      - $ref: "#/components/schemas/DatadogEndpointRequest"
      - $ref: "#/components/schemas/QRadarEndpointRequest"
      - $ref: "#/components/schemas/AzureMonitorEndpointRequest"
      - $ref: "#/components/schemas/AzureBlobStorageEndpointRequest"
      - $ref: "#/components/schemas/SplunkEndpointRequest"
      title: OutputPolymorphicRequest
    OutputRequest:
      additionalProperties: false
      example:
        attributes:
          headers:
            key: headers
          log_line_separator: log_line_separator
          payload_format: payload_format
          url: https://openapi-generator.tech
          max_size: 1294783612
        type: type
      properties:
        type:
          description: |-
            * `standard` - Standard HTTP/HTTPS POST
            * `kafka` - Apache Kafka
            * `s3` - Simple Storage Service (S3)
            * `big_query` - Google BigQuery
            * `elasticsearch` - Elasticsearch
            * `splunk` - Splunk
            * `aws_kinesis_firehose` - AWS Kinesis Data Firehose
            * `datadog` - Datadog
            * `qradar` - IBM QRadar
            * `azure_monitor` - Azure Monitor
            * `azure_blob_storage` - Azure Blob Storage
          title: OutputTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/OutputPolymorphicRequest"
      required:
      - attributes
      - type
      title: OutputRequest
      type: object
    OutputTypeEnum:
      description: |-
        * `standard` - Standard HTTP/HTTPS POST
        * `kafka` - Apache Kafka
        * `s3` - Simple Storage Service (S3)
        * `big_query` - Google BigQuery
        * `elasticsearch` - Elasticsearch
        * `splunk` - Splunk
        * `aws_kinesis_firehose` - AWS Kinesis Data Firehose
        * `datadog` - Datadog
        * `qradar` - IBM QRadar
        * `azure_monitor` - Azure Monitor
        * `azure_blob_storage` - Azure Blob Storage
      title: OutputTypeEnum
      type: string
    PaginatedResponseListDataSourceList:
      additionalProperties: false
      example:
        count: 123
        results:
        - name: name
          active: true
          slug: slug
        - name: name
          active: true
          slug: slug
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ResponseListDataSource"
          type: array
      title: PaginatedResponseListDataSourceList
      type: object
    PaginatedResponseListDataStreamList:
      additionalProperties: false
      example:
        count: 123
        results:
        - outputs:
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          product_version: product_version
          transform:
          - attributes:
              rate: 60
            type: type
          - attributes:
              rate: 60
            type: type
          inputs:
          - attributes:
              data_source: data_source
            type: type
          - attributes:
              data_source: data_source
            type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - outputs:
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          product_version: product_version
          transform:
          - attributes:
              rate: 60
            type: type
          - attributes:
              rate: 60
            type: type
          inputs:
          - attributes:
              data_source: data_source
            type: type
          - attributes:
              data_source: data_source
            type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ResponseListDataStream"
          type: array
      title: PaginatedResponseListDataStreamList
      type: object
    PaginatedResponseListTemplateList:
      additionalProperties: false
      example:
        count: 123
        results:
        - last_editor: last_editor
          custom: true
          name: name
          active: true
          data_set: data_set
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        - last_editor: last_editor
          custom: true
          name: name
          active: true
          data_set: data_set
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/ResponseListTemplate"
          type: array
      title: PaginatedResponseListTemplateList
      type: object
    PatchedDataStreamRequest:
      additionalProperties: false
      example:
        transform:
        - attributes:
            rate: 8
          type: type
        - attributes:
            rate: 8
          type: type
        inputs:
        - attributes:
            data_source: data_source
          type: type
        - attributes:
            data_source: data_source
          type: type
        name: name
        active: true
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        inputs:
          items:
            $ref: "#/components/schemas/InputRequest"
          type: array
        transform:
          items:
            $ref: "#/components/schemas/TransformRequest"
          type: array
      title: PatchedDataStreamRequest
      type: object
    PatchedTemplateRequest:
      additionalProperties: false
      example:
        name: name
        active: true
        data_set: data_set
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        data_set:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
      title: PatchedTemplateRequest
      type: object
    QRadarEndpoint:
      additionalProperties: false
      properties:
        url:
          format: uri
          type: string
      required:
      - url
      title: QRadarEndpoint
      type: object
    QRadarEndpointRequest:
      additionalProperties: false
      properties:
        url:
          format: uri
          minLength: 1
          type: string
      required:
      - url
      title: QRadarEndpointRequest
      type: object
    ResponseAsyncDataStream:
      additionalProperties: false
      example:
        data:
          outputs:
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          product_version: product_version
          transform:
          - attributes:
              rate: 60
            type: type
          - attributes:
              rate: 60
            type: type
          inputs:
          - attributes:
              data_source: data_source
            type: type
          - attributes:
              data_source: data_source
            type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/DataStream"
      required:
      - data
      title: ResponseAsyncDataStream
      type: object
    ResponseAsyncDeleteDataStream:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteDataStream
      type: object
    ResponseAsyncDeleteTemplate:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseAsyncDeleteTemplate
      type: object
    ResponseAsyncTemplate:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          custom: true
          name: name
          active: true
          data_set: data_set
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/Template"
      required:
      - data
      title: ResponseAsyncTemplate
      type: object
    ResponseDataStream:
      additionalProperties: false
      example:
        data:
          outputs:
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          product_version: product_version
          transform:
          - attributes:
              rate: 60
            type: type
          - attributes:
              rate: 60
            type: type
          inputs:
          - attributes:
              data_source: data_source
            type: type
          - attributes:
              data_source: data_source
            type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/DataStream"
      required:
      - data
      title: ResponseDataStream
      type: object
    ResponseDeleteDataStream:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteDataStream
      type: object
    ResponseDeleteTemplate:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
      title: ResponseDeleteTemplate
      type: object
    ResponseListDataSource:
      additionalProperties: false
      example:
        name: name
        active: true
        slug: slug
      properties:
        slug:
          pattern: "^[-a-zA-Z0-9_]+$"
          readOnly: true
          type: string
        name:
          readOnly: true
          title: DataSource Name
          type: string
        active:
          readOnly: true
          title: Is Active
          type: boolean
      required:
      - active
      - name
      - slug
      title: ResponseListDataSource
      type: object
    ResponseListDataStream:
      additionalProperties: false
      example:
        outputs:
        - attributes:
            headers:
              key: headers
            log_line_separator: log_line_separator
            payload_format: payload_format
            url: https://openapi-generator.tech
            max_size: 315634359
          type: type
        - attributes:
            headers:
              key: headers
            log_line_separator: log_line_separator
            payload_format: payload_format
            url: https://openapi-generator.tech
            max_size: 315634359
          type: type
        product_version: product_version
        transform:
        - attributes:
            rate: 60
          type: type
        - attributes:
            rate: 60
          type: type
        inputs:
        - attributes:
            data_source: data_source
          type: type
        - attributes:
            data_source: data_source
          type: type
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          pattern: .*
          type: string
        last_editor:
          maxLength: 100
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        product_version:
          maxLength: 100
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        active:
          type: boolean
        inputs:
          items:
            $ref: "#/components/schemas/Input"
          type: array
        transform:
          items:
            $ref: "#/components/schemas/Transform"
          type: array
        outputs:
          items:
            $ref: "#/components/schemas/Output"
          type: array
      required:
      - id
      - inputs
      - last_editor
      - last_modified
      - name
      - outputs
      - product_version
      - transform
      title: ResponseListDataStream
      type: object
    ResponseListTemplate:
      additionalProperties: false
      example:
        last_editor: last_editor
        custom: true
        name: name
        active: true
        data_set: data_set
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 100
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        custom:
          readOnly: true
          type: boolean
        active:
          type: boolean
        data_set:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
      required:
      - custom
      - data_set
      - id
      - last_editor
      - last_modified
      - name
      title: ResponseListTemplate
      type: object
    ResponseRetrieveDataStream:
      additionalProperties: false
      example:
        data:
          outputs:
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          - attributes:
              headers:
                key: headers
              log_line_separator: log_line_separator
              payload_format: payload_format
              url: https://openapi-generator.tech
              max_size: 315634359
            type: type
          product_version: product_version
          transform:
          - attributes:
              rate: 60
            type: type
          - attributes:
              rate: 60
            type: type
          inputs:
          - attributes:
              data_source: data_source
            type: type
          - attributes:
              data_source: data_source
            type: type
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/DataStream"
      required:
      - data
      title: ResponseRetrieveDataStream
      type: object
    ResponseRetrieveTemplate:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          custom: true
          name: name
          active: true
          data_set: data_set
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/Template"
      required:
      - data
      title: ResponseRetrieveTemplate
      type: object
    ResponseTemplate:
      additionalProperties: false
      example:
        data:
          last_editor: last_editor
          custom: true
          name: name
          active: true
          data_set: data_set
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          pattern: .*
          type: string
        data:
          $ref: "#/components/schemas/Template"
      required:
      - data
      title: ResponseTemplate
      type: object
    S3Endpoint:
      additionalProperties: false
      properties:
        access_key:
          maxLength: 150
          type: string
        region:
          maxLength: 50
          type: string
        object_key_prefix:
          maxLength: 150
          nullable: true
          type: string
        bucket_name:
          maxLength: 150
          type: string
        content_type:
          description: |-
            * `plain/text` - plain/text
            * `application/gzip` - application/gzip
          title: ContentTypeEnum
          type: string
        host_url:
          format: uri
          maxLength: 200
          type: string
      required:
      - access_key
      - bucket_name
      - content_type
      - host_url
      - region
      title: S3Endpoint
      type: object
    S3EndpointRequest:
      additionalProperties: false
      properties:
        access_key:
          maxLength: 150
          minLength: 1
          type: string
        region:
          maxLength: 50
          minLength: 1
          type: string
        object_key_prefix:
          maxLength: 150
          minLength: 1
          nullable: true
          type: string
        bucket_name:
          maxLength: 150
          minLength: 1
          type: string
        content_type:
          description: |-
            * `plain/text` - plain/text
            * `application/gzip` - application/gzip
          title: ContentTypeEnum
          type: string
        host_url:
          format: uri
          maxLength: 200
          minLength: 1
          type: string
      required:
      - access_key
      - bucket_name
      - content_type
      - host_url
      - region
      title: S3EndpointRequest
      type: object
    SplunkEndpoint:
      additionalProperties: false
      properties:
        url:
          format: uri
          type: string
        api_key:
          maxLength: 255
          type: string
      required:
      - api_key
      - url
      title: SplunkEndpoint
      type: object
    SplunkEndpointRequest:
      additionalProperties: false
      properties:
        url:
          format: uri
          minLength: 1
          type: string
        api_key:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - api_key
      - url
      title: SplunkEndpointRequest
      type: object
    Template:
      additionalProperties: false
      example:
        last_editor: last_editor
        custom: true
        name: name
        active: true
        data_set: data_set
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        last_editor:
          maxLength: 100
          minLength: 1
          pattern: .*
          readOnly: true
          type: string
        last_modified:
          format: date-time
          readOnly: true
          type: string
        custom:
          readOnly: true
          type: boolean
        active:
          type: boolean
        data_set:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
      required:
      - custom
      - data_set
      - id
      - last_editor
      - last_modified
      - name
      title: Template
      type: object
    TemplateRequest:
      additionalProperties: false
      example:
        name: name
        active: true
        data_set: data_set
      properties:
        name:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
        active:
          type: boolean
        data_set:
          maxLength: 100
          minLength: 1
          pattern: .*
          type: string
      required:
      - data_set
      - name
      title: TemplateRequest
      type: object
    Transform:
      additionalProperties: false
      example:
        attributes:
          rate: 60
        type: type
      properties:
        type:
          description: |-
            * `render_template` - Render Template
            * `sampling` - Sampling
            * `filter_workloads` - Filter Workloads
          title: TransformTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/TransformAttributesPolymorphic"
      required:
      - attributes
      - type
      title: Transform
      type: object
    TransformAttributesPolymorphic:
      additionalProperties: true
      discriminator:
        mapping:
          sampling: "#/components/schemas/TransformAttributesPolymorphicTransformSampling"
          filter_workloads: "#/components/schemas/TransformAttributesPolymorphicTransformFilterWorkloads"
          render_template: "#/components/schemas/TransformAttributesPolymorphicTransformRenderTemplate"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicTransformSampling"
      - $ref: "#/components/schemas/TransformAttributesPolymorphicTransformFilterWorkloads"
      - $ref: "#/components/schemas/TransformAttributesPolymorphicTransformRenderTemplate"
      title: TransformAttributesPolymorphic
    TransformAttributesPolymorphicRequest:
      additionalProperties: true
      discriminator:
        mapping:
          sampling: "#/components/schemas/TransformAttributesPolymorphicTransformSamplingRequest"
          filter_workloads: "#/components/schemas/TransformAttributesPolymorphicTransformFilterWorkloadsRequest"
          render_template: "#/components/schemas/TransformAttributesPolymorphicTransformRenderTemplateRequest"
        propertyName: type
      oneOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicTransformSamplingRequest"
      - $ref: "#/components/schemas/TransformAttributesPolymorphicTransformFilterWorkloadsRequest"
      - $ref: "#/components/schemas/TransformAttributesPolymorphicTransformRenderTemplateRequest"
      title: TransformAttributesPolymorphicRequest
    TransformAttributesPolymorphicShared:
      additionalProperties: false
      title: TransformAttributesPolymorphicShared
      type: object
    TransformAttributesPolymorphicTransformFilterWorkloads:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicShared"
      - $ref: "#/components/schemas/TransformFilterWorkloads"
      title: TransformAttributesPolymorphicTransformFilterWorkloads
    TransformAttributesPolymorphicTransformFilterWorkloadsRequest:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicShared"
      - $ref: "#/components/schemas/TransformFilterWorkloadsRequest"
      title: TransformAttributesPolymorphicTransformFilterWorkloadsRequest
    TransformAttributesPolymorphicTransformRenderTemplate:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicShared"
      - $ref: "#/components/schemas/TransformRenderTemplate"
      title: TransformAttributesPolymorphicTransformRenderTemplate
    TransformAttributesPolymorphicTransformRenderTemplateRequest:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicShared"
      - $ref: "#/components/schemas/TransformRenderTemplateRequest"
      title: TransformAttributesPolymorphicTransformRenderTemplateRequest
    TransformAttributesPolymorphicTransformSampling:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicShared"
      - $ref: "#/components/schemas/TransformSampling"
      example:
        rate: 60
      title: TransformAttributesPolymorphicTransformSampling
    TransformAttributesPolymorphicTransformSamplingRequest:
      additionalProperties: false
      allOf:
      - $ref: "#/components/schemas/TransformAttributesPolymorphicShared"
      - $ref: "#/components/schemas/TransformSamplingRequest"
      example:
        rate: 8
      title: TransformAttributesPolymorphicTransformSamplingRequest
    TransformFilterWorkloads:
      additionalProperties: false
      description: Serializer for filter_workloads transform attributes.
      properties:
        workloads:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 100
          minItems: 1
          type: array
      required:
      - workloads
      title: TransformFilterWorkloads
      type: object
    TransformFilterWorkloadsRequest:
      additionalProperties: false
      description: Serializer for filter_workloads transform attributes.
      properties:
        workloads:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 100
          minItems: 1
          type: array
      required:
      - workloads
      title: TransformFilterWorkloadsRequest
      type: object
    TransformRenderTemplate:
      additionalProperties: false
      description: Serializer for render_template transform attributes.
      properties:
        template:
          format: int64
          minimum: 1
          type: integer
      required:
      - template
      title: TransformRenderTemplate
      type: object
    TransformRenderTemplateRequest:
      additionalProperties: false
      description: Serializer for render_template transform attributes.
      properties:
        template:
          format: int64
          minimum: 1
          type: integer
      required:
      - template
      title: TransformRenderTemplateRequest
      type: object
    TransformRequest:
      additionalProperties: false
      example:
        attributes:
          rate: 8
        type: type
      properties:
        type:
          description: |-
            * `render_template` - Render Template
            * `sampling` - Sampling
            * `filter_workloads` - Filter Workloads
          title: TransformTypeEnum
          type: string
        attributes:
          $ref: "#/components/schemas/TransformAttributesPolymorphicRequest"
      required:
      - attributes
      - type
      title: TransformRequest
      type: object
    TransformSampling:
      additionalProperties: false
      description: Serializer for sampling transform attributes.
      properties:
        rate:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
      required:
      - rate
      title: TransformSampling
      type: object
    TransformSamplingRequest:
      additionalProperties: false
      description: Serializer for sampling transform attributes.
      properties:
        rate:
          format: int64
          maximum: 100
          minimum: 1
          type: integer
      required:
      - rate
      title: TransformSamplingRequest
      type: object
    TransformTypeEnum:
      description: |-
        * `render_template` - Render Template
        * `sampling` - Sampling
        * `filter_workloads` - Filter Workloads
      title: TransformTypeEnum
      type: string
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    TokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
