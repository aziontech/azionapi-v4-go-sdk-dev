/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// TransformAttributesPolymorphicRequest - struct for TransformAttributesPolymorphicRequest
type TransformAttributesPolymorphicRequest struct {
	TransformAttributesPolymorphicTransformFilterWorkloadsRequest *TransformAttributesPolymorphicTransformFilterWorkloadsRequest
	TransformAttributesPolymorphicTransformRenderTemplateRequest *TransformAttributesPolymorphicTransformRenderTemplateRequest
	TransformAttributesPolymorphicTransformSamplingRequest *TransformAttributesPolymorphicTransformSamplingRequest
}

// TransformAttributesPolymorphicTransformFilterWorkloadsRequestAsTransformAttributesPolymorphicRequest is a convenience function that returns TransformAttributesPolymorphicTransformFilterWorkloadsRequest wrapped in TransformAttributesPolymorphicRequest
func TransformAttributesPolymorphicTransformFilterWorkloadsRequestAsTransformAttributesPolymorphicRequest(v *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) TransformAttributesPolymorphicRequest {
	return TransformAttributesPolymorphicRequest{
		TransformAttributesPolymorphicTransformFilterWorkloadsRequest: v,
	}
}

// TransformAttributesPolymorphicTransformRenderTemplateRequestAsTransformAttributesPolymorphicRequest is a convenience function that returns TransformAttributesPolymorphicTransformRenderTemplateRequest wrapped in TransformAttributesPolymorphicRequest
func TransformAttributesPolymorphicTransformRenderTemplateRequestAsTransformAttributesPolymorphicRequest(v *TransformAttributesPolymorphicTransformRenderTemplateRequest) TransformAttributesPolymorphicRequest {
	return TransformAttributesPolymorphicRequest{
		TransformAttributesPolymorphicTransformRenderTemplateRequest: v,
	}
}

// TransformAttributesPolymorphicTransformSamplingRequestAsTransformAttributesPolymorphicRequest is a convenience function that returns TransformAttributesPolymorphicTransformSamplingRequest wrapped in TransformAttributesPolymorphicRequest
func TransformAttributesPolymorphicTransformSamplingRequestAsTransformAttributesPolymorphicRequest(v *TransformAttributesPolymorphicTransformSamplingRequest) TransformAttributesPolymorphicRequest {
	return TransformAttributesPolymorphicRequest{
		TransformAttributesPolymorphicTransformSamplingRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *TransformAttributesPolymorphicRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TransformAttributesPolymorphicTransformFilterWorkloadsRequest
	err = newStrictDecoder(data).Decode(&dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest)
	if err == nil {
		jsonTransformAttributesPolymorphicTransformFilterWorkloadsRequest, _ := json.Marshal(dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest)
		if string(jsonTransformAttributesPolymorphicTransformFilterWorkloadsRequest) == "{}" { // empty struct
			dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest = nil
		} else {
			if err = validator.Validate(dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest); err != nil {
				dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest = nil
	}

	// try to unmarshal data into TransformAttributesPolymorphicTransformRenderTemplateRequest
	err = newStrictDecoder(data).Decode(&dst.TransformAttributesPolymorphicTransformRenderTemplateRequest)
	if err == nil {
		jsonTransformAttributesPolymorphicTransformRenderTemplateRequest, _ := json.Marshal(dst.TransformAttributesPolymorphicTransformRenderTemplateRequest)
		if string(jsonTransformAttributesPolymorphicTransformRenderTemplateRequest) == "{}" { // empty struct
			dst.TransformAttributesPolymorphicTransformRenderTemplateRequest = nil
		} else {
			if err = validator.Validate(dst.TransformAttributesPolymorphicTransformRenderTemplateRequest); err != nil {
				dst.TransformAttributesPolymorphicTransformRenderTemplateRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformAttributesPolymorphicTransformRenderTemplateRequest = nil
	}

	// try to unmarshal data into TransformAttributesPolymorphicTransformSamplingRequest
	err = newStrictDecoder(data).Decode(&dst.TransformAttributesPolymorphicTransformSamplingRequest)
	if err == nil {
		jsonTransformAttributesPolymorphicTransformSamplingRequest, _ := json.Marshal(dst.TransformAttributesPolymorphicTransformSamplingRequest)
		if string(jsonTransformAttributesPolymorphicTransformSamplingRequest) == "{}" { // empty struct
			dst.TransformAttributesPolymorphicTransformSamplingRequest = nil
		} else {
			if err = validator.Validate(dst.TransformAttributesPolymorphicTransformSamplingRequest); err != nil {
				dst.TransformAttributesPolymorphicTransformSamplingRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformAttributesPolymorphicTransformSamplingRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TransformAttributesPolymorphicTransformFilterWorkloadsRequest = nil
		dst.TransformAttributesPolymorphicTransformRenderTemplateRequest = nil
		dst.TransformAttributesPolymorphicTransformSamplingRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TransformAttributesPolymorphicRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TransformAttributesPolymorphicRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TransformAttributesPolymorphicRequest) MarshalJSON() ([]byte, error) {
	if src.TransformAttributesPolymorphicTransformFilterWorkloadsRequest != nil {
		return json.Marshal(&src.TransformAttributesPolymorphicTransformFilterWorkloadsRequest)
	}

	if src.TransformAttributesPolymorphicTransformRenderTemplateRequest != nil {
		return json.Marshal(&src.TransformAttributesPolymorphicTransformRenderTemplateRequest)
	}

	if src.TransformAttributesPolymorphicTransformSamplingRequest != nil {
		return json.Marshal(&src.TransformAttributesPolymorphicTransformSamplingRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TransformAttributesPolymorphicRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TransformAttributesPolymorphicTransformFilterWorkloadsRequest != nil {
		return obj.TransformAttributesPolymorphicTransformFilterWorkloadsRequest
	}

	if obj.TransformAttributesPolymorphicTransformRenderTemplateRequest != nil {
		return obj.TransformAttributesPolymorphicTransformRenderTemplateRequest
	}

	if obj.TransformAttributesPolymorphicTransformSamplingRequest != nil {
		return obj.TransformAttributesPolymorphicTransformSamplingRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj TransformAttributesPolymorphicRequest) GetActualInstanceValue() (interface{}) {
	if obj.TransformAttributesPolymorphicTransformFilterWorkloadsRequest != nil {
		return *obj.TransformAttributesPolymorphicTransformFilterWorkloadsRequest
	}

	if obj.TransformAttributesPolymorphicTransformRenderTemplateRequest != nil {
		return *obj.TransformAttributesPolymorphicTransformRenderTemplateRequest
	}

	if obj.TransformAttributesPolymorphicTransformSamplingRequest != nil {
		return *obj.TransformAttributesPolymorphicTransformSamplingRequest
	}

	// all schemas are nil
	return nil
}

type NullableTransformAttributesPolymorphicRequest struct {
	value *TransformAttributesPolymorphicRequest
	isSet bool
}

func (v NullableTransformAttributesPolymorphicRequest) Get() *TransformAttributesPolymorphicRequest {
	return v.value
}

func (v *NullableTransformAttributesPolymorphicRequest) Set(val *TransformAttributesPolymorphicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformAttributesPolymorphicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformAttributesPolymorphicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformAttributesPolymorphicRequest(val *TransformAttributesPolymorphicRequest) *NullableTransformAttributesPolymorphicRequest {
	return &NullableTransformAttributesPolymorphicRequest{value: val, isSet: true}
}

func (v NullableTransformAttributesPolymorphicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformAttributesPolymorphicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


