/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// TransformPolymorphicRequest - struct for TransformPolymorphicRequest
type TransformPolymorphicRequest struct {
	TransformPolymorphicTransformFilterWorkloadsAttributesRequest *TransformPolymorphicTransformFilterWorkloadsAttributesRequest
	TransformPolymorphicTransformRenderTemplateAttributesRequest *TransformPolymorphicTransformRenderTemplateAttributesRequest
	TransformPolymorphicTransformSamplingAttributesRequest *TransformPolymorphicTransformSamplingAttributesRequest
}

// TransformPolymorphicTransformFilterWorkloadsAttributesRequestAsTransformPolymorphicRequest is a convenience function that returns TransformPolymorphicTransformFilterWorkloadsAttributesRequest wrapped in TransformPolymorphicRequest
func TransformPolymorphicTransformFilterWorkloadsAttributesRequestAsTransformPolymorphicRequest(v *TransformPolymorphicTransformFilterWorkloadsAttributesRequest) TransformPolymorphicRequest {
	return TransformPolymorphicRequest{
		TransformPolymorphicTransformFilterWorkloadsAttributesRequest: v,
	}
}

// TransformPolymorphicTransformRenderTemplateAttributesRequestAsTransformPolymorphicRequest is a convenience function that returns TransformPolymorphicTransformRenderTemplateAttributesRequest wrapped in TransformPolymorphicRequest
func TransformPolymorphicTransformRenderTemplateAttributesRequestAsTransformPolymorphicRequest(v *TransformPolymorphicTransformRenderTemplateAttributesRequest) TransformPolymorphicRequest {
	return TransformPolymorphicRequest{
		TransformPolymorphicTransformRenderTemplateAttributesRequest: v,
	}
}

// TransformPolymorphicTransformSamplingAttributesRequestAsTransformPolymorphicRequest is a convenience function that returns TransformPolymorphicTransformSamplingAttributesRequest wrapped in TransformPolymorphicRequest
func TransformPolymorphicTransformSamplingAttributesRequestAsTransformPolymorphicRequest(v *TransformPolymorphicTransformSamplingAttributesRequest) TransformPolymorphicRequest {
	return TransformPolymorphicRequest{
		TransformPolymorphicTransformSamplingAttributesRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *TransformPolymorphicRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TransformPolymorphicTransformFilterWorkloadsAttributesRequest
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest)
	if err == nil {
		jsonTransformPolymorphicTransformFilterWorkloadsAttributesRequest, _ := json.Marshal(dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest)
		if string(jsonTransformPolymorphicTransformFilterWorkloadsAttributesRequest) == "{}" { // empty struct
			dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest); err != nil {
				dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest = nil
	}

	// try to unmarshal data into TransformPolymorphicTransformRenderTemplateAttributesRequest
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformRenderTemplateAttributesRequest)
	if err == nil {
		jsonTransformPolymorphicTransformRenderTemplateAttributesRequest, _ := json.Marshal(dst.TransformPolymorphicTransformRenderTemplateAttributesRequest)
		if string(jsonTransformPolymorphicTransformRenderTemplateAttributesRequest) == "{}" { // empty struct
			dst.TransformPolymorphicTransformRenderTemplateAttributesRequest = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformRenderTemplateAttributesRequest); err != nil {
				dst.TransformPolymorphicTransformRenderTemplateAttributesRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformRenderTemplateAttributesRequest = nil
	}

	// try to unmarshal data into TransformPolymorphicTransformSamplingAttributesRequest
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformSamplingAttributesRequest)
	if err == nil {
		jsonTransformPolymorphicTransformSamplingAttributesRequest, _ := json.Marshal(dst.TransformPolymorphicTransformSamplingAttributesRequest)
		if string(jsonTransformPolymorphicTransformSamplingAttributesRequest) == "{}" { // empty struct
			dst.TransformPolymorphicTransformSamplingAttributesRequest = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformSamplingAttributesRequest); err != nil {
				dst.TransformPolymorphicTransformSamplingAttributesRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformSamplingAttributesRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TransformPolymorphicTransformFilterWorkloadsAttributesRequest = nil
		dst.TransformPolymorphicTransformRenderTemplateAttributesRequest = nil
		dst.TransformPolymorphicTransformSamplingAttributesRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TransformPolymorphicRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TransformPolymorphicRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TransformPolymorphicRequest) MarshalJSON() ([]byte, error) {
	if src.TransformPolymorphicTransformFilterWorkloadsAttributesRequest != nil {
		return json.Marshal(&src.TransformPolymorphicTransformFilterWorkloadsAttributesRequest)
	}

	if src.TransformPolymorphicTransformRenderTemplateAttributesRequest != nil {
		return json.Marshal(&src.TransformPolymorphicTransformRenderTemplateAttributesRequest)
	}

	if src.TransformPolymorphicTransformSamplingAttributesRequest != nil {
		return json.Marshal(&src.TransformPolymorphicTransformSamplingAttributesRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TransformPolymorphicRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TransformPolymorphicTransformFilterWorkloadsAttributesRequest != nil {
		return obj.TransformPolymorphicTransformFilterWorkloadsAttributesRequest
	}

	if obj.TransformPolymorphicTransformRenderTemplateAttributesRequest != nil {
		return obj.TransformPolymorphicTransformRenderTemplateAttributesRequest
	}

	if obj.TransformPolymorphicTransformSamplingAttributesRequest != nil {
		return obj.TransformPolymorphicTransformSamplingAttributesRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj TransformPolymorphicRequest) GetActualInstanceValue() (interface{}) {
	if obj.TransformPolymorphicTransformFilterWorkloadsAttributesRequest != nil {
		return *obj.TransformPolymorphicTransformFilterWorkloadsAttributesRequest
	}

	if obj.TransformPolymorphicTransformRenderTemplateAttributesRequest != nil {
		return *obj.TransformPolymorphicTransformRenderTemplateAttributesRequest
	}

	if obj.TransformPolymorphicTransformSamplingAttributesRequest != nil {
		return *obj.TransformPolymorphicTransformSamplingAttributesRequest
	}

	// all schemas are nil
	return nil
}

type NullableTransformPolymorphicRequest struct {
	value *TransformPolymorphicRequest
	isSet bool
}

func (v NullableTransformPolymorphicRequest) Get() *TransformPolymorphicRequest {
	return v.value
}

func (v *NullableTransformPolymorphicRequest) Set(val *TransformPolymorphicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformPolymorphicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformPolymorphicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformPolymorphicRequest(val *TransformPolymorphicRequest) *NullableTransformPolymorphicRequest {
	return &NullableTransformPolymorphicRequest{value: val, isSet: true}
}

func (v NullableTransformPolymorphicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformPolymorphicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


