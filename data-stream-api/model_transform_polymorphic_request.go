/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// TransformPolymorphicRequest - struct for TransformPolymorphicRequest
type TransformPolymorphicRequest struct {
	TransformPolymorphicTransformFilterWorkloadsRequest *TransformPolymorphicTransformFilterWorkloadsRequest
	TransformPolymorphicTransformRenderTemplateRequest *TransformPolymorphicTransformRenderTemplateRequest
	TransformPolymorphicTransformSamplingRequest *TransformPolymorphicTransformSamplingRequest
}

// TransformPolymorphicTransformFilterWorkloadsRequestAsTransformPolymorphicRequest is a convenience function that returns TransformPolymorphicTransformFilterWorkloadsRequest wrapped in TransformPolymorphicRequest
func TransformPolymorphicTransformFilterWorkloadsRequestAsTransformPolymorphicRequest(v *TransformPolymorphicTransformFilterWorkloadsRequest) TransformPolymorphicRequest {
	return TransformPolymorphicRequest{
		TransformPolymorphicTransformFilterWorkloadsRequest: v,
	}
}

// TransformPolymorphicTransformRenderTemplateRequestAsTransformPolymorphicRequest is a convenience function that returns TransformPolymorphicTransformRenderTemplateRequest wrapped in TransformPolymorphicRequest
func TransformPolymorphicTransformRenderTemplateRequestAsTransformPolymorphicRequest(v *TransformPolymorphicTransformRenderTemplateRequest) TransformPolymorphicRequest {
	return TransformPolymorphicRequest{
		TransformPolymorphicTransformRenderTemplateRequest: v,
	}
}

// TransformPolymorphicTransformSamplingRequestAsTransformPolymorphicRequest is a convenience function that returns TransformPolymorphicTransformSamplingRequest wrapped in TransformPolymorphicRequest
func TransformPolymorphicTransformSamplingRequestAsTransformPolymorphicRequest(v *TransformPolymorphicTransformSamplingRequest) TransformPolymorphicRequest {
	return TransformPolymorphicRequest{
		TransformPolymorphicTransformSamplingRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *TransformPolymorphicRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TransformPolymorphicTransformFilterWorkloadsRequest
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformFilterWorkloadsRequest)
	if err == nil {
		jsonTransformPolymorphicTransformFilterWorkloadsRequest, _ := json.Marshal(dst.TransformPolymorphicTransformFilterWorkloadsRequest)
		if string(jsonTransformPolymorphicTransformFilterWorkloadsRequest) == "{}" { // empty struct
			dst.TransformPolymorphicTransformFilterWorkloadsRequest = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformFilterWorkloadsRequest); err != nil {
				dst.TransformPolymorphicTransformFilterWorkloadsRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformFilterWorkloadsRequest = nil
	}

	// try to unmarshal data into TransformPolymorphicTransformRenderTemplateRequest
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformRenderTemplateRequest)
	if err == nil {
		jsonTransformPolymorphicTransformRenderTemplateRequest, _ := json.Marshal(dst.TransformPolymorphicTransformRenderTemplateRequest)
		if string(jsonTransformPolymorphicTransformRenderTemplateRequest) == "{}" { // empty struct
			dst.TransformPolymorphicTransformRenderTemplateRequest = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformRenderTemplateRequest); err != nil {
				dst.TransformPolymorphicTransformRenderTemplateRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformRenderTemplateRequest = nil
	}

	// try to unmarshal data into TransformPolymorphicTransformSamplingRequest
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformSamplingRequest)
	if err == nil {
		jsonTransformPolymorphicTransformSamplingRequest, _ := json.Marshal(dst.TransformPolymorphicTransformSamplingRequest)
		if string(jsonTransformPolymorphicTransformSamplingRequest) == "{}" { // empty struct
			dst.TransformPolymorphicTransformSamplingRequest = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformSamplingRequest); err != nil {
				dst.TransformPolymorphicTransformSamplingRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformSamplingRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TransformPolymorphicTransformFilterWorkloadsRequest = nil
		dst.TransformPolymorphicTransformRenderTemplateRequest = nil
		dst.TransformPolymorphicTransformSamplingRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TransformPolymorphicRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TransformPolymorphicRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TransformPolymorphicRequest) MarshalJSON() ([]byte, error) {
	if src.TransformPolymorphicTransformFilterWorkloadsRequest != nil {
		return json.Marshal(&src.TransformPolymorphicTransformFilterWorkloadsRequest)
	}

	if src.TransformPolymorphicTransformRenderTemplateRequest != nil {
		return json.Marshal(&src.TransformPolymorphicTransformRenderTemplateRequest)
	}

	if src.TransformPolymorphicTransformSamplingRequest != nil {
		return json.Marshal(&src.TransformPolymorphicTransformSamplingRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TransformPolymorphicRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TransformPolymorphicTransformFilterWorkloadsRequest != nil {
		return obj.TransformPolymorphicTransformFilterWorkloadsRequest
	}

	if obj.TransformPolymorphicTransformRenderTemplateRequest != nil {
		return obj.TransformPolymorphicTransformRenderTemplateRequest
	}

	if obj.TransformPolymorphicTransformSamplingRequest != nil {
		return obj.TransformPolymorphicTransformSamplingRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj TransformPolymorphicRequest) GetActualInstanceValue() (interface{}) {
	if obj.TransformPolymorphicTransformFilterWorkloadsRequest != nil {
		return *obj.TransformPolymorphicTransformFilterWorkloadsRequest
	}

	if obj.TransformPolymorphicTransformRenderTemplateRequest != nil {
		return *obj.TransformPolymorphicTransformRenderTemplateRequest
	}

	if obj.TransformPolymorphicTransformSamplingRequest != nil {
		return *obj.TransformPolymorphicTransformSamplingRequest
	}

	// all schemas are nil
	return nil
}

type NullableTransformPolymorphicRequest struct {
	value *TransformPolymorphicRequest
	isSet bool
}

func (v NullableTransformPolymorphicRequest) Get() *TransformPolymorphicRequest {
	return v.value
}

func (v *NullableTransformPolymorphicRequest) Set(val *TransformPolymorphicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformPolymorphicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformPolymorphicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformPolymorphicRequest(val *TransformPolymorphicRequest) *NullableTransformPolymorphicRequest {
	return &NullableTransformPolymorphicRequest{value: val, isSet: true}
}

func (v NullableTransformPolymorphicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformPolymorphicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


