/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datastreamapi

import (
	"encoding/json"
)

// checks if the PaginatedResponseListDataStreamList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedResponseListDataStreamList{}

// PaginatedResponseListDataStreamList struct for PaginatedResponseListDataStreamList
type PaginatedResponseListDataStreamList struct {
	Count *int64 `json:"count,omitempty"`
	Results []ResponseListDataStream `json:"results,omitempty"`
}

// NewPaginatedResponseListDataStreamList instantiates a new PaginatedResponseListDataStreamList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedResponseListDataStreamList() *PaginatedResponseListDataStreamList {
	this := PaginatedResponseListDataStreamList{}
	return &this
}

// NewPaginatedResponseListDataStreamListWithDefaults instantiates a new PaginatedResponseListDataStreamList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedResponseListDataStreamListWithDefaults() *PaginatedResponseListDataStreamList {
	this := PaginatedResponseListDataStreamList{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *PaginatedResponseListDataStreamList) GetCount() int64 {
	if o == nil || IsNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseListDataStreamList) GetCountOk() (*int64, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *PaginatedResponseListDataStreamList) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *PaginatedResponseListDataStreamList) SetCount(v int64) {
	o.Count = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *PaginatedResponseListDataStreamList) GetResults() []ResponseListDataStream {
	if o == nil || IsNil(o.Results) {
		var ret []ResponseListDataStream
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseListDataStreamList) GetResultsOk() ([]ResponseListDataStream, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *PaginatedResponseListDataStreamList) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []ResponseListDataStream and assigns it to the Results field.
func (o *PaginatedResponseListDataStreamList) SetResults(v []ResponseListDataStream) {
	o.Results = v
}

func (o PaginatedResponseListDataStreamList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedResponseListDataStreamList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullablePaginatedResponseListDataStreamList struct {
	value *PaginatedResponseListDataStreamList
	isSet bool
}

func (v NullablePaginatedResponseListDataStreamList) Get() *PaginatedResponseListDataStreamList {
	return v.value
}

func (v *NullablePaginatedResponseListDataStreamList) Set(val *PaginatedResponseListDataStreamList) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedResponseListDataStreamList) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedResponseListDataStreamList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedResponseListDataStreamList(val *PaginatedResponseListDataStreamList) *NullablePaginatedResponseListDataStreamList {
	return &NullablePaginatedResponseListDataStreamList{value: val, isSet: true}
}

func (v NullablePaginatedResponseListDataStreamList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedResponseListDataStreamList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


