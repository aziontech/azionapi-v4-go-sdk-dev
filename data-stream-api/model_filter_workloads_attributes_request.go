/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FilterWorkloadsAttributesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterWorkloadsAttributesRequest{}

// FilterWorkloadsAttributesRequest Serializer for filter_workloads transform attributes.
type FilterWorkloadsAttributesRequest struct {
	Workloads []int64 `json:"workloads"`
}

type _FilterWorkloadsAttributesRequest FilterWorkloadsAttributesRequest

// NewFilterWorkloadsAttributesRequest instantiates a new FilterWorkloadsAttributesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterWorkloadsAttributesRequest(workloads []int64) *FilterWorkloadsAttributesRequest {
	this := FilterWorkloadsAttributesRequest{}
	this.Workloads = workloads
	return &this
}

// NewFilterWorkloadsAttributesRequestWithDefaults instantiates a new FilterWorkloadsAttributesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterWorkloadsAttributesRequestWithDefaults() *FilterWorkloadsAttributesRequest {
	this := FilterWorkloadsAttributesRequest{}
	return &this
}

// GetWorkloads returns the Workloads field value
func (o *FilterWorkloadsAttributesRequest) GetWorkloads() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value
// and a boolean to check if the value has been set.
func (o *FilterWorkloadsAttributesRequest) GetWorkloadsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workloads, true
}

// SetWorkloads sets field value
func (o *FilterWorkloadsAttributesRequest) SetWorkloads(v []int64) {
	o.Workloads = v
}

func (o FilterWorkloadsAttributesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterWorkloadsAttributesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workloads"] = o.Workloads
	return toSerialize, nil
}

func (o *FilterWorkloadsAttributesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"workloads",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFilterWorkloadsAttributesRequest := _FilterWorkloadsAttributesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFilterWorkloadsAttributesRequest)

	if err != nil {
		return err
	}

	*o = FilterWorkloadsAttributesRequest(varFilterWorkloadsAttributesRequest)

	return err
}

type NullableFilterWorkloadsAttributesRequest struct {
	value *FilterWorkloadsAttributesRequest
	isSet bool
}

func (v NullableFilterWorkloadsAttributesRequest) Get() *FilterWorkloadsAttributesRequest {
	return v.value
}

func (v *NullableFilterWorkloadsAttributesRequest) Set(val *FilterWorkloadsAttributesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterWorkloadsAttributesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterWorkloadsAttributesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterWorkloadsAttributesRequest(val *FilterWorkloadsAttributesRequest) *NullableFilterWorkloadsAttributesRequest {
	return &NullableFilterWorkloadsAttributesRequest{value: val, isSet: true}
}

func (v NullableFilterWorkloadsAttributesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterWorkloadsAttributesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


