/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransformAttributesPolymorphicTransformFilterWorkloadsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransformAttributesPolymorphicTransformFilterWorkloadsRequest{}

// TransformAttributesPolymorphicTransformFilterWorkloadsRequest struct for TransformAttributesPolymorphicTransformFilterWorkloadsRequest
type TransformAttributesPolymorphicTransformFilterWorkloadsRequest struct {
	Workloads []int64 `json:"workloads"`
}

type _TransformAttributesPolymorphicTransformFilterWorkloadsRequest TransformAttributesPolymorphicTransformFilterWorkloadsRequest

// NewTransformAttributesPolymorphicTransformFilterWorkloadsRequest instantiates a new TransformAttributesPolymorphicTransformFilterWorkloadsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransformAttributesPolymorphicTransformFilterWorkloadsRequest(workloads []int64) *TransformAttributesPolymorphicTransformFilterWorkloadsRequest {
	this := TransformAttributesPolymorphicTransformFilterWorkloadsRequest{}
	this.Workloads = workloads
	return &this
}

// NewTransformAttributesPolymorphicTransformFilterWorkloadsRequestWithDefaults instantiates a new TransformAttributesPolymorphicTransformFilterWorkloadsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransformAttributesPolymorphicTransformFilterWorkloadsRequestWithDefaults() *TransformAttributesPolymorphicTransformFilterWorkloadsRequest {
	this := TransformAttributesPolymorphicTransformFilterWorkloadsRequest{}
	return &this
}

// GetWorkloads returns the Workloads field value
func (o *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) GetWorkloads() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value
// and a boolean to check if the value has been set.
func (o *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) GetWorkloadsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workloads, true
}

// SetWorkloads sets field value
func (o *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) SetWorkloads(v []int64) {
	o.Workloads = v
}

func (o TransformAttributesPolymorphicTransformFilterWorkloadsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransformAttributesPolymorphicTransformFilterWorkloadsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workloads"] = o.Workloads
	return toSerialize, nil
}

func (o *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"workloads",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransformAttributesPolymorphicTransformFilterWorkloadsRequest := _TransformAttributesPolymorphicTransformFilterWorkloadsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransformAttributesPolymorphicTransformFilterWorkloadsRequest)

	if err != nil {
		return err
	}

	*o = TransformAttributesPolymorphicTransformFilterWorkloadsRequest(varTransformAttributesPolymorphicTransformFilterWorkloadsRequest)

	return err
}

type NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest struct {
	value *TransformAttributesPolymorphicTransformFilterWorkloadsRequest
	isSet bool
}

func (v NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest) Get() *TransformAttributesPolymorphicTransformFilterWorkloadsRequest {
	return v.value
}

func (v *NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest) Set(val *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest(val *TransformAttributesPolymorphicTransformFilterWorkloadsRequest) *NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest {
	return &NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest{value: val, isSet: true}
}

func (v NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformAttributesPolymorphicTransformFilterWorkloadsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


