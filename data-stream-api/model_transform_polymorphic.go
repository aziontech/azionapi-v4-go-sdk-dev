/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datastreamapi

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// TransformPolymorphic - struct for TransformPolymorphic
type TransformPolymorphic struct {
	TransformPolymorphicTransformFilterWorkloadsAttributes *TransformPolymorphicTransformFilterWorkloadsAttributes
	TransformPolymorphicTransformRenderTemplateAttributes *TransformPolymorphicTransformRenderTemplateAttributes
	TransformPolymorphicTransformSamplingAttributes *TransformPolymorphicTransformSamplingAttributes
}

// TransformPolymorphicTransformFilterWorkloadsAttributesAsTransformPolymorphic is a convenience function that returns TransformPolymorphicTransformFilterWorkloadsAttributes wrapped in TransformPolymorphic
func TransformPolymorphicTransformFilterWorkloadsAttributesAsTransformPolymorphic(v *TransformPolymorphicTransformFilterWorkloadsAttributes) TransformPolymorphic {
	return TransformPolymorphic{
		TransformPolymorphicTransformFilterWorkloadsAttributes: v,
	}
}

// TransformPolymorphicTransformRenderTemplateAttributesAsTransformPolymorphic is a convenience function that returns TransformPolymorphicTransformRenderTemplateAttributes wrapped in TransformPolymorphic
func TransformPolymorphicTransformRenderTemplateAttributesAsTransformPolymorphic(v *TransformPolymorphicTransformRenderTemplateAttributes) TransformPolymorphic {
	return TransformPolymorphic{
		TransformPolymorphicTransformRenderTemplateAttributes: v,
	}
}

// TransformPolymorphicTransformSamplingAttributesAsTransformPolymorphic is a convenience function that returns TransformPolymorphicTransformSamplingAttributes wrapped in TransformPolymorphic
func TransformPolymorphicTransformSamplingAttributesAsTransformPolymorphic(v *TransformPolymorphicTransformSamplingAttributes) TransformPolymorphic {
	return TransformPolymorphic{
		TransformPolymorphicTransformSamplingAttributes: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *TransformPolymorphic) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TransformPolymorphicTransformFilterWorkloadsAttributes
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformFilterWorkloadsAttributes)
	if err == nil {
		jsonTransformPolymorphicTransformFilterWorkloadsAttributes, _ := json.Marshal(dst.TransformPolymorphicTransformFilterWorkloadsAttributes)
		if string(jsonTransformPolymorphicTransformFilterWorkloadsAttributes) == "{}" { // empty struct
			dst.TransformPolymorphicTransformFilterWorkloadsAttributes = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformFilterWorkloadsAttributes); err != nil {
				dst.TransformPolymorphicTransformFilterWorkloadsAttributes = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformFilterWorkloadsAttributes = nil
	}

	// try to unmarshal data into TransformPolymorphicTransformRenderTemplateAttributes
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformRenderTemplateAttributes)
	if err == nil {
		jsonTransformPolymorphicTransformRenderTemplateAttributes, _ := json.Marshal(dst.TransformPolymorphicTransformRenderTemplateAttributes)
		if string(jsonTransformPolymorphicTransformRenderTemplateAttributes) == "{}" { // empty struct
			dst.TransformPolymorphicTransformRenderTemplateAttributes = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformRenderTemplateAttributes); err != nil {
				dst.TransformPolymorphicTransformRenderTemplateAttributes = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformRenderTemplateAttributes = nil
	}

	// try to unmarshal data into TransformPolymorphicTransformSamplingAttributes
	err = newStrictDecoder(data).Decode(&dst.TransformPolymorphicTransformSamplingAttributes)
	if err == nil {
		jsonTransformPolymorphicTransformSamplingAttributes, _ := json.Marshal(dst.TransformPolymorphicTransformSamplingAttributes)
		if string(jsonTransformPolymorphicTransformSamplingAttributes) == "{}" { // empty struct
			dst.TransformPolymorphicTransformSamplingAttributes = nil
		} else {
			if err = validator.Validate(dst.TransformPolymorphicTransformSamplingAttributes); err != nil {
				dst.TransformPolymorphicTransformSamplingAttributes = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformPolymorphicTransformSamplingAttributes = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TransformPolymorphicTransformFilterWorkloadsAttributes = nil
		dst.TransformPolymorphicTransformRenderTemplateAttributes = nil
		dst.TransformPolymorphicTransformSamplingAttributes = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TransformPolymorphic)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TransformPolymorphic)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TransformPolymorphic) MarshalJSON() ([]byte, error) {
	if src.TransformPolymorphicTransformFilterWorkloadsAttributes != nil {
		return json.Marshal(&src.TransformPolymorphicTransformFilterWorkloadsAttributes)
	}

	if src.TransformPolymorphicTransformRenderTemplateAttributes != nil {
		return json.Marshal(&src.TransformPolymorphicTransformRenderTemplateAttributes)
	}

	if src.TransformPolymorphicTransformSamplingAttributes != nil {
		return json.Marshal(&src.TransformPolymorphicTransformSamplingAttributes)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TransformPolymorphic) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TransformPolymorphicTransformFilterWorkloadsAttributes != nil {
		return obj.TransformPolymorphicTransformFilterWorkloadsAttributes
	}

	if obj.TransformPolymorphicTransformRenderTemplateAttributes != nil {
		return obj.TransformPolymorphicTransformRenderTemplateAttributes
	}

	if obj.TransformPolymorphicTransformSamplingAttributes != nil {
		return obj.TransformPolymorphicTransformSamplingAttributes
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj TransformPolymorphic) GetActualInstanceValue() (interface{}) {
	if obj.TransformPolymorphicTransformFilterWorkloadsAttributes != nil {
		return *obj.TransformPolymorphicTransformFilterWorkloadsAttributes
	}

	if obj.TransformPolymorphicTransformRenderTemplateAttributes != nil {
		return *obj.TransformPolymorphicTransformRenderTemplateAttributes
	}

	if obj.TransformPolymorphicTransformSamplingAttributes != nil {
		return *obj.TransformPolymorphicTransformSamplingAttributes
	}

	// all schemas are nil
	return nil
}

type NullableTransformPolymorphic struct {
	value *TransformPolymorphic
	isSet bool
}

func (v NullableTransformPolymorphic) Get() *TransformPolymorphic {
	return v.value
}

func (v *NullableTransformPolymorphic) Set(val *TransformPolymorphic) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformPolymorphic) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformPolymorphic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformPolymorphic(val *TransformPolymorphic) *NullableTransformPolymorphic {
	return &NullableTransformPolymorphic{value: val, isSet: true}
}

func (v NullableTransformPolymorphic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformPolymorphic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


