/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// TransformAttributesPolymorphic - struct for TransformAttributesPolymorphic
type TransformAttributesPolymorphic struct {
	TransformAttributesPolymorphicTransformFilterWorkloads *TransformAttributesPolymorphicTransformFilterWorkloads
	TransformAttributesPolymorphicTransformRenderTemplate *TransformAttributesPolymorphicTransformRenderTemplate
	TransformAttributesPolymorphicTransformSampling *TransformAttributesPolymorphicTransformSampling
}

// TransformAttributesPolymorphicTransformFilterWorkloadsAsTransformAttributesPolymorphic is a convenience function that returns TransformAttributesPolymorphicTransformFilterWorkloads wrapped in TransformAttributesPolymorphic
func TransformAttributesPolymorphicTransformFilterWorkloadsAsTransformAttributesPolymorphic(v *TransformAttributesPolymorphicTransformFilterWorkloads) TransformAttributesPolymorphic {
	return TransformAttributesPolymorphic{
		TransformAttributesPolymorphicTransformFilterWorkloads: v,
	}
}

// TransformAttributesPolymorphicTransformRenderTemplateAsTransformAttributesPolymorphic is a convenience function that returns TransformAttributesPolymorphicTransformRenderTemplate wrapped in TransformAttributesPolymorphic
func TransformAttributesPolymorphicTransformRenderTemplateAsTransformAttributesPolymorphic(v *TransformAttributesPolymorphicTransformRenderTemplate) TransformAttributesPolymorphic {
	return TransformAttributesPolymorphic{
		TransformAttributesPolymorphicTransformRenderTemplate: v,
	}
}

// TransformAttributesPolymorphicTransformSamplingAsTransformAttributesPolymorphic is a convenience function that returns TransformAttributesPolymorphicTransformSampling wrapped in TransformAttributesPolymorphic
func TransformAttributesPolymorphicTransformSamplingAsTransformAttributesPolymorphic(v *TransformAttributesPolymorphicTransformSampling) TransformAttributesPolymorphic {
	return TransformAttributesPolymorphic{
		TransformAttributesPolymorphicTransformSampling: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *TransformAttributesPolymorphic) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TransformAttributesPolymorphicTransformFilterWorkloads
	err = newStrictDecoder(data).Decode(&dst.TransformAttributesPolymorphicTransformFilterWorkloads)
	if err == nil {
		jsonTransformAttributesPolymorphicTransformFilterWorkloads, _ := json.Marshal(dst.TransformAttributesPolymorphicTransformFilterWorkloads)
		if string(jsonTransformAttributesPolymorphicTransformFilterWorkloads) == "{}" { // empty struct
			dst.TransformAttributesPolymorphicTransformFilterWorkloads = nil
		} else {
			if err = validator.Validate(dst.TransformAttributesPolymorphicTransformFilterWorkloads); err != nil {
				dst.TransformAttributesPolymorphicTransformFilterWorkloads = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformAttributesPolymorphicTransformFilterWorkloads = nil
	}

	// try to unmarshal data into TransformAttributesPolymorphicTransformRenderTemplate
	err = newStrictDecoder(data).Decode(&dst.TransformAttributesPolymorphicTransformRenderTemplate)
	if err == nil {
		jsonTransformAttributesPolymorphicTransformRenderTemplate, _ := json.Marshal(dst.TransformAttributesPolymorphicTransformRenderTemplate)
		if string(jsonTransformAttributesPolymorphicTransformRenderTemplate) == "{}" { // empty struct
			dst.TransformAttributesPolymorphicTransformRenderTemplate = nil
		} else {
			if err = validator.Validate(dst.TransformAttributesPolymorphicTransformRenderTemplate); err != nil {
				dst.TransformAttributesPolymorphicTransformRenderTemplate = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformAttributesPolymorphicTransformRenderTemplate = nil
	}

	// try to unmarshal data into TransformAttributesPolymorphicTransformSampling
	err = newStrictDecoder(data).Decode(&dst.TransformAttributesPolymorphicTransformSampling)
	if err == nil {
		jsonTransformAttributesPolymorphicTransformSampling, _ := json.Marshal(dst.TransformAttributesPolymorphicTransformSampling)
		if string(jsonTransformAttributesPolymorphicTransformSampling) == "{}" { // empty struct
			dst.TransformAttributesPolymorphicTransformSampling = nil
		} else {
			if err = validator.Validate(dst.TransformAttributesPolymorphicTransformSampling); err != nil {
				dst.TransformAttributesPolymorphicTransformSampling = nil
			} else {
				match++
			}
		}
	} else {
		dst.TransformAttributesPolymorphicTransformSampling = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TransformAttributesPolymorphicTransformFilterWorkloads = nil
		dst.TransformAttributesPolymorphicTransformRenderTemplate = nil
		dst.TransformAttributesPolymorphicTransformSampling = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TransformAttributesPolymorphic)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TransformAttributesPolymorphic)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TransformAttributesPolymorphic) MarshalJSON() ([]byte, error) {
	if src.TransformAttributesPolymorphicTransformFilterWorkloads != nil {
		return json.Marshal(&src.TransformAttributesPolymorphicTransformFilterWorkloads)
	}

	if src.TransformAttributesPolymorphicTransformRenderTemplate != nil {
		return json.Marshal(&src.TransformAttributesPolymorphicTransformRenderTemplate)
	}

	if src.TransformAttributesPolymorphicTransformSampling != nil {
		return json.Marshal(&src.TransformAttributesPolymorphicTransformSampling)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TransformAttributesPolymorphic) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TransformAttributesPolymorphicTransformFilterWorkloads != nil {
		return obj.TransformAttributesPolymorphicTransformFilterWorkloads
	}

	if obj.TransformAttributesPolymorphicTransformRenderTemplate != nil {
		return obj.TransformAttributesPolymorphicTransformRenderTemplate
	}

	if obj.TransformAttributesPolymorphicTransformSampling != nil {
		return obj.TransformAttributesPolymorphicTransformSampling
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj TransformAttributesPolymorphic) GetActualInstanceValue() (interface{}) {
	if obj.TransformAttributesPolymorphicTransformFilterWorkloads != nil {
		return *obj.TransformAttributesPolymorphicTransformFilterWorkloads
	}

	if obj.TransformAttributesPolymorphicTransformRenderTemplate != nil {
		return *obj.TransformAttributesPolymorphicTransformRenderTemplate
	}

	if obj.TransformAttributesPolymorphicTransformSampling != nil {
		return *obj.TransformAttributesPolymorphicTransformSampling
	}

	// all schemas are nil
	return nil
}

type NullableTransformAttributesPolymorphic struct {
	value *TransformAttributesPolymorphic
	isSet bool
}

func (v NullableTransformAttributesPolymorphic) Get() *TransformAttributesPolymorphic {
	return v.value
}

func (v *NullableTransformAttributesPolymorphic) Set(val *TransformAttributesPolymorphic) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformAttributesPolymorphic) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformAttributesPolymorphic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformAttributesPolymorphic(val *TransformAttributesPolymorphic) *NullableTransformAttributesPolymorphic {
	return &NullableTransformAttributesPolymorphic{value: val, isSet: true}
}

func (v NullableTransformAttributesPolymorphic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformAttributesPolymorphic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


