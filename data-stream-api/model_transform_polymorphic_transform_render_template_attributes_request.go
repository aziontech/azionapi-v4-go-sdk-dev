/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
	"fmt"
)

// checks if the TransformPolymorphicTransformRenderTemplateAttributesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransformPolymorphicTransformRenderTemplateAttributesRequest{}

// TransformPolymorphicTransformRenderTemplateAttributesRequest struct for TransformPolymorphicTransformRenderTemplateAttributesRequest
type TransformPolymorphicTransformRenderTemplateAttributesRequest struct {
	// * `render_template` - Render Template
	Type string `json:"type"`
	Attributes TransformRenderTemplateRequest `json:"attributes"`
	AdditionalProperties map[string]interface{}
}

type _TransformPolymorphicTransformRenderTemplateAttributesRequest TransformPolymorphicTransformRenderTemplateAttributesRequest

// NewTransformPolymorphicTransformRenderTemplateAttributesRequest instantiates a new TransformPolymorphicTransformRenderTemplateAttributesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransformPolymorphicTransformRenderTemplateAttributesRequest(type_ string, attributes TransformRenderTemplateRequest) *TransformPolymorphicTransformRenderTemplateAttributesRequest {
	this := TransformPolymorphicTransformRenderTemplateAttributesRequest{}
	this.Type = type_
	this.Attributes = attributes
	return &this
}

// NewTransformPolymorphicTransformRenderTemplateAttributesRequestWithDefaults instantiates a new TransformPolymorphicTransformRenderTemplateAttributesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransformPolymorphicTransformRenderTemplateAttributesRequestWithDefaults() *TransformPolymorphicTransformRenderTemplateAttributesRequest {
	this := TransformPolymorphicTransformRenderTemplateAttributesRequest{}
	return &this
}

// GetType returns the Type field value
func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) SetType(v string) {
	o.Type = v
}

// GetAttributes returns the Attributes field value
func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) GetAttributes() TransformRenderTemplateRequest {
	if o == nil {
		var ret TransformRenderTemplateRequest
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) GetAttributesOk() (*TransformRenderTemplateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) SetAttributes(v TransformRenderTemplateRequest) {
	o.Attributes = v
}

func (o TransformPolymorphicTransformRenderTemplateAttributesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransformPolymorphicTransformRenderTemplateAttributesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["attributes"] = o.Attributes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TransformPolymorphicTransformRenderTemplateAttributesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransformPolymorphicTransformRenderTemplateAttributesRequest := _TransformPolymorphicTransformRenderTemplateAttributesRequest{}

	err = json.Unmarshal(data, &varTransformPolymorphicTransformRenderTemplateAttributesRequest)

	if err != nil {
		return err
	}

	*o = TransformPolymorphicTransformRenderTemplateAttributesRequest(varTransformPolymorphicTransformRenderTemplateAttributesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransformPolymorphicTransformRenderTemplateAttributesRequest struct {
	value *TransformPolymorphicTransformRenderTemplateAttributesRequest
	isSet bool
}

func (v NullableTransformPolymorphicTransformRenderTemplateAttributesRequest) Get() *TransformPolymorphicTransformRenderTemplateAttributesRequest {
	return v.value
}

func (v *NullableTransformPolymorphicTransformRenderTemplateAttributesRequest) Set(val *TransformPolymorphicTransformRenderTemplateAttributesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformPolymorphicTransformRenderTemplateAttributesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformPolymorphicTransformRenderTemplateAttributesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformPolymorphicTransformRenderTemplateAttributesRequest(val *TransformPolymorphicTransformRenderTemplateAttributesRequest) *NullableTransformPolymorphicTransformRenderTemplateAttributesRequest {
	return &NullableTransformPolymorphicTransformRenderTemplateAttributesRequest{value: val, isSet: true}
}

func (v NullableTransformPolymorphicTransformRenderTemplateAttributesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformPolymorphicTransformRenderTemplateAttributesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


