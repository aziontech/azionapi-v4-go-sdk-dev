openapi: 3.0.3
info:
  title: data-stream-api
  version: 1.0.0
  description: REST API OpenAPI documentation for the Data Stream
paths:
  /data_stream/data_sources:
    get:
      operationId: list_data_sources
      description: List all Data Sources.
      summary: List of Data Sources
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      tags:
      - Data Stream - Data Sources
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListDataSourceList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
  /data_stream/streams:
    get:
      operationId: list_data_streams
      description: List all Data Streams owned by your account.
      summary: List Data Streams
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Data Stream - Streams
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListDataStreamList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
    post:
      operationId: create_data_stream
      description: Create a new Data Stream in your account.
      summary: Create a Data Stream
      tags:
      - Data Stream - Streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStreamRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDataStream'
          description: Accepted
  /data_stream/streams/{id}:
    get:
      operationId: retrieve_data_stream
      description: Retrieve details from a specific Data Stream in your account.
      summary: Retrieve details of a Data Stream
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Streams
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveDataStream'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
    put:
      operationId: update_data_stream
      description: Update an existing Data Stream.
      summary: Update a Data Stream
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStreamRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDataStream'
          description: Accepted
    patch:
      operationId: partial_update_data_stream
      description: Update one or more fields of an existing Data Stream.
      summary: Partially update a Data Stream
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataStreamRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDataStream'
          description: Accepted
    delete:
      operationId: destroy_data_stream
      description: Destruction of a specific Data Stream in your account.
      summary: Destroy a Data Stream
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Streams
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteDataStream'
          description: Ok
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteDataStream'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
  /data_stream/templates:
    get:
      operationId: list_templates
      description: List all Templates owned by your account.
      summary: List Templates
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Data Stream - Templates
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListTemplateList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
    post:
      operationId: create_template
      description: Create a new custom Template in your account.
      summary: Create a Template
      tags:
      - Data Stream - Templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTemplate'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncTemplate'
          description: Accepted
  /data_stream/templates/{id}:
    get:
      operationId: retrieve_template
      description: Retrieve details from a specific Template in your account.
      summary: Retrieve details of a Template
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Templates
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveTemplate'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
    put:
      operationId: update_template
      description: Update an existing custom Template.
      summary: Update a Template
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTemplate'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncTemplate'
          description: Accepted
    patch:
      operationId: partial_update_template
      description: Update one or more fields of an existing custom Template.
      summary: Partially update a Template
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTemplateRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTemplate'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncTemplate'
          description: Accepted
    delete:
      operationId: destroy_template
      description: Destruction of a specific custom Template in your account.
      summary: Destroy a Template
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Templates
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteTemplate'
          description: Ok
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteTemplate'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10000:
                  value:
                    errors:
                    - status: '400'
                      code: '10000'
                      title: Validation Error
                      detail: Invalid data provided in the request.
                  summary: Validation Error
                  description: Invalid data provided in the request.
          description: Validation Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10004:
                  value:
                    errors:
                    - status: '404'
                      code: '10004'
                      title: Not Found
                      detail: Not found.
                  summary: Not Found
                  description: Not found.
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10007:
                  value:
                    errors:
                    - status: '405'
                      code: '10007'
                      title: Method Not Allowed
                      detail: Method "{method}" not allowed.
                  summary: Method Not Allowed
                  description: Method "{method}" not allowed.
          description: Method Not Allowed
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10005:
                  value:
                    errors:
                    - status: '406'
                      code: '10005'
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  description: Could not satisfy the request Accept header.
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10010:
                  value:
                    errors:
                    - status: '429'
                      code: '10010'
                      title: Throttled
                      detail: Request was throttled.
                  summary: Throttled
                  description: Request was throttled.
          description: Throttled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10001:
                  value:
                    errors:
                    - status: '401'
                      code: '10001'
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
                  summary: Authentication Failed
                  description: Invalid authentication credentials.
          description: Authentication Failed
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
              examples:
                Error-10003:
                  value:
                    errors:
                    - status: '403'
                      code: '10003'
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
                  summary: Permission Denied
                  description: You do not have permission to perform this action.
          description: Permission Denied
components:
  schemas:
    AWSKinesisFirehoseEndpoint:
      type: object
      properties:
        access_key:
          type: string
          maxLength: 150
        stream_name:
          type: string
          maxLength: 64
        region:
          type: string
          maxLength: 50
        secret_key:
          type: string
          maxLength: 150
      required:
      - access_key
      - region
      - secret_key
      - stream_name
      title: AWSKinesisFirehoseEndpoint
      additionalProperties: false
    AWSKinesisFirehoseEndpointRequest:
      type: object
      properties:
        access_key:
          type: string
          minLength: 1
          maxLength: 150
        stream_name:
          type: string
          minLength: 1
          maxLength: 64
        region:
          type: string
          minLength: 1
          maxLength: 50
        secret_key:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - access_key
      - region
      - secret_key
      - stream_name
      title: AWSKinesisFirehoseEndpointRequest
      additionalProperties: false
    AzureBlobStorageEndpoint:
      type: object
      properties:
        storage_account:
          type: string
          maxLength: 100
        container_name:
          type: string
          maxLength: 150
        blob_sas_token:
          type: string
          maxLength: 250
      required:
      - blob_sas_token
      - container_name
      - storage_account
      title: AzureBlobStorageEndpoint
      additionalProperties: false
    AzureBlobStorageEndpointRequest:
      type: object
      properties:
        storage_account:
          type: string
          minLength: 1
          maxLength: 100
        container_name:
          type: string
          minLength: 1
          maxLength: 150
        blob_sas_token:
          type: string
          minLength: 1
          maxLength: 250
      required:
      - blob_sas_token
      - container_name
      - storage_account
      title: AzureBlobStorageEndpointRequest
      additionalProperties: false
    AzureMonitorEndpoint:
      type: object
      properties:
        log_type:
          type: string
          maxLength: 100
        shared_key:
          type: string
          maxLength: 150
        time_generated_field:
          type: string
          nullable: true
          maxLength: 50
        workspace_id:
          type: string
          maxLength: 150
      required:
      - log_type
      - shared_key
      - workspace_id
      title: AzureMonitorEndpoint
      additionalProperties: false
    AzureMonitorEndpointRequest:
      type: object
      properties:
        log_type:
          type: string
          minLength: 1
          maxLength: 100
        shared_key:
          type: string
          minLength: 1
          maxLength: 150
        time_generated_field:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
        workspace_id:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - log_type
      - shared_key
      - workspace_id
      title: AzureMonitorEndpointRequest
      additionalProperties: false
    BigQueryEndpoint:
      type: object
      properties:
        dataset_id:
          type: string
          maxLength: 1024
        project_id:
          type: string
          maxLength: 100
        table_id:
          type: string
          maxLength: 1024
        service_account_key:
          type: string
      required:
      - dataset_id
      - project_id
      - service_account_key
      - table_id
      title: BigQueryEndpoint
      additionalProperties: false
    BigQueryEndpointRequest:
      type: object
      properties:
        dataset_id:
          type: string
          minLength: 1
          maxLength: 1024
        project_id:
          type: string
          minLength: 1
          maxLength: 100
        table_id:
          type: string
          minLength: 1
          maxLength: 1024
        service_account_key:
          type: string
          minLength: 1
      required:
      - dataset_id
      - project_id
      - service_account_key
      - table_id
      title: BigQueryEndpointRequest
      additionalProperties: false
    ContentTypeEnum:
      enum:
      - plain/text
      - application/gzip
      type: string
      description: |-
        * `plain/text` - plain/text
        * `application/gzip` - application/gzip
      title: ContentTypeEnum
      additionalProperties: false
    DataSourceAttributes:
      type: object
      properties:
        data_source:
          $ref: '#/components/schemas/DataSourceEnum'
      required:
      - data_source
      title: DataSourceAttributes
      additionalProperties: false
    DataSourceAttributesRequest:
      type: object
      properties:
        data_source:
          $ref: '#/components/schemas/DataSourceEnum'
      required:
      - data_source
      title: DataSourceAttributesRequest
      additionalProperties: false
    DataSourceEnum:
      enum:
      - http
      - waf
      - functions
      - activity
      type: string
      description: |-
        * `http` - Edge Applications
        * `waf` - WAF Events
        * `functions` - Edge Functions
        * `activity` - Activity History
      title: DataSourceEnum
      additionalProperties: false
    DataStream:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
        last_editor:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 100
          minLength: 1
        last_modified:
          type: string
          format: date-time
          readOnly: true
        product_version:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 100
          minLength: 1
        active:
          type: boolean
          default: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/InputPolymorphic'
        transform:
          type: array
          items:
            $ref: '#/components/schemas/TransformPolymorphic'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
      required:
      - id
      - inputs
      - last_editor
      - last_modified
      - name
      - outputs
      - product_version
      - transform
      title: DataStream
      additionalProperties: false
    DataStreamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        active:
          type: boolean
          default: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/InputPolymorphicRequest'
        transform:
          type: array
          items:
            $ref: '#/components/schemas/TransformPolymorphicRequest'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/OutputRequest'
      required:
      - inputs
      - name
      - outputs
      - transform
      title: DataStreamRequest
      additionalProperties: false
    DatadogEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
        api_key:
          type: string
          maxLength: 255
      required:
      - api_key
      - url
      title: DatadogEndpoint
      additionalProperties: false
    DatadogEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        api_key:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - api_key
      - url
      title: DatadogEndpointRequest
      additionalProperties: false
    ElasticsearchEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
        api_key:
          type: string
          maxLength: 255
      required:
      - api_key
      - url
      title: ElasticsearchEndpoint
      additionalProperties: false
    ElasticsearchEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        api_key:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - api_key
      - url
      title: ElasticsearchEndpointRequest
      additionalProperties: false
    FilterWorkloadsAttributes:
      type: object
      description: Serializer for filter_workloads transform attributes.
      properties:
        workloads:
          type: array
          items:
            type: integer
            minimum: 1
          maxItems: 100
          minItems: 1
      required:
      - workloads
      title: FilterWorkloadsAttributes
      additionalProperties: false
    FilterWorkloadsAttributesRequest:
      type: object
      description: Serializer for filter_workloads transform attributes.
      properties:
        workloads:
          type: array
          items:
            type: integer
            minimum: 1
          maxItems: 100
          minItems: 1
      required:
      - workloads
      title: FilterWorkloadsAttributesRequest
      additionalProperties: false
    HttpPostEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
        log_line_separator:
          type: string
          maxLength: 100
        payload_format:
          type: string
          maxLength: 250
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 1000000
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
            pattern: .*
            maxLength: 1024
            minLength: 1
      required:
      - headers
      - url
      title: HttpPostEndpoint
      additionalProperties: false
    HttpPostEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        log_line_separator:
          type: string
          maxLength: 100
        payload_format:
          type: string
          minLength: 1
          maxLength: 250
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 1000000
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
            minLength: 1
            pattern: .*
            maxLength: 1024
      required:
      - headers
      - url
      title: HttpPostEndpointRequest
      additionalProperties: false
    InputDataSource:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InputDataSourceTypeEnum'
        attributes:
          $ref: '#/components/schemas/DataSourceAttributes'
      required:
      - attributes
      - type
      title: InputDataSource
      additionalProperties: false
    InputDataSourceRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InputDataSourceTypeEnum'
        attributes:
          $ref: '#/components/schemas/DataSourceAttributesRequest'
      required:
      - attributes
      - type
      title: InputDataSourceRequest
      additionalProperties: false
    InputDataSourceTypeEnum:
      enum:
      - raw_logs
      type: string
      description: '* `raw_logs` - Raw Logs'
      title: InputDataSourceTypeEnum
      additionalProperties: false
    InputPolymorphic:
      oneOf:
      - $ref: '#/components/schemas/InputPolymorphicInputDataSource'
      discriminator:
        propertyName: type
        mapping:
          raw_logs: '#/components/schemas/InputPolymorphicInputDataSource'
      title: InputPolymorphic
      additionalProperties: true
    InputPolymorphicInputDataSource:
      allOf:
      - $ref: '#/components/schemas/InputPolymorphicShared'
      - $ref: '#/components/schemas/InputDataSource'
      title: InputPolymorphicInputDataSource
      additionalProperties: false
    InputPolymorphicInputDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/InputPolymorphicShared'
      - $ref: '#/components/schemas/InputDataSourceRequest'
      title: InputPolymorphicInputDataSourceRequest
      additionalProperties: false
    InputPolymorphicRequest:
      oneOf:
      - $ref: '#/components/schemas/InputPolymorphicInputDataSourceRequest'
      discriminator:
        propertyName: type
        mapping:
          raw_logs: '#/components/schemas/InputPolymorphicInputDataSourceRequest'
      title: InputPolymorphicRequest
      additionalProperties: true
    InputPolymorphicShared:
      type: object
      properties:
        type:
          type: string
          minLength: 1
          pattern: .*
      required:
      - type
      title: InputPolymorphicShared
      additionalProperties: false
    JSONAPIErrorObject:
      type: object
      description: Serializer for a single JSON:API error object.
      properties:
        status:
          type: string
          description: The HTTP status code applicable to this problem
          pattern: ^\d{3}$
          maxLength: 3
          minLength: 3
        code:
          type: string
          description: An application-specific error code
          pattern: ^\d{5}$
          maxLength: 5
          minLength: 5
        title:
          type: string
          description: A short, human-readable summary of the problem
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
        source:
          allOf:
          - $ref: '#/components/schemas/JSONAPIErrorSource'
          description: References to the primary source of the error
        meta:
          type: object
          additionalProperties: {}
          description: Non-standard meta-information about the error
      title: JSONAPIErrorObject
      additionalProperties: false
    JSONAPIErrorResponse:
      type: object
      description: Serializer for a JSON:API error response.
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JSONAPIErrorObject'
          description: Array of error objects
      required:
      - errors
      title: JSONAPIErrorResponse
      additionalProperties: false
    JSONAPIErrorSource:
      type: object
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          type: string
          description: JSON Pointer to the value in the request document that caused
            the error
          pattern: ^(/[^/]+)+$
          maxLength: 4096
          minLength: 1
        parameter:
          type: string
          description: URI query parameter that caused the error
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
        header:
          type: string
          description: Request header name that caused the error
          pattern: ^.*$
          maxLength: 4096
          minLength: 1
      title: JSONAPIErrorSource
      additionalProperties: false
    KafkaEndpoint:
      type: object
      properties:
        bootstrap_servers:
          type: string
          maxLength: 150
        kafka_topic:
          type: string
          maxLength: 150
        use_tls:
          type: boolean
      required:
      - bootstrap_servers
      - kafka_topic
      - use_tls
      title: KafkaEndpoint
      additionalProperties: false
    KafkaEndpointRequest:
      type: object
      properties:
        bootstrap_servers:
          type: string
          minLength: 1
          maxLength: 150
        kafka_topic:
          type: string
          minLength: 1
          maxLength: 150
        use_tls:
          type: boolean
      required:
      - bootstrap_servers
      - kafka_topic
      - use_tls
      title: KafkaEndpointRequest
      additionalProperties: false
    Output:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OutputTypeEnum'
        attributes:
          $ref: '#/components/schemas/OutputPolymorphic'
      required:
      - attributes
      - type
      title: Output
      additionalProperties: false
    OutputPolymorphic:
      oneOf:
      - $ref: '#/components/schemas/HttpPostEndpoint'
      - $ref: '#/components/schemas/KafkaEndpoint'
      - $ref: '#/components/schemas/S3Endpoint'
      - $ref: '#/components/schemas/BigQueryEndpoint'
      - $ref: '#/components/schemas/ElasticsearchEndpoint'
      - $ref: '#/components/schemas/AWSKinesisFirehoseEndpoint'
      - $ref: '#/components/schemas/DatadogEndpoint'
      - $ref: '#/components/schemas/QRadarEndpoint'
      - $ref: '#/components/schemas/AzureMonitorEndpoint'
      - $ref: '#/components/schemas/AzureBlobStorageEndpoint'
      - $ref: '#/components/schemas/SplunkEndpoint'
      discriminator:
        propertyName: endpoint_type
        mapping:
          standard: '#/components/schemas/HttpPostEndpoint'
          kafka: '#/components/schemas/KafkaEndpoint'
          s3: '#/components/schemas/S3Endpoint'
          big_query: '#/components/schemas/BigQueryEndpoint'
          elasticsearch: '#/components/schemas/ElasticsearchEndpoint'
          aws_kinesis_firehose: '#/components/schemas/AWSKinesisFirehoseEndpoint'
          datadog: '#/components/schemas/DatadogEndpoint'
          qradar: '#/components/schemas/QRadarEndpoint'
          azure_monitor: '#/components/schemas/AzureMonitorEndpoint'
          azure_blob_storage: '#/components/schemas/AzureBlobStorageEndpoint'
          splunk: '#/components/schemas/SplunkEndpoint'
      title: OutputPolymorphic
      additionalProperties: true
    OutputPolymorphicRequest:
      oneOf:
      - $ref: '#/components/schemas/HttpPostEndpointRequest'
      - $ref: '#/components/schemas/KafkaEndpointRequest'
      - $ref: '#/components/schemas/S3EndpointRequest'
      - $ref: '#/components/schemas/BigQueryEndpointRequest'
      - $ref: '#/components/schemas/ElasticsearchEndpointRequest'
      - $ref: '#/components/schemas/AWSKinesisFirehoseEndpointRequest'
      - $ref: '#/components/schemas/DatadogEndpointRequest'
      - $ref: '#/components/schemas/QRadarEndpointRequest'
      - $ref: '#/components/schemas/AzureMonitorEndpointRequest'
      - $ref: '#/components/schemas/AzureBlobStorageEndpointRequest'
      - $ref: '#/components/schemas/SplunkEndpointRequest'
      discriminator:
        propertyName: endpoint_type
        mapping:
          standard: '#/components/schemas/HttpPostEndpointRequest'
          kafka: '#/components/schemas/KafkaEndpointRequest'
          s3: '#/components/schemas/S3EndpointRequest'
          big_query: '#/components/schemas/BigQueryEndpointRequest'
          elasticsearch: '#/components/schemas/ElasticsearchEndpointRequest'
          aws_kinesis_firehose: '#/components/schemas/AWSKinesisFirehoseEndpointRequest'
          datadog: '#/components/schemas/DatadogEndpointRequest'
          qradar: '#/components/schemas/QRadarEndpointRequest'
          azure_monitor: '#/components/schemas/AzureMonitorEndpointRequest'
          azure_blob_storage: '#/components/schemas/AzureBlobStorageEndpointRequest'
          splunk: '#/components/schemas/SplunkEndpointRequest'
      title: OutputPolymorphicRequest
      additionalProperties: true
    OutputRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OutputTypeEnum'
        attributes:
          $ref: '#/components/schemas/OutputPolymorphicRequest'
      required:
      - attributes
      - type
      title: OutputRequest
      additionalProperties: false
    OutputTypeEnum:
      enum:
      - standard
      - kafka
      - s3
      - big_query
      - elasticsearch
      - splunk
      - aws_kinesis_firehose
      - datadog
      - qradar
      - azure_monitor
      - azure_blob_storage
      type: string
      description: |-
        * `standard` - Standard HTTP/HTTPS POST
        * `kafka` - Apache Kafka
        * `s3` - Simple Storage Service (S3)
        * `big_query` - Google BigQuery
        * `elasticsearch` - Elasticsearch
        * `splunk` - Splunk
        * `aws_kinesis_firehose` - AWS Kinesis Data Firehose
        * `datadog` - Datadog
        * `qradar` - IBM QRadar
        * `azure_monitor` - Azure Monitor
        * `azure_blob_storage` - Azure Blob Storage
      title: OutputTypeEnum
      additionalProperties: false
    PaginatedResponseListDataSourceList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListDataSource'
      title: PaginatedResponseListDataSourceList
      additionalProperties: false
    PaginatedResponseListDataStreamList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListDataStream'
      title: PaginatedResponseListDataStreamList
      additionalProperties: false
    PaginatedResponseListTemplateList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListTemplate'
      title: PaginatedResponseListTemplateList
      additionalProperties: false
    PatchedDataStreamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        active:
          type: boolean
          default: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/InputPolymorphicRequest'
        transform:
          type: array
          items:
            $ref: '#/components/schemas/TransformPolymorphicRequest'
      title: PatchedDataStreamRequest
      additionalProperties: false
    PatchedTemplateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        active:
          type: boolean
          default: true
        data_set:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
      title: PatchedTemplateRequest
      additionalProperties: false
    QRadarEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
      title: QRadarEndpoint
      additionalProperties: false
    QRadarEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
      required:
      - url
      title: QRadarEndpointRequest
      additionalProperties: false
    RenderTemplateAttributes:
      type: object
      description: Serializer for render_template transform attributes.
      properties:
        template:
          type: integer
          minimum: 1
      required:
      - template
      title: RenderTemplateAttributes
      additionalProperties: false
    RenderTemplateAttributesRequest:
      type: object
      description: Serializer for render_template transform attributes.
      properties:
        template:
          type: integer
          minimum: 1
      required:
      - template
      title: RenderTemplateAttributesRequest
      additionalProperties: false
    ResponseAsyncDataStream:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/DataStream'
      required:
      - data
      title: ResponseAsyncDataStream
      additionalProperties: false
    ResponseAsyncDeleteDataStream:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteDataStream
      additionalProperties: false
    ResponseAsyncDeleteTemplate:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteTemplate
      additionalProperties: false
    ResponseAsyncTemplate:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/Template'
      required:
      - data
      title: ResponseAsyncTemplate
      additionalProperties: false
    ResponseDataStream:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/DataStream'
      required:
      - data
      title: ResponseDataStream
      additionalProperties: false
    ResponseDeleteDataStream:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseDeleteDataStream
      additionalProperties: false
    ResponseDeleteTemplate:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseDeleteTemplate
      additionalProperties: false
    ResponseListDataSource:
      type: object
      properties:
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          readOnly: true
          title: DataSource Name
        active:
          type: boolean
          readOnly: true
          title: Is Active
      required:
      - active
      - name
      - slug
      title: ResponseListDataSource
      additionalProperties: false
    ResponseListDataStream:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
        last_editor:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 100
          minLength: 1
        last_modified:
          type: string
          format: date-time
          readOnly: true
        product_version:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 100
          minLength: 1
        active:
          type: boolean
          default: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/InputPolymorphic'
        transform:
          type: array
          items:
            $ref: '#/components/schemas/TransformPolymorphic'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
      required:
      - id
      - inputs
      - last_editor
      - last_modified
      - name
      - outputs
      - product_version
      - transform
      title: ResponseListDataStream
      additionalProperties: false
    ResponseListTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
          minLength: 1
        last_editor:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 100
          minLength: 1
        last_modified:
          type: string
          format: date-time
          readOnly: true
        custom:
          type: boolean
          readOnly: true
        active:
          type: boolean
          default: true
        data_set:
          type: string
          pattern: .*
          maxLength: 100
          minLength: 1
      required:
      - custom
      - data_set
      - id
      - last_editor
      - last_modified
      - name
      title: ResponseListTemplate
      additionalProperties: false
    ResponseRetrieveDataStream:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DataStream'
      required:
      - data
      title: ResponseRetrieveDataStream
      additionalProperties: false
    ResponseRetrieveTemplate:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Template'
      required:
      - data
      title: ResponseRetrieveTemplate
      additionalProperties: false
    ResponseTemplate:
      type: object
      properties:
        state:
          type: string
          default: executed
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/Template'
      required:
      - data
      title: ResponseTemplate
      additionalProperties: false
    S3Endpoint:
      type: object
      properties:
        access_key:
          type: string
          maxLength: 150
        region:
          type: string
          maxLength: 50
        object_key_prefix:
          type: string
          nullable: true
          maxLength: 150
        bucket_name:
          type: string
          maxLength: 150
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        host_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - access_key
      - bucket_name
      - content_type
      - host_url
      - region
      title: S3Endpoint
      additionalProperties: false
    S3EndpointRequest:
      type: object
      properties:
        access_key:
          type: string
          minLength: 1
          maxLength: 150
        region:
          type: string
          minLength: 1
          maxLength: 50
        object_key_prefix:
          type: string
          nullable: true
          minLength: 1
          maxLength: 150
        bucket_name:
          type: string
          minLength: 1
          maxLength: 150
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        host_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
      required:
      - access_key
      - bucket_name
      - content_type
      - host_url
      - region
      title: S3EndpointRequest
      additionalProperties: false
    SamplingAttributes:
      type: object
      description: Serializer for sampling transform attributes.
      properties:
        rate:
          type: integer
          maximum: 100
          minimum: 1
          default: 100
      title: SamplingAttributes
      additionalProperties: false
    SamplingAttributesRequest:
      type: object
      description: Serializer for sampling transform attributes.
      properties:
        rate:
          type: integer
          maximum: 100
          minimum: 1
          default: 100
      title: SamplingAttributesRequest
      additionalProperties: false
    SplunkEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
        api_key:
          type: string
          maxLength: 255
      required:
      - api_key
      - url
      title: SplunkEndpoint
      additionalProperties: false
    SplunkEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        api_key:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - api_key
      - url
      title: SplunkEndpointRequest
      additionalProperties: false
    Template:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
          minLength: 1
        last_editor:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 100
          minLength: 1
        last_modified:
          type: string
          format: date-time
          readOnly: true
        custom:
          type: boolean
          readOnly: true
        active:
          type: boolean
          default: true
        data_set:
          type: string
          pattern: .*
          maxLength: 100
          minLength: 1
      required:
      - custom
      - data_set
      - id
      - last_editor
      - last_modified
      - name
      title: Template
      additionalProperties: false
    TemplateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        active:
          type: boolean
          default: true
        data_set:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
      required:
      - data_set
      - name
      title: TemplateRequest
      additionalProperties: false
    TransformFilterWorkloads:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransformFilterWorkloadsTypeEnum'
        attributes:
          $ref: '#/components/schemas/FilterWorkloadsAttributes'
      required:
      - attributes
      - type
      title: TransformFilterWorkloads
      additionalProperties: false
    TransformFilterWorkloadsRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransformFilterWorkloadsTypeEnum'
        attributes:
          $ref: '#/components/schemas/FilterWorkloadsAttributesRequest'
      required:
      - attributes
      - type
      title: TransformFilterWorkloadsRequest
      additionalProperties: false
    TransformFilterWorkloadsTypeEnum:
      enum:
      - filter_workloads
      type: string
      description: '* `filter_workloads` - Filter Workloads'
      title: TransformFilterWorkloadsTypeEnum
      additionalProperties: false
    TransformPolymorphic:
      oneOf:
      - $ref: '#/components/schemas/TransformPolymorphicTransformSampling'
      - $ref: '#/components/schemas/TransformPolymorphicTransformFilterWorkloads'
      - $ref: '#/components/schemas/TransformPolymorphicTransformRenderTemplate'
      discriminator:
        propertyName: type
        mapping:
          sampling: '#/components/schemas/TransformPolymorphicTransformSampling'
          filter_workloads: '#/components/schemas/TransformPolymorphicTransformFilterWorkloads'
          render_template: '#/components/schemas/TransformPolymorphicTransformRenderTemplate'
      title: TransformPolymorphic
      additionalProperties: true
    TransformPolymorphicRequest:
      oneOf:
      - $ref: '#/components/schemas/TransformPolymorphicTransformSamplingRequest'
      - $ref: '#/components/schemas/TransformPolymorphicTransformFilterWorkloadsRequest'
      - $ref: '#/components/schemas/TransformPolymorphicTransformRenderTemplateRequest'
      discriminator:
        propertyName: type
        mapping:
          sampling: '#/components/schemas/TransformPolymorphicTransformSamplingRequest'
          filter_workloads: '#/components/schemas/TransformPolymorphicTransformFilterWorkloadsRequest'
          render_template: '#/components/schemas/TransformPolymorphicTransformRenderTemplateRequest'
      title: TransformPolymorphicRequest
      additionalProperties: true
    TransformPolymorphicShared:
      type: object
      properties:
        type:
          type: string
          minLength: 1
          pattern: .*
      required:
      - type
      title: TransformPolymorphicShared
      additionalProperties: false
    TransformPolymorphicTransformFilterWorkloads:
      allOf:
      - $ref: '#/components/schemas/TransformPolymorphicShared'
      - $ref: '#/components/schemas/TransformFilterWorkloads'
      title: TransformPolymorphicTransformFilterWorkloads
      additionalProperties: false
    TransformPolymorphicTransformFilterWorkloadsRequest:
      allOf:
      - $ref: '#/components/schemas/TransformPolymorphicShared'
      - $ref: '#/components/schemas/TransformFilterWorkloadsRequest'
      title: TransformPolymorphicTransformFilterWorkloadsRequest
      additionalProperties: false
    TransformPolymorphicTransformRenderTemplate:
      allOf:
      - $ref: '#/components/schemas/TransformPolymorphicShared'
      - $ref: '#/components/schemas/TransformRenderTemplate'
      title: TransformPolymorphicTransformRenderTemplate
      additionalProperties: false
    TransformPolymorphicTransformRenderTemplateRequest:
      allOf:
      - $ref: '#/components/schemas/TransformPolymorphicShared'
      - $ref: '#/components/schemas/TransformRenderTemplateRequest'
      title: TransformPolymorphicTransformRenderTemplateRequest
      additionalProperties: false
    TransformPolymorphicTransformSampling:
      allOf:
      - $ref: '#/components/schemas/TransformPolymorphicShared'
      - $ref: '#/components/schemas/TransformSampling'
      title: TransformPolymorphicTransformSampling
      additionalProperties: false
    TransformPolymorphicTransformSamplingRequest:
      allOf:
      - $ref: '#/components/schemas/TransformPolymorphicShared'
      - $ref: '#/components/schemas/TransformSamplingRequest'
      title: TransformPolymorphicTransformSamplingRequest
      additionalProperties: false
    TransformRenderTemplate:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransformRenderTemplateTypeEnum'
        attributes:
          $ref: '#/components/schemas/RenderTemplateAttributes'
      required:
      - attributes
      - type
      title: TransformRenderTemplate
      additionalProperties: false
    TransformRenderTemplateRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransformRenderTemplateTypeEnum'
        attributes:
          $ref: '#/components/schemas/RenderTemplateAttributesRequest'
      required:
      - attributes
      - type
      title: TransformRenderTemplateRequest
      additionalProperties: false
    TransformRenderTemplateTypeEnum:
      enum:
      - render_template
      type: string
      description: '* `render_template` - Render Template'
      title: TransformRenderTemplateTypeEnum
      additionalProperties: false
    TransformSampling:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransformSamplingTypeEnum'
        attributes:
          $ref: '#/components/schemas/SamplingAttributes'
      required:
      - attributes
      - type
      title: TransformSampling
      additionalProperties: false
    TransformSamplingRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransformSamplingTypeEnum'
        attributes:
          $ref: '#/components/schemas/SamplingAttributesRequest'
      required:
      - attributes
      - type
      title: TransformSamplingRequest
      additionalProperties: false
    TransformSamplingTypeEnum:
      enum:
      - sampling
      type: string
      description: '* `sampling` - Sampling'
      title: TransformSamplingTypeEnum
      additionalProperties: false
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
