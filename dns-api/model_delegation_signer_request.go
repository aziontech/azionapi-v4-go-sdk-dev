/*
dns-api

REST API OpenAPI documentation for the DNS API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dnsapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DelegationSignerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelegationSignerRequest{}

// DelegationSignerRequest struct for DelegationSignerRequest
type DelegationSignerRequest struct {
	AlgorithmType AlgTypeRequest `json:"algorithm_type"`
	Digest string `json:"digest"`
	DigestType AlgTypeRequest `json:"digest_type"`
	KeyTag int64 `json:"key_tag"`
}

type _DelegationSignerRequest DelegationSignerRequest

// NewDelegationSignerRequest instantiates a new DelegationSignerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelegationSignerRequest(algorithmType AlgTypeRequest, digest string, digestType AlgTypeRequest, keyTag int64) *DelegationSignerRequest {
	this := DelegationSignerRequest{}
	this.AlgorithmType = algorithmType
	this.Digest = digest
	this.DigestType = digestType
	this.KeyTag = keyTag
	return &this
}

// NewDelegationSignerRequestWithDefaults instantiates a new DelegationSignerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelegationSignerRequestWithDefaults() *DelegationSignerRequest {
	this := DelegationSignerRequest{}
	return &this
}

// GetAlgorithmType returns the AlgorithmType field value
func (o *DelegationSignerRequest) GetAlgorithmType() AlgTypeRequest {
	if o == nil {
		var ret AlgTypeRequest
		return ret
	}

	return o.AlgorithmType
}

// GetAlgorithmTypeOk returns a tuple with the AlgorithmType field value
// and a boolean to check if the value has been set.
func (o *DelegationSignerRequest) GetAlgorithmTypeOk() (*AlgTypeRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgorithmType, true
}

// SetAlgorithmType sets field value
func (o *DelegationSignerRequest) SetAlgorithmType(v AlgTypeRequest) {
	o.AlgorithmType = v
}

// GetDigest returns the Digest field value
func (o *DelegationSignerRequest) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *DelegationSignerRequest) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *DelegationSignerRequest) SetDigest(v string) {
	o.Digest = v
}

// GetDigestType returns the DigestType field value
func (o *DelegationSignerRequest) GetDigestType() AlgTypeRequest {
	if o == nil {
		var ret AlgTypeRequest
		return ret
	}

	return o.DigestType
}

// GetDigestTypeOk returns a tuple with the DigestType field value
// and a boolean to check if the value has been set.
func (o *DelegationSignerRequest) GetDigestTypeOk() (*AlgTypeRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DigestType, true
}

// SetDigestType sets field value
func (o *DelegationSignerRequest) SetDigestType(v AlgTypeRequest) {
	o.DigestType = v
}

// GetKeyTag returns the KeyTag field value
func (o *DelegationSignerRequest) GetKeyTag() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.KeyTag
}

// GetKeyTagOk returns a tuple with the KeyTag field value
// and a boolean to check if the value has been set.
func (o *DelegationSignerRequest) GetKeyTagOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyTag, true
}

// SetKeyTag sets field value
func (o *DelegationSignerRequest) SetKeyTag(v int64) {
	o.KeyTag = v
}

func (o DelegationSignerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelegationSignerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algorithm_type"] = o.AlgorithmType
	toSerialize["digest"] = o.Digest
	toSerialize["digest_type"] = o.DigestType
	toSerialize["key_tag"] = o.KeyTag
	return toSerialize, nil
}

func (o *DelegationSignerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algorithm_type",
		"digest",
		"digest_type",
		"key_tag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDelegationSignerRequest := _DelegationSignerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDelegationSignerRequest)

	if err != nil {
		return err
	}

	*o = DelegationSignerRequest(varDelegationSignerRequest)

	return err
}

type NullableDelegationSignerRequest struct {
	value *DelegationSignerRequest
	isSet bool
}

func (v NullableDelegationSignerRequest) Get() *DelegationSignerRequest {
	return v.value
}

func (v *NullableDelegationSignerRequest) Set(val *DelegationSignerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDelegationSignerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDelegationSignerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelegationSignerRequest(val *DelegationSignerRequest) *NullableDelegationSignerRequest {
	return &NullableDelegationSignerRequest{value: val, isSet: true}
}

func (v NullableDelegationSignerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelegationSignerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


