/*
dns-api

Testing DNSZonesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package dnsapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_dnsapi_DNSZonesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DNSZonesAPIService CreateDnsZone", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DNSZonesAPI.CreateDnsZone(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DNSZonesAPIService DestroyDnsZone", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var zoneId string

		resp, httpRes, err := apiClient.DNSZonesAPI.DestroyDnsZone(context.Background(), zoneId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DNSZonesAPIService ListDnsZones", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DNSZonesAPI.ListDnsZones(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DNSZonesAPIService PartialUpdateDnsZone", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var zoneId string

		resp, httpRes, err := apiClient.DNSZonesAPI.PartialUpdateDnsZone(context.Background(), zoneId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DNSZonesAPIService RetrieveDnsZone", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var zoneId string

		resp, httpRes, err := apiClient.DNSZonesAPI.RetrieveDnsZone(context.Background(), zoneId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DNSZonesAPIService UpdateDnsZone", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var zoneId string

		resp, httpRes, err := apiClient.DNSZonesAPI.UpdateDnsZone(context.Background(), zoneId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
