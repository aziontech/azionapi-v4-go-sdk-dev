openapi: 3.0.3
info:
  description: REST API OpenAPI documentation for the EdgeSQL API
  title: edgesql-api
  version: 1.0.0
servers:
- url: /
paths:
  /edge_sql/databases:
    get:
      description: List all databases owned by your account.
      operationId: list databases
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Which field to use when ordering the results.
          (Valid fields: id, name, status, active, last_modified)
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A numeric value that indicates the number of items per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOpenAPISchemaList"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: List databases
      tags:
      - SQL
    post:
      description: Create a new database for your account.
      operationId: create database
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseOpenAPISchema"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncOpenAPISchema"
          description: ""
        "422":
          content:
            application/json:
              examples:
                Error-10073:
                  description: Unprocessable entity.
                  summary: Unprocessable Entity
                  value:
                    errors:
                    - status: "422"
                      code: "10073"
                      title: Unprocessable Entity
                      detail: Unprocessable entity.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Unprocessable Entity
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Create a database
      tags:
      - SQL
  /edge_sql/databases/{id}:
    delete:
      description: Schedule the destruction of a specific database in your account.
      operationId: destroy database
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeleteOpenAPISchema"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncDeleteOpenAPISchema"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Destroy a database
      tags:
      - SQL
    get:
      description: Retrieve details from a specific database in your account.
      operationId: retrieve database
      parameters:
      - description: Comma-separated list of field names to include in the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRetrieveOpenAPISchema"
          description: ""
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Retrieve details from a database
      tags:
      - SQL
  /edge_sql/databases/{id}/query:
    post:
      description: Execute a query into a database for your account.
      operationId: execute query
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SQLStatementsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSQLResult"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAsyncSQLResult"
          description: ""
        "422":
          content:
            application/json:
              examples:
                Error-10073:
                  description: Unprocessable entity.
                  summary: Unprocessable Entity
                  value:
                    errors:
                    - status: "422"
                      code: "10073"
                      title: Unprocessable Entity
                      detail: Unprocessable entity.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Unprocessable Entity
        "401":
          content:
            application/json:
              examples:
                Error-10001:
                  description: Invalid authentication credentials.
                  summary: Authentication Failed
                  value:
                    errors:
                    - status: "401"
                      code: "10001"
                      title: Authentication Failed
                      detail: Invalid authentication credentials.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Authentication Failed
        "403":
          content:
            application/json:
              examples:
                Error-10003:
                  description: You do not have permission to perform this action.
                  summary: Permission Denied
                  value:
                    errors:
                    - status: "403"
                      code: "10003"
                      title: Permission Denied
                      detail: You do not have permission to perform this action.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Permission Denied
        "400":
          content:
            application/json:
              examples:
                Error-10000:
                  description: Invalid data provided in the request.
                  summary: Validation Error
                  value:
                    errors:
                    - status: "400"
                      code: "10000"
                      title: Validation Error
                      detail: Invalid data provided in the request.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Validation Error
        "404":
          content:
            application/json:
              examples:
                Error-10004:
                  description: Not found.
                  summary: Not Found
                  value:
                    errors:
                    - status: "404"
                      code: "10004"
                      title: Not Found
                      detail: Not found.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Found
        "405":
          content:
            application/json:
              examples:
                Error-10007:
                  description: "Method \"{method}\" not allowed."
                  summary: Method Not Allowed
                  value:
                    errors:
                    - status: "405"
                      code: "10007"
                      title: Method Not Allowed
                      detail: "Method \"{method}\" not allowed."
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Method Not Allowed
        "406":
          content:
            application/json:
              examples:
                Error-10005:
                  description: Could not satisfy the request Accept header.
                  summary: Not Acceptable
                  value:
                    errors:
                    - status: "406"
                      code: "10005"
                      title: Not Acceptable
                      detail: Could not satisfy the request Accept header.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Not Acceptable
        "429":
          content:
            application/json:
              examples:
                Error-10010:
                  description: Request was throttled.
                  summary: Throttled
                  value:
                    errors:
                    - status: "429"
                      code: "10010"
                      title: Throttled
                      detail: Request was throttled.
              schema:
                $ref: "#/components/schemas/JSONAPIErrorResponse"
          description: Throttled
      security:
      - TokenAuth: []
      - BearerAuth: []
      summary: Execute a query into a database
      tags:
      - SQL
components:
  schemas:
    DatabaseRequest:
      additionalProperties: false
      example:
        name: name
        active: true
      properties:
        name:
          maxLength: 50
          minLength: 6
          type: string
        active:
          type: boolean
      required:
      - name
      title: DatabaseRequest
      type: object
    JSONAPIErrorObject:
      additionalProperties: false
      description: Serializer for a single JSON:API error object.
      example:
        code: code
        meta: ""
        detail: detail
        source: ""
        title: title
        status: status
      properties:
        status:
          description: The HTTP status code applicable to this problem
          maxLength: 3
          minLength: 3
          type: string
        code:
          description: An application-specific error code
          maxLength: 5
          minLength: 5
          type: string
        title:
          description: "A short, human-readable summary of the problem"
          maxLength: 4096
          minLength: 1
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          maxLength: 4096
          minLength: 1
          type: string
        source:
          allOf:
          - $ref: "#/components/schemas/JSONAPIErrorSource"
          description: References to the primary source of the error
        meta:
          description: Non-standard meta-information about the error
      title: JSONAPIErrorObject
      type: object
    JSONAPIErrorResponse:
      additionalProperties: false
      description: Serializer for a JSON:API error response.
      example:
        errors:
        - code: code
          meta: ""
          detail: detail
          source: ""
          title: title
          status: status
        - code: code
          meta: ""
          detail: detail
          source: ""
          title: title
          status: status
      properties:
        errors:
          description: Array of error objects
          items:
            $ref: "#/components/schemas/JSONAPIErrorObject"
          type: array
      required:
      - errors
      title: JSONAPIErrorResponse
      type: object
    JSONAPIErrorSource:
      additionalProperties: false
      description: Serializer for the 'source' object in a JSON:API error.
      properties:
        pointer:
          description: JSON Pointer to the value in the request document that caused
            the error
          maxLength: 4096
          minLength: 1
          type: string
        parameter:
          description: URI query parameter that caused the error
          maxLength: 4096
          minLength: 1
          type: string
        header:
          description: Request header name that caused the error
          maxLength: 4096
          minLength: 1
          type: string
      title: JSONAPIErrorSource
      type: object
    OpenAPISchema:
      additionalProperties: false
      example:
        product_version: product_version
        last_editor: last_editor
        name: name
        active: true
        id: 0
        last_modified: 2000-01-23T04:56:07.000+00:00
        status: ""
      properties:
        id:
          format: int64
          type: integer
        name:
          maxLength: 50
          minLength: 6
          type: string
        status:
          allOf:
          - $ref: "#/components/schemas/StatusEnum"
        active:
          type: boolean
        last_modified:
          format: date-time
          type: string
        last_editor:
          description: Last editor of the schema.
          nullable: true
          type: string
        product_version:
          type: string
      required:
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - status
      title: OpenAPISchema
      type: object
    PaginatedOpenAPISchemaList:
      additionalProperties: false
      example:
        count: 123
        results:
        - product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
        - product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
      properties:
        count:
          example: 123
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        results:
          items:
            $ref: "#/components/schemas/OpenAPISchema"
          type: array
      title: PaginatedOpenAPISchemaList
      type: object
    ResponseAsyncDeleteOpenAPISchema:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseAsyncDeleteOpenAPISchema
      type: object
    ResponseAsyncOpenAPISchema:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/OpenAPISchema"
      required:
      - data
      title: ResponseAsyncOpenAPISchema
      type: object
    ResponseAsyncSQLResult:
      additionalProperties: false
      example:
        data:
          columns:
          - ""
          - ""
          rows:
          - ""
          - ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/SQLResult"
      required:
      - data
      title: ResponseAsyncSQLResult
      type: object
    ResponseDeleteOpenAPISchema:
      additionalProperties: false
      example:
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
      title: ResponseDeleteOpenAPISchema
      type: object
    ResponseOpenAPISchema:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/OpenAPISchema"
      required:
      - data
      title: ResponseOpenAPISchema
      type: object
    ResponseRetrieveOpenAPISchema:
      additionalProperties: false
      example:
        data:
          product_version: product_version
          last_editor: last_editor
          name: name
          active: true
          id: 0
          last_modified: 2000-01-23T04:56:07.000+00:00
          status: ""
      properties:
        data:
          $ref: "#/components/schemas/OpenAPISchema"
      required:
      - data
      title: ResponseRetrieveOpenAPISchema
      type: object
    ResponseSQLResult:
      additionalProperties: false
      example:
        data:
          columns:
          - ""
          - ""
          rows:
          - ""
          - ""
        state: state
      properties:
        state:
          maxLength: 8
          minLength: 1
          type: string
        data:
          $ref: "#/components/schemas/SQLResult"
      required:
      - data
      title: ResponseSQLResult
      type: object
    SQLResult:
      additionalProperties: false
      example:
        columns:
        - ""
        - ""
        rows:
        - ""
        - ""
      properties:
        columns:
          items: {}
          type: array
        rows:
          items: {}
          type: array
      required:
      - columns
      - rows
      title: SQLResult
      type: object
    SQLStatementsRequest:
      additionalProperties: false
      example:
        statements:
        - statements
        - statements
        - statements
        - statements
        - statements
      properties:
        statements:
          items:
            minLength: 1
            type: string
          maxItems: 1000
          type: array
      required:
      - statements
      title: SQLStatementsRequest
      type: object
    StatusEnum:
      description: |-
        * `creating` - creating
        * `created` - created
        * `deleting` - deleting
      title: StatusEnum
      type: string
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    TokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
