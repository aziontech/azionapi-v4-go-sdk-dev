/*
edgesql-api

REST API OpenAPI documentation for the EdgeSQL API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgesqlapi

import (
	"encoding/json"
)

// checks if the PaginatedOpenAPISchemaList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedOpenAPISchemaList{}

// PaginatedOpenAPISchemaList struct for PaginatedOpenAPISchemaList
type PaginatedOpenAPISchemaList struct {
	Count *int64 `json:"count,omitempty"`
	Results []OpenAPISchema `json:"results,omitempty"`
}

// NewPaginatedOpenAPISchemaList instantiates a new PaginatedOpenAPISchemaList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedOpenAPISchemaList() *PaginatedOpenAPISchemaList {
	this := PaginatedOpenAPISchemaList{}
	return &this
}

// NewPaginatedOpenAPISchemaListWithDefaults instantiates a new PaginatedOpenAPISchemaList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedOpenAPISchemaListWithDefaults() *PaginatedOpenAPISchemaList {
	this := PaginatedOpenAPISchemaList{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *PaginatedOpenAPISchemaList) GetCount() int64 {
	if o == nil || IsNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedOpenAPISchemaList) GetCountOk() (*int64, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *PaginatedOpenAPISchemaList) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *PaginatedOpenAPISchemaList) SetCount(v int64) {
	o.Count = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *PaginatedOpenAPISchemaList) GetResults() []OpenAPISchema {
	if o == nil || IsNil(o.Results) {
		var ret []OpenAPISchema
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedOpenAPISchemaList) GetResultsOk() ([]OpenAPISchema, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *PaginatedOpenAPISchemaList) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []OpenAPISchema and assigns it to the Results field.
func (o *PaginatedOpenAPISchemaList) SetResults(v []OpenAPISchema) {
	o.Results = v
}

func (o PaginatedOpenAPISchemaList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedOpenAPISchemaList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullablePaginatedOpenAPISchemaList struct {
	value *PaginatedOpenAPISchemaList
	isSet bool
}

func (v NullablePaginatedOpenAPISchemaList) Get() *PaginatedOpenAPISchemaList {
	return v.value
}

func (v *NullablePaginatedOpenAPISchemaList) Set(val *PaginatedOpenAPISchemaList) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedOpenAPISchemaList) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedOpenAPISchemaList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedOpenAPISchemaList(val *PaginatedOpenAPISchemaList) *NullablePaginatedOpenAPISchemaList {
	return &NullablePaginatedOpenAPISchemaList{value: val, isSet: true}
}

func (v NullablePaginatedOpenAPISchemaList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedOpenAPISchemaList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


