openapi: 3.0.3
info:
  title: Orchestrator
  version: 1.0.0
  description: REST API OpenAPI documentation for the Orchestrator
paths:
  /edge_orchestrator/edge_nodes:
    get:
      operationId: list Edge Nodes
      description: List all Edge Nodes of your account.
      summary: List Edge Nodes
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: query
        name: hash_id
        schema:
          type: string
        description: Search by hash_id
      - in: query
        name: name
        schema:
          type: string
        description: Search by name
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Orchestrator - Edge Nodes
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListNodesList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
  /edge_orchestrator/edge_nodes/{nodeId}:
    get:
      operationId: retrieve Edge Node
      description: Retrieve details of a specific Edge Node in your account.
      summary: Retrieve details of an Edge Node
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: nodeId
        schema:
          type: string
        required: true
      tags:
      - Orchestrator - Edge Nodes
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveNodes'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    put:
      operationId: update Edge Node
      description: Update an existing Edge Node. This replaces the entire Edge Node
        with the new data provided.
      summary: Update an Edge Node
      parameters:
      - in: path
        name: nodeId
        schema:
          type: string
        required: true
      tags:
      - Orchestrator - Edge Nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodesRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Accepted
    patch:
      operationId: partial update Edge Node
      description: Update one or more fields of an existing Edge Node without affecting
        other fields.
      summary: Partially update an Edge Node
      parameters:
      - in: path
        name: nodeId
        schema:
          type: string
        required: true
      tags:
      - Orchestrator - Edge Nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNodesRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Accepted
    delete:
      operationId: delete Edge Node
      description: Delete an Edge Node.
      summary: Delete an Edge Node
      parameters:
      - in: path
        name: nodeId
        schema:
          type: string
        required: true
      tags:
      - Orchestrator - Edge Nodes
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteNodes'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteNodes'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
  /edge_orchestrator/edge_nodes/{nodeId}/:
    get:
      operationId: retrieve Edge Node2
      description: Retrieve details of a specific Edge Node in your account.
      summary: Retrieve details of an Edge Node
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Nodes
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveNodes'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    put:
      operationId: update Edge Node2
      description: Update an existing Edge Node. This replaces the entire Edge Node
        with the new data provided.
      summary: Update an Edge Node
      parameters:
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodesRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Accepted
    patch:
      operationId: partial update Edge Node2
      description: Update one or more fields of an existing Edge Node without affecting
        other fields.
      summary: Partially update an Edge Node
      parameters:
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNodesRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodes'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodes'
          description: Accepted
  /edge_orchestrator/edge_nodes/{nodeId}/groups:
    get:
      operationId: list Edge Node Groups by ID
      description: List all Groups of an Edge Node.
      summary: List Edge Node Groups by id
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Orchestrator - Edge Node Groups
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListNodeGroupsByIdList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodeGroupsById'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    post:
      operationId: bind Edge Node Group
      description: Create a bind between Node and Group.
      summary: Bind Node Group
      parameters:
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Node Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeGroupsByIdRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodeGroupsById'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodeGroupsById'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodeGroupsById'
          description: Accepted
  /edge_orchestrator/edge_nodes/{nodeId}/services:
    get:
      operationId: list Edge Node Services
      description: List all Services from an Edge Node.
      summary: List Node Services
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: service_name, id)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Orchestrator - Edge Node Services
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListNodeServicesList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodeServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    post:
      operationId: bind Edge Node Services
      description: Create a bind between Node and Service.
      summary: Bind Node Service
      parameters:
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Node Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeServicesRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodeServices'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodeServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncNodeServices'
          description: Accepted
  /edge_orchestrator/edge_nodes/{nodeId}/services/{bindId}:
    get:
      operationId: retrieve Edge Node Service Bind
      description: Retrieve details of a specific Edge Node Service Bind in your account.
      summary: Retrieve details of an Edge Node Service Bind
      parameters:
      - in: path
        name: bindId
        schema:
          type: integer
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Node Services
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveNodeServiceBind'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodeServiceBind'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    delete:
      operationId: unbind Edge Node Service
      description: Remove the bind between Node and Service.
      summary: Unbind Node Service
      parameters:
      - in: path
        name: bindId
        schema:
          type: integer
        required: true
      - in: path
        name: nodeId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Node Services
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteNodeServiceBind'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteNodeServiceBind'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestNodeServiceBind'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
  /edge_orchestrator/edge_nodes/groups:
    get:
      operationId: list Edge Node Groups
      description: List all Groups of an Edge Node.
      summary: List Edge Node Groups
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Orchestrator - Edge Node Groups
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNodeGroupsList'
          description: ''
    post:
      operationId: create Edge Node Group
      description: Create an Edge Node Group.
      summary: Create Edge Node Group
      tags:
      - Orchestrator - Edge Node Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeGroupsRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroups'
          description: ''
  /edge_orchestrator/edge_nodes/groups/{groupId}:
    delete:
      operationId: remove Edge Node Group
      description: Remove an Edge Node Group.
      summary: Remove Node Group
      parameters:
      - in: path
        name: groupId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Node Groups
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /edge_orchestrator/edge_services:
    get:
      operationId: list Edge Services
      description: Get the list of Edge Services of your account.
      summary: List Edge Services
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: query
        name: name
        schema:
          type: string
        description: Search by name
      - in: query
        name: ordering
        schema:
          type: string
        description: Field to order by, use '-' for descending
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      tags:
      - Orchestrator - Edge Services
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListServicesList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    post:
      operationId: create Edge Service
      description: Create an Edge Service.
      summary: Create Edge Service
      tags:
      - Orchestrator - Edge Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncServices'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncServices'
          description: Accepted
  /edge_orchestrator/edge_services/{serviceId}:
    get:
      operationId: retrieve Edge Service
      description: Retrieve details of a specific Edge Service in your account.
      summary: Retrieve details of an Edge Service
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Services
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveServices'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    put:
      operationId: update Edge Service
      description: Update an existing Edge Service replacing all fields.
      summary: Update an Edge Service
      parameters:
      - in: path
        name: serviceId
        schema:
          type: string
        required: true
      tags:
      - Orchestrator - Edge Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncServices'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncServices'
          description: Accepted
    patch:
      operationId: partial update Edge Service
      description: Update one or more fields of an existing Edge Service without affecting
        other fields.
      summary: Partially update an Edge Service
      parameters:
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServicesRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncServices'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncServices'
          description: Accepted
    delete:
      operationId: destroy Edge Service
      description: Destruction of a specific Edge Service in your account.
      summary: Destroy an Edge Service
      parameters:
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Services
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteServices'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAsyncDeleteServices'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestServices'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
  /edge_orchestrator/edge_services/{serviceId}/resources:
    get:
      operationId: list Resources of a Service
      description: List all resources of a Service owned by your account.
      summary: List Service Resources
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: |-
          Which field to use when ordering the results.
          (Valid fields: name, id)
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceResourceList'
          description: ''
    post:
      operationId: create Resource
      description: Create a Resource on a Service.
      summary: Create Service Resource
      parameters:
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResourceRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
          description: ''
  /edge_orchestrator/edge_services/{serviceId}/resources/{resourceId}:
    get:
      operationId: retrieve Resource
      description: Retrieve details of a specific Resource in your account.
      summary: Retrieve details of a Resource
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: resourceId
        schema:
          type: integer
        required: true
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceId'
          description: ''
    put:
      operationId: update Resource
      description: Update Resource in your account.
      summary: Update Resource
      parameters:
      - in: path
        name: resourceId
        schema:
          type: integer
        required: true
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResourceIdRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceId'
          description: ''
    delete:
      operationId: delete Resource
      description: Delete Resource from your account.
      summary: Delete Resource
      parameters:
      - in: path
        name: resourceId
        schema:
          type: integer
        required: true
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /edge_orchestrator/edge_services/{serviceId}/resources/{resourceId}/content:
    get:
      operationId: retrieve Resource Content
      description: Retrieve content of a resource.
      summary: Retrieve content of a Resource
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: resourceId
        schema:
          type: integer
        required: true
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    put:
      operationId: upload Resource Content
      description: Upload content of a Resource.
      summary: Upload content of a Resource
      parameters:
      - in: path
        name: resourceId
        schema:
          type: integer
        required: true
      - in: path
        name: serviceId
        schema:
          type: integer
        required: true
      tags:
      - Orchestrator - Edge Service Resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
      title: BlankEnum
      additionalProperties: false
    Content:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        content_type:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        content_hash:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
      required:
      - content_hash
      - content_type
      - id
      - last_editor
      - last_modified
      - name
      title: Content
      additionalProperties: false
    ContentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        content_type:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        content_hash:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
      required:
      - content_hash
      - content_type
      - name
      title: ContentRequest
      additionalProperties: false
    DefaultErrorResponse:
      type: object
      properties:
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: DefaultErrorResponse
      additionalProperties: false
    NodeGroups:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        ref_count:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
      required:
      - id
      - name
      - ref_count
      title: NodeGroups
      additionalProperties: false
    NodeGroupsById:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      title: NodeGroupsById
      additionalProperties: false
    NodeGroupsByIdRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        node_group:
          type: integer
          writeOnly: true
      title: NodeGroupsByIdRequest
      additionalProperties: false
    NodeGroupsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        active:
          type: boolean
          default: true
      required:
      - name
      title: NodeGroupsRequest
      additionalProperties: false
    NodeServiceBind:
      type: object
      properties:
        id:
          type: integer
        service_name:
          type: string
          maxLength: 50
          minLength: 1
        service_id:
          type: integer
        active:
          type: boolean
        last_editor:
          type: string
        last_modified:
          type: string
          readOnly: true
      required:
      - active
      - id
      - last_editor
      - last_modified
      - service_id
      - service_name
      title: NodeServiceBind
      additionalProperties: false
    NodeServices:
      type: object
      properties:
        id:
          type: integer
        service_name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        service_id:
          type: integer
        active:
          type: boolean
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
      required:
      - last_editor
      - last_modified
      - service_id
      title: NodeServices
      additionalProperties: false
    NodeServicesRequest:
      type: object
      properties:
        id:
          type: integer
        service_name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        service_id:
          type: integer
        active:
          type: boolean
      required:
      - service_id
      title: NodeServicesRequest
      additionalProperties: false
    Nodes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        hash_id:
          type: string
          readOnly: true
          pattern: .*
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        status:
          $ref: '#/components/schemas/StatusEnum'
        active:
          type: boolean
          readOnly: true
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
        modules: {}
        product_version:
          type: string
          readOnly: true
          pattern: \d+\.\d+
          maxLength: 50
          minLength: 3
      required:
      - active
      - hash_id
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - status
      title: Nodes
      additionalProperties: false
    NodesRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusEnum'
        modules: {}
      required:
      - name
      - status
      title: NodesRequest
      additionalProperties: false
    PaginatedNodeGroupsList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/NodeGroups'
      title: PaginatedNodeGroupsList
      additionalProperties: false
    PaginatedResponseListNodeGroupsByIdList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListNodeGroupsById'
      title: PaginatedResponseListNodeGroupsByIdList
      additionalProperties: false
    PaginatedResponseListNodeServicesList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListNodeServices'
      title: PaginatedResponseListNodeServicesList
      additionalProperties: false
    PaginatedResponseListNodesList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListNodes'
      title: PaginatedResponseListNodesList
      additionalProperties: false
    PaginatedResponseListServicesList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListServices'
      title: PaginatedResponseListServicesList
      additionalProperties: false
    PaginatedServiceResourceList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceResource'
      title: PaginatedServiceResourceList
      additionalProperties: false
    PatchedNodesRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusEnum'
        modules: {}
      title: PatchedNodesRequest
      additionalProperties: false
    PatchedServicesRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        active:
          type: boolean
        min_version:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        permissions:
          type: integer
      title: PatchedServicesRequest
      additionalProperties: false
    ResponseAsyncDeleteNodeServiceBind:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteNodeServiceBind
      additionalProperties: false
    ResponseAsyncDeleteNodes:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteNodes
      additionalProperties: false
    ResponseAsyncDeleteServices:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
      title: ResponseAsyncDeleteServices
      additionalProperties: false
    ResponseAsyncNodeGroupsById:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/NodeGroupsById'
      required:
      - data
      title: ResponseAsyncNodeGroupsById
      additionalProperties: false
    ResponseAsyncNodeServices:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/NodeServices'
      required:
      - data
      title: ResponseAsyncNodeServices
      additionalProperties: false
    ResponseAsyncNodes:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/Nodes'
      required:
      - data
      title: ResponseAsyncNodes
      additionalProperties: false
    ResponseAsyncServices:
      type: object
      properties:
        state:
          type: string
          default: pending
          pattern: .*
          maxLength: 8
          minLength: 1
        data:
          $ref: '#/components/schemas/Services'
      required:
      - data
      title: ResponseAsyncServices
      additionalProperties: false
    ResponseBadRequestNodeGroupsById:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        name:
          type: array
          items:
            type: string
        node_group:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestNodeGroupsById
      additionalProperties: false
    ResponseBadRequestNodeServiceBind:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        service_name:
          type: array
          items:
            type: string
        service_id:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestNodeServiceBind
      additionalProperties: false
    ResponseBadRequestNodeServices:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        service_name:
          type: array
          items:
            type: string
        service_id:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestNodeServices
      additionalProperties: false
    ResponseBadRequestNodes:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        hash_id:
          type: array
          items:
            type: string
        name:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        modules:
          type: array
          items:
            type: string
        product_version:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestNodes
      additionalProperties: false
    ResponseBadRequestServices:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        name:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        min_version:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        ref_count:
          type: array
          items:
            type: string
        product_version:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestServices
      additionalProperties: false
    ResponseListNodeGroupsById:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      title: ResponseListNodeGroupsById
      additionalProperties: false
    ResponseListNodeServices:
      type: object
      properties:
        id:
          type: integer
        service_name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        service_id:
          type: integer
        active:
          type: boolean
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
      required:
      - last_editor
      - last_modified
      - service_id
      title: ResponseListNodeServices
      additionalProperties: false
    ResponseListNodes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        hash_id:
          type: string
          readOnly: true
          pattern: .*
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        status:
          $ref: '#/components/schemas/StatusEnum'
        active:
          type: boolean
          readOnly: true
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
        modules: {}
        product_version:
          type: string
          readOnly: true
          pattern: \d+\.\d+
          maxLength: 50
          minLength: 3
      required:
      - active
      - hash_id
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      - status
      title: ResponseListNodes
      additionalProperties: false
    ResponseListServices:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        active:
          type: boolean
        min_version:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        permissions:
          type: integer
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
        ref_count:
          type: integer
          readOnly: true
        product_version:
          type: string
          readOnly: true
          pattern: \d+\.\d+
          maxLength: 50
          minLength: 3
      required:
      - id
      - last_editor
      - last_modified
      - product_version
      - ref_count
      title: ResponseListServices
      additionalProperties: false
    ResponseRetrieveNodeServiceBind:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NodeServiceBind'
      required:
      - data
      title: ResponseRetrieveNodeServiceBind
      additionalProperties: false
    ResponseRetrieveNodes:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Nodes'
      required:
      - data
      title: ResponseRetrieveNodes
      additionalProperties: false
    ResponseRetrieveServices:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Services'
      required:
      - data
      title: ResponseRetrieveServices
      additionalProperties: false
    ServiceResource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        content_hash:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 150
          minLength: 1
        content_type:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        file_group:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        file_mode:
          type: string
          pattern: .*
          maxLength: 4
          minLength: 1
        file_owner:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        is_template:
          type: boolean
          readOnly: true
        active:
          type: boolean
          readOnly: true
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
        ref_count:
          type: integer
          readOnly: true
      required:
      - active
      - content_hash
      - content_type
      - file_group
      - file_mode
      - file_owner
      - id
      - is_template
      - last_editor
      - last_modified
      - name
      - ref_count
      title: ServiceResource
      additionalProperties: false
    ServiceResourceId:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        content_hash:
          type: string
          readOnly: true
          pattern: .*
          maxLength: 50
          minLength: 1
        content_type:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        trigger:
          oneOf:
          - $ref: '#/components/schemas/TriggerEnum'
          - $ref: '#/components/schemas/BlankEnum'
        content:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        is_template:
          type: boolean
          readOnly: true
        active:
          type: boolean
          readOnly: true
        file_group:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        file_mode:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        file_owner:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
      required:
      - active
      - content_hash
      - file_group
      - file_mode
      - file_owner
      - id
      - is_template
      - last_editor
      - last_modified
      - name
      title: ServiceResourceId
      additionalProperties: false
    ServiceResourceIdRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        content_type:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        trigger:
          oneOf:
          - $ref: '#/components/schemas/TriggerEnum'
          - $ref: '#/components/schemas/BlankEnum'
        content:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        file_group:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        file_mode:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        file_owner:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
      required:
      - file_group
      - file_mode
      - file_owner
      - name
      title: ServiceResourceIdRequest
      additionalProperties: false
    ServiceResourceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        content_type:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        file_group:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        file_mode:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 4
        file_owner:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
      required:
      - content_type
      - file_group
      - file_mode
      - file_owner
      - name
      title: ServiceResourceRequest
      additionalProperties: false
    Services:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        active:
          type: boolean
        min_version:
          type: string
          pattern: .*
          maxLength: 50
          minLength: 1
        permissions:
          type: integer
        last_editor:
          type: string
          readOnly: true
          pattern: .*
        last_modified:
          type: string
          readOnly: true
          pattern: .*
        ref_count:
          type: integer
          readOnly: true
        product_version:
          type: string
          readOnly: true
          pattern: \d+\.\d+
          maxLength: 50
          minLength: 3
      required:
      - id
      - last_editor
      - last_modified
      - product_version
      - ref_count
      title: Services
      additionalProperties: false
    ServicesRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        active:
          type: boolean
        min_version:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 50
        permissions:
          type: integer
      title: ServicesRequest
      additionalProperties: false
    StatusEnum:
      enum:
      - waiting_authorization
      - authorized
      type: string
      description: |-
        * `waiting_authorization` - waiting_authorization
        * `authorized` - authorized
      title: StatusEnum
      additionalProperties: false
    TriggerEnum:
      enum:
      - install
      - uninstall
      - reload
      type: string
      description: "* `` - \n* `install` - install\n* `uninstall` - uninstall\n* `reload`\
        \ - reload"
      title: TriggerEnum
      additionalProperties: false
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
